%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 9.0
%%For: (\260\355\267\301 ) (\260\355\267\301\300\307\307\320)
%%Title: (857.ai)
%%CreationDate: 3/25/2002 6:34 PM
%%BoundingBox: 222 319 376 558
%%HiResBoundingBox: 222.1875 319.2939 375.2578 557.4043
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 298.5 420.3887 298.5 420.3887
%AI3_TileBox: 15.5 14.3887 581.5 826.3887
%AI3_DocumentPreview: None
%AI5_ArtSize: 595 842
%AI5_RulerUnits: 1
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -194.5 742.3887 1 1002 661 18 0 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:15.5 14.3887
%%AI3_PaperRect:-15 827 580 -15
%%AI3_Margin:15 -15 -14 15
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 84 128 8
%%BeginData: 14132 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD52FCC2FFFD52FCBCFFFD52FCC2FFFD06FC8C4BF820F827F820F8
%27F820F827F820F827F820F827F820F827F820F827F820F827F820F827F8
%20F827F820F827F820F827F820F827F820F827F820F827F820F827F82020
%8CFD06FC99FFFD05FC442727527DA17D7D7DA17D7D7DA17D7D7DA17D7D7D
%A17D7D7DA17D7D7DA17D52F8A17D7D7DA17D7D7DA17D7D7DA1FD047DF8F8
%52A17D7D7DA17D7D7DA17D7D5227F852524BF84BFD05FCC2FFFD04FC44F8
%7DFD1DFFF8F852FD0FFFF8F8F827FD08FF5227FD04F827FFFFA8F827FD04
%FCBBFFFCFCFC8C277DFD1DFF7DF8F8F87DFD0DFFFD05F87DFD04FFA852FD
%08F8A8FFFFA8F893FCFCFCC2FFFCFCFC4AF8FD0BFFA1F8277DFD0FFF27FD
%04F8A1FD0AFFCFFD07F8FFFFFF27FD0AF876FFFFFF4B20FCFCFCBBFFFCFC
%FC2652FD0BFFA1FD04F8275252A8FD0AFFFD05F827FD0AFFFD08F8FFA8FD
%0CF827FFFFFF5227FCFCFCC2FFFCFCFC4B27FD0BFFA8FD0AF82752A8FD04
%FF52FD06F852FD08FF27FD08F852FD0DF827FFFF52F8F8FCFCFCBCFFFCFC
%FC4B52FD0CFFFD0DF8277DFFFF27FD07F8FD07FF52FD18F87DF8F8F827FC
%FCFCC2FFFCFCFC4B27FD0CFF27FD0FF8CFFD08F827FD05FFA8FD1EF8FCFC
%FC99FFFCFCFC4B52FD0CFFFD19F827FD05FF52FD1DF827FCFCFCC2FFFCFC
%FC4B27FD0CFF27FD19F87DFD04FFFD1FF8FCFCFCBBFFFCFCFC2652FD0CFF
%27FD19F827FFFFFF52FD1EF827FCFCFCC2FFFCFCFC4B27FD0CFF27FD19F8
%27FFFFFF27FD1FF8FCFCFCBBFFFCFCFC2652FD0CFF27FD1AF8FFFFFFFD1F
%F827FCFCFCC2FFFCFCFC4B27FD0CFF27FD1AF8FFFF7DFD20F8FCFCFCBCFF
%FCFCFC4B52FD0CFF27FD1AF8A8A852FD1FF827FCFCFCC2FFFCFCFC4B27FD
%0CFF52FD1DF820FD1DF852F8FCFCFC99FFFCFCFC4B52FD0CFF52FD1AF827
%8CFCFCFC684B2027FD17F8277D27FCFCFCC2FFFCFCFC4B27FD0CFF7DFD1A
%F88CFD0AFC92FD13F827FF7DF8FCFCFCBBFFFCFCFC2652FD0CFFA8FD1AF8
%FD0CFCB4FD09F82744B4FC9220F8F87DFFFF7D27FCFCFCC2FFFCFCFC4B27
%FD0DFFFD19F84AFD0EFCFD07F86EFD06FC8C26F8A7FF7DF8FCFCFCBBFFFC
%FCFC2652FD06FF7D4BF8F8F82727FD19F868FD0EFC4BFD05F893FD09FC4B
%F87D7D27FCFCFCC2FFFCFCFC4B27FD06FF52FD1FF8FD0FFC20FD04F88CFD
%0BFC8CF827F8FCFCFCBCFFFCFCFC4B52FD08FF5227FD1CF820B4FD0DFC27
%F8F8F827FD0DFCB4F827FCFCFCC2FFFCFCFC4B27FD0AFF52FD17F8278CFC
%8C26F8FD07FC8C4A204B6868FD04F844FD0EFC26F8FCFCFC99FFFCFCFC4B
%52FD0BFF7DFD15F84BFD05FC2720FD05FC6827F84B20FD06F82744FCFCB5
%68B4FD08FC6827FCFCFCC2FFFCFCFC4B27FD0CFF52FD14F8FD06FC8CF88C
%FC684AF82044FD04FC8C446F8CFC68F82026F827F88CFD07FC6EF8FCFCFC
%BBFFFCFCFC2652FD0DFF27FD12F868FD07FCF827F827206FFD0CFC68F8F8
%92FC6FF8FD07FC6827FCFCFCC2FFFCFCFC4B27FD0DFFA8FD12F8FD07FCF8
%F8448CFD10FC4420FCFCFCF844FD06FC6EF8FCFCFCBBFFFCFCFC2652FD0E
%FF7DFD10F893FD06FC20278CFD12FCB5F8FCFCFC4427FD06FC6827FCFCFC
%C2FFFCFCFC4B27FD0FFF51FD0FF8FD06FC44F88CFD14FCF8FD04FCF86EFD
%05FC6FF8FCFCFCBCFFFCFCFC4B52FD10FF27FD0DF844FD06FC2720FD14FC
%B4F8FD04FC4BF8B4FD04FC6827FCFCFCC2FFFCFCFC4B27FD11FF27FD0CF8
%FD07FCF84BFD0CFC8C6868FD05FC4420FD05FC27F8FD04FC68F8FCFCFC99
%FFFCFCFC4B52FD12FF27FD0AF86FFD07FC4B20FD09FC8C6F20F8F8F820FC
%684BF8F8F8B5FD04FC8C2720FCFCFC4427FCFCFCC2FFFCFCFC4B27FD13FF
%7D27FD08F8FD08FC8CF868FD06FC4BF8F8F84B68FC8C2020F8206F682020
%FD05FC8C2020FC8CF8F8FCFCFCBBFFFCFCFC2652FD15FFA82727FD04F88C
%FD07FC8C27F82068FD04FC4BF86FFD06FC20F844FCFCFC68F844FD05FC68
%F820272727FCFCFCC2FFFCFCFC4B27FD19FF52F868FD08FC4BF8FC44F820
%8CFCFCF868FD07FC20F8FD05FC20F868FD05FCF8F8277DF8FCFCFCBBFFFC
%FCFC2652FD18FFA8F844FD08FC93F893FCFC6827FD04F8FD05FC93F8F8F8
%27FD06FC20278CFD04FC2720277D27FCFCFCC2FFFCFCFC4B27FD18FF2720
%FD09FC2027FD08FCF8FD05FCF851C6C6F86FFD06FCF84BFD04FCF868F87D
%F8FCFCFCBCFFFCFCFC4B52FD17FF7DF8B4FD09FC2720FD08FCF8FD04FC20
%27C6C6C65120FD06FCB4F893FCFC6820FC275227FCFCFCC2FFFCFCFC4B27
%FD17FF2726FD0AFC204AFD08FCF8FCFCFC68F89EC6C6C6264AFD06FC68F8
%F86E44F820FCF852F8FCFCFC99FFFCFCFC4B52FD17FF2768FD0AFC6FF8FD
%07FC68F8FCFCFC274BFD04C65126FD06FC276827F82744FCFCF85227FCFC
%FCC2FFFCFCFC4B27FD15FFA87DF8FD0BFC8CF844FD05FC44F8F86FFC6EF8
%FD05C6264AFD05FC6F20FC8CF88CFCFCFCF87DF8FCFCFCBBFFFCFCFC2652
%FD10FFA852F827FD04F88CFD0AFC6FF8F8F84B444BF827686FF86FF875FD
%05C62768FD04FCB4F893FCFC204BFCFC68277D27FCFCFCC2FFFCFCFC4B27
%FD0EFF7DFD09F86EFD0AFCF84B8C4AF84B2068FCFCFC68F826FD05C69EF8
%6EFD04FC2020FCFCFC6EF8FCFC4A207DF8FCFCFCBBFFFCFCFC2652FD0CFF
%7D27FD0AF820FD0AFCF88CFCFC2744FD06FC934BFD05C64A2720FCFCFC68
%F868FCFCFC8CF8FCFC20527D27FCFCFCC2FFFCFCFC4B27FD09FFA852FD0E
%F8FD0AFCF8FCFCFC6820F88CFD04FC6827FD04C67AF868F8206E44F820FD
%05FCF8FCFC204B7DF8FCFCFCBCFFFCFCFC4B52FD08FF27FD10F86FFD09FC
%F88CFCFCFC8C4BF86FFCFCFCB4F87BC6C7262744FC8C4B2027F84BFD05FC
%F8FCFC207D7D27FCFCFCC2FFFCFCFC4B27FD08FF52FD11F88CFD08FCF84A
%FD05FC6EF820FCFCFC8CF8F8F82668FD06FC2620FD05FCF8FCFC267D7DF8
%FCFCFC99FFFCFCFC4B52FD09FFA8FD11F893FD07FC6FF8B5FD05FCB4F827
%FCFCFC4B20FD08FC27F893FD04FC6827FCFC20527D27FCFCFCC2FFFCFCFC
%4B27FD0AFFA8FD11F86EFD07FC2020FD06FC6EF82044FCF86FFD06FC8C27
%F820FD05FC2720FCFCF87D7DF8FCFCFCBBFFFCFCFC2652FD0BFF52FD11F8
%27FD06FC8CF844FD05FCF84B20F8F8F868FD05FC68F8206F20FD04FC92F8
%274427F8277D27FCFCFCC2FFFCFCFC4B27FD0CFF52FD12F88CFD05FC68F8
%68FD04FCF8FCFC686EF868FD04FC20F844FC4426FD04FCF826202644FCF8
%52F8FCFCFCBBFFFCFCFC2652FD0BFFA85227FD11F82744FD05FC44278CFC
%FCFCF86FFCFCFC2768FCFCFC202768FCFC4BF8B4FCFC20278CFD04FC6FF8
%27FCFCFCC2FFFCFCFC4B27FD09FFA827FD16F820FD05FCF827FCFCFC6FF8
%68FCFC2020FCFCF8F868FCFC4AF827F820F8278CFD05FC8CF8F8FCFCFCBC
%FFFCFCFC4B52FD08FF52FD19F820FD04FC4BF8278C9220F8F86FFCB42020
%F82068FC6827F892FC9368B4FD08FCF827FCFCFCC2FFFCFCFC4B27FD07FF
%27FD1CF88CFC6EF84AF8F8F820F86FF84AFCFC684A8C8CF8F820FD0DFC8C
%F8F8FCFCFC99FFFCFCFC4B52FD06FF27FD20F86FFD04FC4427FC93F8278C
%FCFC4BF8278CFD0EFC6FF827FCFCFCC2FFFCFCFC4B27FD05FF52FD1FF88C
%FD06FC4A20FCFCFCF8F82020F82720FD0FFCF84BF8FCFCFCBBFFFCFCFC26
%52FD04FFA8FD20F8278CFD05FC444BFD04FC444B44B4204BFD0DFC6FF827
%7D27FCFCFCC2FFFCFCFC4B27FD05FFF852A8A827FD1BF820F8FD05FC4B20
%FD08FC4A20FD09FC8C4AFD05F852F8FCFCFCBBFFFCFCFC2652FD0AFFA852
%FD19F8FFF84BFD04FC444BFD08FC204BFD07FC6FFD09F827FCFCFCC2FFFC
%FCFC4B27FD0DFF5227FD15F876FFFFF84BFCFCFC6F20FD08FCF868FD05FC
%8C20FD0BF8FCFCFCBCFFFCFCFC4B52FD10FF522727F8F8F827FD0CF827FF
%FFFF7DF893FCFC8C208CFD06FC6FF8FD05FC8C27FD0BF827FCFCFCC2FFFC
%FCFC4B27FD16FFA8FD0CF852FD04FF27F86EFC4AF827FD06FCF86FFD04FC
%8CFD0EF8FCFCFC99FFFCFCFC4B52FD16FF27FD0BF827FD06FF52FD05F827
%8CFCFC6FF8F82093FCFC6827FD0DF827FCFCFCC2FFFCFCFC4B27FD0DFFA8
%FD08FF20FD0AF827FD09FF52FD1EF8FCFCFCBBFFFCFCFC2652FD0CFFA8F8
%27FD06FFA8FD09F82752FD0AFF52FD0AF852FD04FF52FD0DF827FCFCFCC2
%FFFCFCFC4B27FD0DFF7D27F852FD04FF7DFD08F852A8FD0AFFCFFD0BF8CF
%FD04FF7CFD0EF8FCFCFCBBFFFCFCFC2652FD0FFFA1F8277DFFFFA8FD05F8
%527DFD0DFF27FD0AF827FD05FFA8FD0DF827FCFCFCC2FFFCFCFC4B27FD11
%FF52F827FFFFF8F87DFD10FF7DFD0CF8FD06FFFD0EF8FCFCFCBCFFFCFCFC
%4B52FD0BFF7DA8FD05FFA827F87D7CFD11FFA827FD0BF827FD06FF27FD0C
%F827FCFCFCC2FFFCFCFC4B27FD0BFFF8F84BFD06FF7DF827A8FD0FFFA8FD
%0EF8FD06FF7DFD0DF8FCFCFC99FFFCFCFC4B52FD0BFFF87427F82752A8FD
%04FF27277DFD0DFF7DFD0EF827FD07FF27FD0BF827FCFCFCC2FFFCFCFC4B
%27FD0BFFF875C6C65027F82727A7FFFF52F852FD0BFF27FD10F8FD07FF52
%FD0CF8FCFCFCBBFFFCFCFC2652FD0BFF5226FD04C6C75027F82727A852F8
%7DFD07FF7D52FD0BF8A8FD06F8A8FD07FFFD0BF827FCFCFCC2FFFCFCFC4B
%27FD0BFF5227C67BF8279EC650754A27F82727F87DFD05FF52FD0CF8A8FF
%76FD05F87DFD07FF52FD07F8FFF8F8F8FCFCFCBBFFFCFCFC2652FD0CFFF8
%C6F84BF827C62720F8F8754BF8F827FD06FF5227FD07F852A8FD04FF27FD
%05F8FD08FF27FD05F852FF7DF827FCFCFCC2FFFCFCFC4B27FD0CFF2074F8
%8C6F20C6F8274A4BF8277426F852FD09FFA87DFD0AFF52FD04F852FD07FF
%52FD05F8A8FFFFF8F8FCFCFCBCFFFCFCFC4B52FD0CFF26754AF8F851C627
%2627F84B26277A27F8A8FD04FF7D522752527DFD0BFF7DF8F8F827A8FD07
%FFFD04F827FFFFFF2727FCFCFCC2FFFCFCFC4B27FD0CFFF820C69E9EC6C6
%F8F8F827F8F826F87426F8A827F8F82727522727F8F8F87DFD0AFF52F8F8
%27FD07FF52F8F8F87DFFFFFF7DF8FCFCFC99FFFCFCFC4B52FD0BFF7DF827
%C6C6749FA451F84B20F8262727F8F827F8F8F82727A8FD04FFA852F82752
%FD0AFF7D277DFD06FFA827F8F8FD04FF7D27FCFCFCC2FFFCFCFC4B27FD0B
%FFF86EF8C626F8F82774F8F8F820FD05F826F8747B504BF8F852FD05FF52
%27F876FD12FF27F8F8FF7DFFFF7DF8FCFCFCBBFFFCFCFC2652FD0AFF2727
%FC2750F88CFCF8C7F8F82627F8F8F8275027F827F82626A55026F8A8FD05
%FF7DF8277DFD10FFA8F852FF277DFF7D27FCFCFCC2FFFCFCFC4B27FD09FF
%A8F8F8202026F84B4420C6272027F8F8F85150F820F8F8272627F8279E27
%F876FD06FF27F827FD10FFF85276F8FFFF7DF8FCFCFCBBFFFCFCFC2652FD
%09FF4BF89344F8F87B20274AC674F8F827517BF82751F8F8272627F82720
%F8749FF852FD06FF7D27F8FD0FFF27CAF87DFFFF5227FCFCFCC2FFFCFCFC
%4B27FD09FFF826F8272026F8FD05C6F8F826F8F8C626F8F84B2627F82626
%F8F827C69FF827FD06FFA827F8A8FD0EFFF827FFFFFF27F8FCFCFCBCFFFC
%FCFC4B52FD09FFF820924427F8F826C6C6C69EF8F8275027F8C7F827F8F8
%F8514AF8F827C6C6C6C7F827FD07FF7CA8FD0DFF2727A8FFFF27F827FCFC
%FCC2FFFCFCFC4B27FD09FFF827F8F8204B20F826C6C620F87550F82027FD
%04F82651F8F8F875C6C674C6C6C6F827FD13FFCFF827A8FFFF27F875F8FC
%FCFC99FFFCFCFC4B52FD09FFF8F84B444B444B2027F84BF84BF827742726
%F8F8512627F82726C7C6C7F8F8F875C69FF87DFD11FFA8F827A8FFA827F8
%9F7427FCFCFCC2FFFCFCFC4B27FD09FFF82720FD06F820F8F8F85126F874
%20F851264BF851FD04C626F8686EF8C6C69EF876FD0FFF76F852FFA827F8
%26C6C67BF8FCFCFCBBFFFCFCFC2652FD09FF27F820204B202720FD04F827
%F82750F8F875C675F827F84BC6C6C69FF8FC8CF8C6C6C69FF87DFD0DFF27
%F8A8A827F8F874C6C6C67427FCFCFCC2FFFCFCFC4B27FD09FF4BF8446F20
%4A204B20F8F827F8F8F826F851C6C6F84AFC92F8FD04C626F8F820FD04C6
%51F87DFD0BFF27F852F8F82626F84BF8F8F87BF8FCFCFCBBFFFCFCFC2652
%FD0AFFF827FD05F827F827F851F827F89FC6C6C675F8934427FD05C6A59E
%C69E752627F827277DFD09FFA1F827F87B9E27F84BF8278C275127FCFCFC
%C2FFFCFCFC4BF85227527DFD06FFA7F84B446E2027F8F8F84BF8F820F8F8
%75C6C6C627F8F850FD07C626F8F8527DFD04FFA85227F8F8F82727A8F827
%26C626F8269EF8F820FCF851F8FCFCFCBCFFFCFCFC2627204B20F8F87DFD
%05FFA8F8F8F827F827FD05F892F84BF82774FD0AC675F82752FD047D5227
%27F827277DA8FF5227F8F8F851F8277451F827F827F8277427FCFCFCC2FF
%FCFCFC4B20FD04FC4AF84BFD06FF525227F8F892F820F827444AF88C20F8
%F85174C6C6C69E7B26F8F8522727F827F82727527CFFFFFFA127F8F8F820
%F820F84B26F8F87B2627C6C6C67BF8FCFCFC99FFFCFCFC4B4BFD05FC93F8
%272627204B7DFFFFFF20274427F82744278C4BF893202727FD06F8527DFD
%0DFF27F8269FC69FF8272627F8277475F8F8F82726C75027FCFCFCC2FFFC
%FCFC4B20FD07FC204A686F20F826FFFF7DF82720F82027F820FC27F827A8
%FD14FFA8F82674C67426F827F8277427F8F8F851F82068272626F8FCFCFC
%BBFFFCFCFC204BFD0CFC8C2727FFFF76F827F84BF893F820F852FD14FFA8
%52F84B5027F8274A7BF8272626F8F8509F26F868FC4427F827FCFCFCC2FF
%FCFCFC4B20FC684A68FD09FC8CF852FFFF7DFD06F820A8FD0DFFA87DFD04
%FFA827FD04F827267B9E4BF827F84B74C6F827FD04F820F8F852F8FCFCFC
%BBFFFCFCFC264B2027F827F86FFD08FC4427FD04FFA87D7DA8FD10FF27F8
%F8272627F84B7451F8514B4BF8F8267BF8275127F827F89FF8A59E27F852
%7D27FCFCFCC2FFFCFCFC4BF8278CFCFC6FFD04F820FD05FCF8FD18FFF89E
%7B4A7574C6C6C67AF8265126757427F827F82750C69EF826274A20F826F8
%27F8FCFCFCBCFFFCFCFC2027FD05FC9368FC682720FD04FCF8FD17FFA8F8
%C6C675F82726C7C6C6F827F827F8F8264BF8F8507B26FD08F84BF827FCFC
%FCC2FFFCFCFC4B20FD09FC8CF88CFCFCFCF87DFD16FFA8F89EC6F8206820
%74C6C675F8274A4B26F8F875F8F8F84B4AF8F86E68688C92F8F8F8FCFCFC
%99FFFCFCFC4B4BFD0AFC206FFCFCFC6FF84BFD16FFF875C6274493F89F9E
%515151F82726519E75F827F827F8272627204BF827F84B2027FCFCFCC2FF
%FCFCFC4B20FD0AFC2068FD04FC8CF852FD06FF51512752A8FD0AFF52F89F
%7426F84B9EF8F827F851F827F8F8F82720F820C6C627F84B204A686FF8F8
%F8FCFCFCBBFFFCFCFC204BFD06FC8C6F6827F8FD06FC92F82752FFA84BF8
%27204B20F852FD0AFF27F87BC6C6C67BF8B4FCF8C69FF827F820F8F820F8
%2027F8F8F827F8F8F86F20F8FCFCFCC2FFFCFCFC4B20FD06FC4AF82620FD
%08FC202026F8F8F88CFD04FC68F852FD09FFA851F8F8F85174F82020F8C6
%20F8F827F82044F8F8262626F86E204B2020F8F8F8FCFCFCBBFFFCFCFC26
%4BFD12FC204BFC9344FD07FC6827FD0CFFA87D27F84B27209FC6F8F8F820
%6FF8274427F8272627F827204B2027F827FCFCFCC2FFFCFCFC4B20FCFCFC
%8CFD07FC44FD06FC2044FD0BFCF87DFD0EFF7CF8269E9E51F8262020F84A
%44F820F8F8F820FCFC924420F87DF8FCFCFCBCFFFCFCFC4B27FCFC8C2720
%FD05FC44F868FD04FC27F8FD0BFC8C27F8F8F852A8FD0BFF5227FD05F84B
%446FF8204427F86FF827F8F8F82752FF7D27FCFCFCC2FFFCFCFC4BFD04F8
%20F8F86E686EF8F820F8206E4420F892FD07FC6E204A206E8CFC8C6E20F8
%4BFD07FFA127F8F8F852FFCFF826F8F8F86F44F820FCF827FD07FF7DF8FC
%FCFC99FFFCFCFC4B4B444B68FC8C4B20F8F84B8CFC684BF82744FD07FC8C
%27F827204BF8F844FCFCFC68272752F8274B7DFF2720B4FC93F852FF52F8
%4B684BF8276893F827A8FD07FF7D27FCFCFCC2FFFCFCFC4B20FD0DFC68F8
%68FD08FC4AF892FD04FC8C8CFD04FCF820204A444BF8F8F8FD04FC92F827
%F827F8F8F8272026F84BA8FD08FF7DF8FCFCFCBBFFFCFCFC204BFD0CFC68
%F8446FF8F820B4FD04FC44F8FD0BFC2744FCFC92F827F827FD05FC27206F
%4427F84B272727A8FD0AFF7D27FCFCFCC2FFFCFCFC4A20FD07FCF8262020
%F8F84426F86E6820F8FD05FCF86EFD09FC92F88CFCFCF820FD08FC8CFD04
%FC27FD05F84BFFFFFF7D274B51A7FF7DF8FCFCFCBBFFFCFCFC442768FD04
%FCB42027684B2093FC93F893FCFCFC2744FCFCB544F8F84B68FD05FC8C6F
%F84BFCFC6827FD0EFC44278CFCFC6FF8275227F84B4427F827274BFCFCFC
%C2FFFD04FCF8F8F8202027F8208CFCFC4A2027F820FD04FCF8F82020F827
%686E20F8F820F827F8F8F86FFCFCFC6FF8FC6827F8F8F8926826F827208C
%FD04FC686F686EF8F844FD05FC20F88CFCFCFCBCFFFD04FC6FF84B444B44
%93FCFC8C27F84B686F68FD04FC27F84B4492FD05FC93686F686F8CFD05FC
%682744F844938C4BF820446F684BF86FFC6FF820F827F8F868FD05FC68F8
%44FD04FCC2FFFD05FC68F8F8204A204B20F8F84B204A204B204A204BF820
%204B204A204B204A204B204A204B204A204B204AF8F8204A204B20F8F84B
%204A2027F820F827204A204B204A204B204AF8F844FD05FC99FFFD07FC68
%4B204B444B204B444B204B444B204B444B204B444B204B444B204B444B20
%4B444B204B444B204B204B204B444B204B444B204B4427204B444B204B44
%4B204B444B206F8CFD06FCC2FFFD52FCBBFFFD52FCC2FFFD52FCBBFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([\265\356\267\317]) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(\267\271\300\314\276\356 1) Ln
0 A
0 O
0 1 1 0 k
0 J 0 j 1 w 4 M []0 d0 XR
375.2578 319.2939 m
222.1875 319.2939 L
222.1875 557.4043 L
375.2578 557.4043 L
375.2578 319.2939 L
fu0 0 0 0 k
229.4834 541.6318 m
229.3164 337.1318 l
365.1504 329.7988 l
367.8174 331.4658 367.8174 336.7988 v
368.1504 540.6318 l
368.3164 548.9648 358.9834 550.2979 v
239.6499 550.2979 l
230.9834 550.1318 229.4834 541.6318 v
f0 0.2 1 0 k
285.8999 400.7988 m
284.5669 404.0488 281.2334 406.2988 v
277.8999 408.5488 270.0669 411.2158 265.7334 412.5488 c
261.3999 413.8818 255.7334 416.2979 254.7334 416.7148 c
253.7334 417.1318 252.8164 417.5488 y
252.3994 416.8818 252.5664 416.3818 v
252.7334 415.8818 254.3999 409.7148 254.8999 407.7148 c
255.3999 405.7148 255.4829 398.8828 255.3164 397.5488 c
255.1499 396.2148 260.4834 383.4648 y
263.8164 377.1318 l
267.3164 372.9648 l
272.8999 371.5488 l
279.9834 374.8818 l
286.6499 370.5488 292.3164 370.3818 v
297.9829 370.2148 306.6504 373.7988 307.4004 374.0488 c
308.1504 374.2988 310.8994 376.6309 314.7334 377.2148 c
318.5674 377.7988 321.0674 378.2988 y
315.5674 384.4648 314.4004 385.7148 v
313.2334 386.9648 308.1504 392.7148 302.5674 396.1318 c
296.9834 399.5488 291.4829 400.7979 287.8164 399.9648 c
286.7334 401.4658 285.8999 400.7988 v
f342.3174 373.1318 m
337.9844 373.5488 334.3174 372.0488 v
330.6504 370.5488 325.2334 366.5479 324.4004 365.9648 c
323.5674 365.3818 318.7334 363.0488 314.7334 362.3818 c
310.7334 361.7148 308.4014 363.4648 308.0674 363.6318 c
307.7334 363.7988 307.4834 363.3828 307.4834 363.0488 c
307.4834 362.7148 306.7334 360.1328 306.4834 358.5488 c
306.2334 356.9648 307.9014 352.2148 311.5674 350.3818 c
315.2334 348.5488 318.0674 350.1309 320.1504 347.7148 c
322.2334 345.2988 325.7334 343.7988 330.1504 345.1318 c
334.5674 346.4648 352.0674 345.4648 y
363.3174 357.6318 l
362.8174 363.0488 l
367.3164 367.4648 367.7334 368.9648 v
367.7334 391.6318 l
364.3174 386.5488 359.3174 383.6318 v
354.3174 380.7148 350.2334 379.5488 348.4834 379.0488 c
346.7334 378.5488 344.3994 375.9658 343.7334 373.7988 c
342.3174 373.1318 l
f0 1 1 0 k
335.4004 519.1318 m
324.7754 522.6318 l
314.9004 522.6318 l
309.7754 521.6318 l
305.4004 522.0068 302.6504 518.6318 v
299.9004 515.2568 295.8999 513.7568 y
284.3999 500.6318 l
281.6499 485.3818 l
278.7749 482.1318 276.8999 478.2568 v
275.0249 474.3818 273.7749 469.7568 274.0249 468.2568 c
274.2749 466.7568 290.6499 447.0068 y
300.0254 441.3818 l
304.7754 436.8818 306.2754 434.1318 v
307.7754 431.3818 311.9004 429.2568 315.0254 429.7568 c
318.1504 430.2568 321.6504 424.6318 y
332.7754 428.7568 l
338.4004 427.2568 343.4004 429.7568 v
348.4004 432.2568 351.5254 431.7568 y
361.4004 440.0068 l
365.5254 440.6318 366.4004 446.7568 v
367.2754 452.8818 362.6504 456.2568 y
363.4004 459.2568 363.4004 461.6318 v
363.4004 464.0068 364.4004 471.3818 364.6504 473.2568 c
364.9004 475.1318 366.0254 480.2568 362.5254 484.1318 c
367.7754 487.3818 368.0254 489.5068 v
367.7754 506.2568 l
366.7754 508.5068 364.6504 510.0068 v
362.5254 511.5068 359.2754 513.7568 357.6504 515.7568 c
356.0254 517.7568 346.6504 520.6318 y
335.4004 519.1318 l
f260.6499 408.7148 m
258.8994 408.9648 258.3164 406.6318 v
257.7334 404.2988 260.3999 403.7988 261.6499 403.6318 c
262.8999 403.4648 263.8994 405.2148 263.5664 406.9648 c
263.2334 408.7148 260.6499 408.7148 y
f263.2334 399.0488 m
261.4834 398.9648 260.6499 397.4648 v
259.8164 395.9648 260.4829 393.8828 262.5664 393.0488 c
264.6499 392.2148 266.8164 394.0488 266.8164 395.7988 c
266.8164 397.5488 265.4834 399.2988 263.2334 399.0488 c
f291.0664 382.2988 m
288.4834 383.1328 287.4834 380.5488 v
286.4834 377.9648 288.4834 376.3809 290.4834 376.2148 c
292.4834 376.0488 293.8164 376.9648 293.6499 379.7148 c
293.4834 382.4648 291.0664 382.2988 y
f306.1504 385.7148 m
303.6514 385.8818 302.8174 383.8818 v
301.9834 381.8818 302.9004 379.8809 305.1504 379.4648 c
307.4004 379.0488 308.9834 380.7148 308.9004 382.7148 c
308.8174 384.7148 307.4004 385.5479 306.1504 385.7148 c
f268.8164 383.8818 m
264.1494 384.6328 260.5664 389.2988 v
256.9834 393.9648 255.7334 401.6318 y
252.0664 397.2158 250.1499 392.7988 v
248.2334 388.3818 245.9829 373.3828 262.5664 373.2988 c
262.3169 365.8809 270.7334 364.4648 v
279.1499 363.0488 286.5664 371.6318 y
278.1494 375.3809 276.3164 377.7148 v
272.4834 375.7148 269.8999 374.9648 v
267.3164 374.2148 266.8994 376.0488 266.8164 377.0488 c
266.7334 378.0488 268.1494 382.9648 268.8164 383.8818 c
f315.1504 359.1318 m
312.4844 358.7148 312.3174 356.8818 v
312.1504 355.0488 313.9834 353.8818 315.9834 353.8818 c
317.9834 353.8818 318.9014 355.8818 318.8174 357.3818 c
318.7334 358.8818 316.9004 359.6318 315.1504 359.1318 c
f323.6504 354.4648 m
321.3994 353.9648 321.2334 351.7148 v
321.0674 349.4648 322.8994 349.0488 324.7334 348.6318 c
326.5674 348.2148 327.4834 350.2988 327.4834 352.3818 c
327.4834 354.4648 324.8174 354.7979 323.6504 354.4648 c
f362.2334 379.9648 m
359.9834 379.4658 359.4834 377.2988 v
358.9834 375.1318 361.8174 373.7988 363.5674 374.0488 c
365.3174 374.2988 365.3164 375.5488 365.2334 377.6318 c
365.1504 379.7148 363.3164 380.2148 362.2334 379.9648 c
f361.1504 370.1318 m
358.5674 370.6318 357.6504 368.1318 v
356.7334 365.6318 359.1504 364.3809 360.6504 364.2148 c
362.1504 364.0488 363.7344 364.5488 363.8174 367.1318 c
363.9004 369.7148 361.1504 370.1318 y
f344.7334 353.3818 m
338.4844 351.7988 333.3174 352.7988 v
331.3174 349.2148 330.5674 345.8818 v
329.8174 342.5488 333.4004 338.1328 339.9004 337.7988 c
346.4004 337.4648 350.8164 342.2148 351.9834 345.2148 c
348.2334 345.9648 344.7334 353.3818 v
f352.0674 345.4648 m
353.9834 349.7148 352.4004 357.7148 v
361.9004 361.7148 362.4004 362.8818 v
367.4844 361.1318 367.8174 358.1318 v
367.4834 350.7988 l
366.6514 346.7979 361.0674 345.2148 v
355.4834 343.6318 352.0674 345.4648 y
f366.1504 331.4648 m
359.2334 337.6328 350.9004 331.5488 v
344.9004 338.6328 337.9004 334.2988 v
336.9834 337.6309 333.7334 338.2148 v
330.4834 338.7988 328.4004 337.2988 y
326.1504 342.2988 322.1504 342.7988 v
318.1504 343.2988 315.6504 339.7988 315.4004 338.1318 c
310.4824 341.7979 302.4834 339.2148 v
300.9844 344.0488 290.3999 345.0488 v
290.7329 350.7988 284.3164 352.6318 v
277.8999 354.4648 273.0664 349.2988 y
267.3169 351.3818 266.4834 351.6318 v
265.6499 351.8818 265.1499 352.6318 y
263.8999 355.4648 260.1499 356.9648 v
262.4263 362.2236 257.2334 366.9648 v
251.4834 372.2148 245.4834 369.2988 y
238.8164 377.5488 229.5664 374.5488 v
229.5664 334.9648 l
230.8164 326.9658 239.8164 326.5488 v
358.8174 326.8818 l
364.4834 326.7979 366.1504 331.4648 v
f0 0.2 1 0 k
333.5674 482.0479 m
329.9834 483.6318 328.4004 480.9648 v
326.8174 478.2979 321.9844 471.0479 321.5674 470.0479 c
321.1504 469.0479 320.9834 467.7988 320.9834 466.2148 c
320.9834 464.6318 321.9834 462.3809 323.4004 461.7979 c
324.8174 461.2148 328.8174 461.6318 331.6504 464.1318 c
334.4834 466.6318 335.9844 473.4648 336.0674 476.2979 c
336.1504 479.1318 335.4844 481.0479 333.5674 482.0479 c
f*u
1 D
0.65 0.53 0.51 1 k
239.4048 551.0068 m
233.5435 551.0068 228.7749 546.2383 228.7749 540.377 C
228.7749 336.5527 L
228.7749 330.6914 233.5435 325.9229 239.4048 325.9229 C
357.8965 325.9229 L
363.7578 325.9229 368.5264 330.6914 368.5264 336.5527 C
368.5264 540.377 L
368.5264 546.2383 363.7578 551.0068 357.8965 551.0068 C
239.4048 551.0068 L
f0 D
230.1919 336.5527 m
230.1919 540.377 L
230.1919 545.457 234.3247 549.5898 239.4048 549.5898 C
357.8965 549.5898 L
362.9766 549.5898 367.1084 545.457 367.1084 540.377 C
367.1084 336.5527 L
367.1084 331.4727 362.9766 327.3408 357.8965 327.3408 C
239.4048 327.3408 L
234.3247 327.3408 230.1919 331.4727 230.1919 336.5527 C
f*U
*u
1 D
327.0654 480.5322 m
325.9268 478.8682 324.5674 476.4883 323.3682 474.3887 c
322.2988 472.5176 321.29 470.75 320.7578 470.0664 c
319.8662 468.9199 320.0645 466.3975 320.6279 464.54 c
320.9531 463.4629 321.707 461.5879 323.0938 461.126 c
324.2178 460.751 327.0889 460.4189 329.9102 461.8408 c
332.375 463.084 334.1406 465.2949 335.1572 468.4121 c
336.1592 471.4834 336.5791 474.0771 336.5791 476.1797 c
336.5791 479.877 335.2783 482.0518 333.5488 482.6328 C
332.1484 483.1582 329.0205 483.3887 327.0654 480.5322 C
f0 D
323.541 462.4707 m
322.9961 462.6523 322.3848 463.626 321.9844 464.9512 c
321.4121 466.8389 321.4668 468.6699 321.877 469.1963 c
322.4697 469.959 323.457 471.6865 324.5986 473.6855 c
325.7852 475.7617 327.1289 478.1152 328.2354 479.7314 c
330.0508 482.3838 332.9453 481.3477 333.0674 481.3018 C
333.0938 481.293 L
335.1807 480.5977 336.1406 476 333.8096 468.8516 c
332.9141 466.1064 331.3877 464.1729 329.2715 463.1064 c
327.041 461.9824 324.623 462.1104 323.541 462.4707 c
f1 D
333.5488 482.6328 m
333.5547 482.6309 333.5635 482.6299 333.5693 482.627 C
333.541 482.6377 L
333.5439 482.6367 333.5459 482.6338 333.5488 482.6328 C
f*U
0 D
326.1836 489.7734 m
323.7881 488.6563 321.1621 488.3271 319.9004 488.1689 c
318.1045 487.9443 314.9063 484.8838 315.2793 481.7148 c
315.6035 478.9658 315.6133 474.709 315.4473 473.3857 c
315.3066 472.2656 316.4326 470.9639 316.9229 470.4561 c
317.9492 469.3945 319.5283 468.3027 320.8818 468.4258 C
320.7529 469.8369 L
320.082 469.7764 318.8994 470.4512 317.9424 471.4414 c
317.1426 472.2686 316.8242 472.9736 316.8535 473.21 c
317.0273 474.5947 317.0342 478.9414 316.6875 481.8809 c
316.4023 484.2969 319.1152 486.6426 320.0713 486.7617 c
321.4102 486.9297 324.1855 487.2773 326.7832 488.4893 c
328.3418 489.2168 330.1201 489.3926 331.3125 488.9375 c
331.9609 488.6904 332.416 488.2695 332.666 487.6855 c
333.5557 485.6113 332.6436 482.1855 332.6338 482.1514 C
334.001 481.7783 L
334.0449 481.9385 335.0537 485.7129 333.9688 488.2441 c
333.5674 489.1807 332.8242 489.8779 331.8184 490.2617 c
330.2617 490.8564 328.1025 490.6689 326.1836 489.7734 c
f338.4561 489.4795 m
337.0303 489.0723 333.8672 486.6914 332.9785 484.0225 C
334.3223 483.5742 L
335.0674 485.8105 337.8291 487.8271 338.8447 488.1162 c
340.9199 488.709 343.248 488.8525 343.6836 487.9814 c
344.5088 486.3311 347.085 482.5 349.0664 481.0586 c
350.1738 480.2529 350.998 479.043 351.0713 478.1162 c
351.0986 477.7656 351.0156 477.498 350.8164 477.2988 c
349.2617 475.7441 347.2783 471.2617 346.4971 469.4063 c
345.9268 468.0508 343.7344 463.7119 339.4961 464.8174 c
336.1914 465.6797 335.707 469.5469 335.6875 469.7119 C
334.2793 469.5527 L
334.3018 469.3496 334.8828 464.5566 339.1387 463.4463 c
342.7422 462.5059 345.9814 464.5283 347.8037 468.8564 c
349.3389 472.5039 350.8779 475.3555 351.8184 476.2969 c
352.3145 476.793 352.5439 477.4609 352.4844 478.2275 c
352.3779 479.5791 351.3633 481.1396 349.9004 482.2051 c
348.2539 483.4023 345.8311 486.8564 344.9512 488.6152 c
343.8467 490.8223 339.7012 489.835 338.4561 489.4795 c
f343.627 464.3203 m
343.7871 464.1416 345.1533 462.5195 343.5967 460.5742 c
342.5127 459.2188 340.4805 457.8945 338.6865 456.7256 c
337.293 455.8174 335.9756 454.959 335.1494 454.1328 C
333.7178 452.5508 L
332.1553 450.749 330.209 448.5068 328.4834 448.5068 c
327.5596 448.5068 326.7031 448.8906 326.0078 449.6172 c
324.9834 450.6875 324.4434 452.3818 324.5254 454.2676 c
324.6855 457.9541 325.6494 461.0547 325.6592 461.085 C
324.3076 461.5117 L
324.2656 461.3779 323.2783 458.2109 323.1094 454.3291 c
323.0107 452.0596 323.6934 449.9854 324.9834 448.6377 c
325.9395 447.6396 327.1826 447.0898 328.4834 447.0898 c
330.8564 447.0898 333.0361 449.6025 334.7881 451.6221 C
336.1514 453.1309 L
336.873 453.8525 338.1299 454.6709 339.4609 455.5381 c
341.3438 456.7656 343.4766 458.1553 344.7041 459.6885 c
346.5869 462.043 345.5059 464.375 344.6709 465.2783 C
343.627 464.3203 L
f351.1113 476.1201 m
354.5742 475.0664 357.2334 467.5898 356.2832 461.5752 c
355.6318 457.4463 353.1797 453.1094 350.4541 451.2637 c
349.7412 450.7803 348.6748 450.2539 347.6406 450.4893 c
345.4023 450.998 344.5283 451.7627 344.1885 452.3145 c
343.9668 452.6758 343.9053 453.0605 344.0049 453.459 c
344.3496 454.8379 344.3594 458.8457 344.3594 459.2979 C
342.9414 459.2979 L
342.9424 458.1172 342.8867 454.8271 342.6299 453.8037 c
342.4365 453.0322 342.5586 452.2617 342.9814 451.5723 c
343.6816 450.4326 345.1436 449.6025 347.3262 449.1074 c
348.5371 448.832 349.8936 449.1719 351.249 450.0898 c
354.3184 452.1689 356.9648 456.8018 357.6836 461.3545 c
358.7461 468.0879 355.6377 476.2236 351.5234 477.4756 C
351.1113 476.1201 L
f320.2568 505.0547 m
318.5566 503.9209 315.8857 502.335 312.3506 501.6611 c
309.0596 501.0342 304.5527 500.1748 301.8535 494.957 c
300.9668 493.2422 300.8984 491.2725 301.6572 489.2598 c
302.9492 485.8281 306.2754 482.9961 308.8926 481.9717 c
312.9541 480.3818 316.1377 481.7578 316.2715 481.8174 C
315.6982 483.1133 L
315.6699 483.1016 312.8965 481.9268 309.4082 483.292 c
307.1406 484.1787 304.1172 486.748 302.9834 489.7598 c
302.3623 491.4092 302.4053 492.9385 303.1133 494.3057 c
305.4951 498.9121 309.2783 499.6328 312.6162 500.2686 c
316.4043 500.9912 319.2402 502.6729 321.0439 503.876 c
323.1914 505.3076 325.8047 504.4404 326.5537 504.1406 C
327.4316 503.7715 L
329.0459 503.0791 330.875 502.293 332.374 502.793 C
333.7578 503.4297 L
334.9375 504.0449 336.1582 504.6816 337.293 504.0195 C
337.3926 503.9619 L
339.4258 502.7773 342.8281 500.7939 343.2793 496.8838 c
343.7471 492.8281 342.1982 489.6455 342.1826 489.6143 C
343.4512 488.9814 L
343.5234 489.125 345.2051 492.5557 344.6875 497.0459 c
344.1543 501.6611 340.2197 503.9541 338.1055 505.1865 C
338.0078 505.2441 L
336.1963 506.2998 334.4082 505.3672 333.1025 504.6865 C
331.9258 504.1377 L
330.9385 503.8086 329.3037 504.5098 327.9902 505.0742 C
327.0811 505.4561 L
326.1689 505.8213 322.9805 506.8711 320.2568 505.0547 c
f298.5161 482.1152 m
296.1421 477.3672 298.1694 472.0146 301.4736 470.1787 c
303.4658 469.0713 307.6914 468.707 311.3115 470.0146 c
314.0088 470.9883 315.9111 472.7266 316.8105 475.041 C
315.4902 475.5547 L
314.5459 473.127 312.4346 471.9268 310.8301 471.3477 c
307.6318 470.1934 303.8408 470.4854 302.1611 471.418 c
299.4238 472.9385 297.8257 477.5654 299.7842 481.4814 c
301.7227 485.3584 303.9004 485.7607 303.9219 485.7646 C
303.7236 487.168 L
303.6064 487.1514 300.8242 486.7305 298.5161 482.1152 c
f346.4785 503.4854 m
343.5166 502.7451 342.3867 500.3633 342.3398 500.2617 C
343.625 499.665 L
343.6611 499.7412 344.5381 501.5391 346.8223 502.1104 c
349.1885 502.7021 350.6006 500.7793 351.1328 498.7822 c
351.834 496.1504 355.0596 490.873 358.0146 488.2666 c
360.5488 486.0313 361.2354 480.5957 359.376 477.4961 c
357.7158 474.7295 353.9102 476.2236 353.75 476.2881 C
353.2158 474.9756 L
354.9668 474.2617 358.7617 473.7178 360.5908 476.7666 c
362.792 480.4355 361.9805 486.6582 358.9521 489.3291 c
356.2529 491.7109 353.1494 496.7188 352.502 499.1475 c
351.7754 501.875 349.6309 504.2744 346.4785 503.4854 c
f306.5986 465.0371 m
306.7412 464.9443 L
309.4678 463.1807 314.0303 460.2295 315.7598 458.0273 c
317.1553 456.252 319.5635 454.8604 321.6172 454.6436 c
322.8096 454.5176 323.8428 454.7861 324.6035 455.4209 C
323.6963 456.5098 L
323.2295 456.1201 322.5801 455.9668 321.7656 456.0527 c
320.0898 456.2295 318.0332 457.4287 316.875 458.9033 c
314.999 461.291 310.4922 464.2061 307.5107 466.1348 C
307.3682 466.2266 L
304.9932 467.7637 305.332 469.915 305.3477 470.0059 C
303.9541 470.2627 L
303.9297 470.1348 303.4023 467.1045 306.5986 465.0371 C
f313.6084 453.9648 m
313.6084 451.002 316.708 448.0098 319.6074 446.1973 c
320.6572 445.541 321.5244 444.7129 322.3633 443.9121 c
323.6045 442.7256 324.7773 441.6055 326.335 441.2725 c
328.46 440.8174 329.6924 441.7002 331.7344 443.1641 C
333.7109 444.542 L
334.8223 445.2832 335.9951 445.9004 337.1289 446.4961 c
339.5186 447.7539 341.9902 449.0537 343.8809 451.5361 C
342.7539 452.3945 L
341.0527 450.1621 338.8262 448.9902 336.4697 447.751 c
335.3027 447.1377 334.0977 446.5029 332.9238 445.7217 C
330.9092 444.3164 L
328.9531 442.9141 328.1436 442.334 326.6318 442.6582 c
325.4658 442.9082 324.4814 443.8477 323.3418 444.9365 c
322.4932 445.7471 321.5313 446.667 320.3594 447.3994 c
317.7041 449.0576 315.0264 451.7314 315.0264 453.9648 c
315.0264 456.2744 316.7803 457.9277 316.7979 457.9443 C
315.8389 458.9873 L
315.7471 458.9043 313.6084 456.9102 313.6084 453.9648 c
f360.1787 486.3262 m
360.4023 484.9287 L
360.4141 484.9297 361.6846 484.9219 363.3398 481.335 c
364.8799 477.9971 363.8701 473.3936 363.2666 470.6416 C
362.9502 469.0723 L
362.6006 466.7979 362.4453 462.9092 362.6104 460.5811 c
362.7744 458.2813 362.3818 456.7598 359.8936 455.792 c
357.4932 454.8584 356.1387 456.9219 356.082 457.0098 C
354.8828 456.2559 L
355.5664 455.1621 357.6016 453.3799 360.4072 454.4707 c
363.8779 455.8213 364.1973 458.2539 364.0244 460.6816 c
363.8643 462.9238 364.0146 466.668 364.3506 468.8574 C
364.6514 470.3389 L
365.293 473.2637 366.3662 478.1592 364.627 481.9287 c
362.5 486.5361 360.5479 486.4004 360.1787 486.3262 C
f340.8838 513.8584 m
337.0469 510.8936 335.9961 505.3271 335.9531 505.0918 C
337.3477 504.8379 L
337.3574 504.8896 338.3496 510.1084 341.751 512.7373 c
347.2588 516.9941 351.9063 517.9053 355.958 515.5205 c
360.0947 513.0869 361.874 511.5693 362.9375 510.6621 C
363.9238 509.876 L
364.7822 509.3037 366.791 507.9639 366.9424 504.9297 C
368.3584 505.001 L
368.1709 508.7471 365.6572 510.4238 364.7109 511.0547 C
363.8574 511.7402 L
362.7588 512.6777 360.9199 514.2461 356.6768 516.7422 c
352.0684 519.4541 346.9023 518.5107 340.8838 513.8584 c
f362.4434 484.8096 m
362.8535 483.4531 L
363.0029 483.498 366.5352 484.6045 368.4736 489.3643 C
367.1611 489.8994 L
365.4912 485.7998 362.5674 484.8477 362.4434 484.8096 C
f293.5718 506.875 m
292.0474 505.7861 289.6523 500.8857 286.6797 494.5918 c
285.4009 491.8838 284.2964 489.5459 283.7266 488.6914 c
283.2544 487.9824 282.4751 487.0908 281.5728 486.0576 c
279.4414 483.6182 276.5225 480.2764 275.3091 476.5156 c
273.5239 470.9834 275.1646 462.4043 281.7202 457.4014 C
287.8433 452.8848 L
291.2813 450.3975 293.9966 448.4326 294.9165 447.2061 c
296.8071 444.6855 299.6797 443.6162 302.7959 444.2715 c
306.3955 445.0293 307.1523 449.332 307.1826 449.5156 C
305.7842 449.749 L
305.7783 449.7139 305.1514 446.2158 302.5049 445.6582 c
299.9492 445.1211 297.5972 445.9951 296.0503 448.0566 c
295.0015 449.4551 292.3472 451.375 288.6738 454.0332 C
282.5796 458.5283 L
276.7607 462.9697 274.999 470.9404 276.6577 476.0801 c
277.7817 479.5635 280.4756 482.6475 282.6401 485.125 c
283.5747 486.1953 284.3823 487.1191 284.9063 487.9053 c
285.5337 488.8467 286.6587 491.2285 287.9609 493.9863 c
289.9878 498.2764 293.0498 504.7607 294.395 505.7217 c
296.146 506.9717 299.6025 508.6992 303.0713 506.2217 c
306.2754 503.9326 306.9434 499.8965 306.9502 499.8564 C
308.3506 500.0732 L
308.3213 500.2617 307.5957 504.7314 303.8955 507.375 c
299.5527 510.4766 295.229 508.0586 293.5718 506.875 c
f296.7788 466.0459 m
296.3696 462.4971 298.1147 458.6055 301.9658 454.4814 c
302.7412 453.6504 303.4385 452.6289 304.1768 451.5459 c
305.5977 449.4639 307.0664 447.3115 309.2266 446.4707 c
312.5254 445.1885 316.2773 447.0596 317.3047 449.5254 C
315.9961 450.0703 L
315.3164 448.4375 312.3896 446.7617 309.7402 447.792 c
307.9893 448.4727 306.6465 450.4414 305.3477 452.3447 c
304.6113 453.4238 303.8506 454.5391 303.001 455.4482 c
299.498 459.2012 297.8325 462.8096 298.187 465.8838 c
298.6421 469.835 300.7373 471.5596 300.7578 471.5762 C
299.8799 472.6895 L
299.7754 472.6064 297.3062 470.6211 296.7788 466.0459 c
f314.4434 438.0879 m
314.8721 431.2207 318.2051 428.6992 320.9268 427.793 c
323.0518 427.084 330.2402 425.4678 333.4834 434.3896 c
336.2666 442.0449 333.4551 445.1553 333.333 445.2842 C
332.2949 444.3193 L
332.3184 444.293 334.6055 441.624 332.1514 434.874 c
329.4219 427.3652 323.7051 428.3604 321.374 429.1367 c
318.0186 430.2549 316.1621 433.2959 315.8574 438.1758 c
315.5361 443.3203 316.8203 448.0625 316.834 448.1104 C
315.4668 448.4863 L
315.4111 448.2842 314.1064 443.4766 314.4434 438.0879 c
f298.8501 441.7646 m
300.2412 440.5479 304.6514 435.751 306.207 433.1055 c
307.3926 431.0889 310.209 428.9873 312.8711 428.9609 c
314.0938 428.9482 315.8184 429.3662 317.0869 431.4277 C
315.8799 432.1699 L
315.1396 430.9688 314.1328 430.3652 312.8848 430.3779 c
310.7539 430.3994 308.3926 432.1836 307.4277 433.8242 c
305.7393 436.6963 301.1787 441.6113 299.7842 442.8311 c
298.8218 443.6729 299.1494 444.8828 299.1641 444.9336 C
297.8042 445.335 L
297.7778 445.249 297.1938 443.2148 298.8501 441.7646 c
f362.1133 455.8613 m
364.4229 454.4453 365.2764 452.2207 365.585 450.6035 c
366.0967 447.9229 365.4795 444.751 364.084 442.8906 c
362.4629 440.7295 359.0361 439.8359 355.7217 438.9727 c
354.29 438.5986 352.9385 438.2471 351.7344 437.7949 c
347.6201 436.2529 343.6709 432.0156 342.4033 430.2051 c
341.5156 428.9375 337.4238 428.334 335.1318 428.8252 c
333.0215 429.2773 330.9844 431.1338 330.9639 431.1533 C
330.0029 430.1113 L
330.0967 430.0244 332.3398 427.9736 334.835 427.4385 c
337.3828 426.8936 342.1641 427.3936 343.5635 429.3926 c
344.7021 431.0176 348.4658 435.0557 352.2324 436.4688 c
353.3672 436.8936 354.6846 437.2373 356.0791 437.6006 c
359.6289 438.5264 363.2998 439.4824 365.2178 442.04 c
366.8604 444.2295 367.5674 447.7783 366.9766 450.8691 c
366.457 453.5908 365.0313 455.7344 362.8535 457.0693 C
362.1133 455.8613 L
f302.3047 517.335 m
299.7998 508.4844 L
301.167 508.1113 L
303.6621 516.9277 L
304.5791 519.9854 308.3018 521.6396 311.959 520.6152 c
315.6104 519.5938 320.5244 518.5684 323.3643 518.7578 c
325.6094 518.9072 327.9141 517.3125 330.4102 513.8809 c
333.2188 510.0205 329.1074 504.7969 328.9297 504.5742 C
330.0371 503.6885 L
331.8926 506.0088 334.3008 510.9424 331.5566 514.7148 c
328.751 518.5713 326.041 520.3564 323.2705 520.1719 c
321.043 520.0234 316.8555 520.7168 312.3418 521.9805 c
307.9443 523.2109 303.4424 521.1279 302.3047 517.335 C
f304.6504 519.6318 m
303.3174 526.9648 302.8174 530.4648 v
302.3174 533.9648 298.4839 541.2979 295.4834 544.2979 c
292.4834 547.2979 291.4834 550.1318 y
290.6504 548.7979 289.4834 546.1318 v
288.3164 543.4648 285.8164 537.6318 285.6499 533.4648 c
282.1494 537.6309 274.8164 539.2979 v
267.4834 540.9648 257.4834 542.1318 254.9834 544.1318 c
253.4834 544.2988 253.4834 542.9648 v
253.4834 541.6318 255.1499 533.7979 254.6499 530.6318 c
254.1499 527.4648 255.1504 516.6318 256.4834 512.1318 c
254.9834 511.7979 252.9834 512.2979 v
250.9834 512.7979 245.1499 512.4648 243.1499 510.4648 c
249.8164 508.4648 253.6499 504.4648 v
257.4834 500.4648 260.6494 493.7988 266.3164 489.4648 c
271.9834 485.1318 279.1494 484.6318 281.8164 485.6318 c
284.8169 488.7979 286.4834 492.2979 v
288.1499 495.7979 291.8164 504.1309 293.3164 505.7979 c
295.7749 508.2568 297.3999 508.2568 v
299.0254 508.2568 300.1504 507.6318 300.9004 509.7568 c
301.6504 511.8818 303.1504 518.3818 304.6504 519.6318 c
f309.2754 521.8818 m
311.2754 521.6318 314.6504 520.6318 v
318.0254 519.6318 321.2334 519.7979 322.2754 519.6318 c
323.3174 519.4648 326.0254 519.3818 328.0254 517.7568 c
330.0254 516.1318 331.9004 513.8818 332.0254 511.3818 c
332.1504 508.8818 330.0254 504.3818 329.0254 503.8818 c
330.4004 503.0488 332.1504 503.4648 v
333.2754 504.5068 334.4004 504.5068 v
335.5254 504.5068 336.1504 504.3818 337.0254 506.5068 c
337.9004 508.6318 338.9004 512.1318 343.9004 515.0068 c
348.9004 517.8818 353.6504 518.5068 358.4004 515.0068 c
364.6504 517.2568 367.5254 524.7568 v
367.6504 542.0068 l
367.2754 540.3818 365.5254 539.6318 v
363.7754 538.8818 359.5254 536.8818 358.9004 534.8818 c
359.6504 539.5068 358.4004 543.3818 v
357.1504 547.2568 356.4004 549.5068 356.4004 550.0068 c
356.4004 550.5068 354.9004 550.0068 353.9004 549.1318 c
352.9004 548.2568 350.2754 547.7568 347.6504 547.0068 c
345.0254 546.2568 335.2754 543.1318 332.2754 537.2568 c
332.0254 542.2568 330.5254 544.6318 v
329.0254 547.0068 327.7754 550.1318 y
325.9004 549.8818 l
321.9004 546.0068 319.4004 543.2568 v
316.9004 540.5068 309.6504 532.8818 309.2754 521.8818 c
f275.3164 471.7979 m
268.9829 472.2979 263.3164 470.2979 v
257.6499 468.2979 252.6504 464.7979 246.9834 463.7979 c
245.8169 462.4648 246.9834 462.2979 v
248.1499 462.1318 250.4829 460.9648 251.3164 459.2979 c
252.1499 457.6318 254.1499 454.1309 257.6499 452.7979 c
252.4829 451.7988 247.8164 448.4648 v
243.1499 445.1318 240.9834 440.9648 240.4834 440.2979 c
239.9834 439.6318 240.8164 438.6309 241.6499 438.9648 c
242.4834 439.2988 245.4834 441.1318 247.4834 440.1318 c
249.4834 439.1318 257.1494 435.6309 263.3164 433.9648 c
269.4834 432.2988 274.6499 433.6318 y
273.9834 430.6318 273.1499 428.6318 v
272.3164 426.6318 271.4834 422.1309 273.6499 418.9648 c
276.1494 421.4648 278.8164 421.9648 v
281.4834 422.4648 290.9829 424.4658 295.3164 429.7988 c
299.6504 435.1318 300.6504 440.9648 y
300.3594 441.5898 299.3174 442.2979 v
298.0249 444.6318 298.8999 445.2568 v
296.0249 447.1318 295.1499 448.1318 v
294.2749 449.1318 285.5249 455.1318 283.2749 457.0068 c
281.0249 458.8818 275.3579 462.7148 275.3164 471.7979 c
f313.2754 429.5068 m
313.7754 426.5068 309.4004 420.3818 v
305.0254 414.2568 297.7749 410.7568 294.0249 410.0068 c
293.8999 409.2568 295.5249 408.1318 v
297.1499 407.0068 313.1504 403.7568 320.9004 413.6318 c
320.6504 410.1318 325.1504 406.3818 v
329.6504 402.6318 338.1504 399.6318 y
333.4004 405.8818 332.1504 409.7568 v
330.9004 413.6318 330.0254 422.1318 333.4004 428.6318 c
332.1504 429.6318 l
330.9004 430.8818 330.0254 430.0068 v
329.1504 429.1318 327.5254 427.5068 323.2754 428.1318 c
319.0254 428.7568 317.0254 431.7568 y
315.1504 430.5068 l
313.2754 429.5068 l
f343.0254 429.3818 m
341.2754 425.1318 345.1504 416.1318 v
349.0254 407.1318 355.2754 397.0068 355.2754 391.6318 c
356.1504 392.8818 356.7754 395.7568 v
357.4004 398.6318 357.7754 401.3818 359.2754 404.6318 c
360.7754 407.8818 362.5254 412.7568 y
367.4004 403.6318 367.7754 401.7568 v
367.9004 435.8818 l
367.1504 439.7568 362.6504 440.3818 v
358.6504 439.2568 355.5254 438.3818 v
352.4004 437.5068 345.5254 435.0068 343.0254 429.3818 c
f287.3198 400.6543 m
287.645 399.2744 L
287.7061 399.2891 293.832 400.6279 301.9492 395.6934 c
307.4551 392.3467 312.5977 386.5928 316.3516 382.3916 c
317.6729 380.9131 318.7891 379.6758 319.7051 378.7803 C
317.1289 378.3906 312.0352 377.5518 310.3535 376.7754 C
308.5879 375.7334 L
305.8516 373.9902 300.7578 370.7471 293.3413 371.0068 c
284.2271 371.3262 276.5439 378.4111 276.4673 378.4824 C
275.499 377.4473 L
275.8267 377.1406 283.6372 369.9287 293.2915 369.5908 c
301.1484 369.3154 306.4834 372.7129 309.3496 374.5381 C
310.9473 375.4883 L
312.6455 376.2725 319.0781 377.2764 321.4141 377.5967 C
323.1943 377.8408 L
321.7266 378.8779 L
320.8242 379.5146 319.2412 381.2852 317.4092 383.3359 c
313.5947 387.6035 308.3711 393.4482 302.6855 396.9043 c
294.0361 402.1621 287.5903 400.7188 287.3198 400.6543 C
f*u
1 D
286.7085 401.332 m
286.707 401.332 L
286.4795 401.2969 281.0552 400.377 273.9707 392.9541 c
267.9658 386.6621 266.0327 379.4727 266.1978 376.1748 c
266.2456 375.2256 266.4604 374.5986 266.8555 374.2607 c
267.2451 373.9268 267.8867 373.8428 268.875 373.9971 c
271.9033 374.4697 279.98 377.835 284.2529 384.7598 c
288.2451 391.2295 289.6304 398.4756 288.2017 400.6318 c
287.8462 401.168 287.3022 401.4238 286.7085 401.332 C
f0 D
286.9453 399.9326 m
286.9775 399.916 287.0864 399.7979 287.1807 399.4688 c
287.2813 399.1182 287.3335 398.6563 287.3335 398.1025 c
287.3335 395.3682 286.0615 390.3896 283.0469 385.5039 c
278.4619 378.0742 269.1104 374.9707 267.7808 375.3643 C
267.6768 375.5322 267.6074 375.9004 267.6074 376.4619 c
267.6074 379.1338 269.0913 385.7881 274.9961 391.9756 c
281.7017 399.001 286.8623 399.9209 286.9258 399.9316 C
286.9282 399.9316 286.9409 399.9326 286.9453 399.9326 C
f*U
255.3291 426 m
255.4404 425.9434 266.5352 420.2891 274.5562 414.2334 c
277.6768 411.8779 280.0068 409.1953 281.7178 406.791 C
280.5181 407.6904 279.0879 408.5967 277.2837 409.4404 c
273.6445 411.1436 269.2769 412.4648 265.0522 413.7432 c
260.2603 415.1934 255.7339 416.5625 253.3911 418.2109 C
252.9038 418.5547 L
252.4824 418.1328 L
252.1118 417.7627 251.5918 416.8682 251.9922 415.8682 c
252.271 415.1719 254.2554 406.8691 254.9497 402.3574 c
255.5547 398.4229 258.3081 385.4209 268.335 383.2715 C
268.6318 384.6582 L
259.4917 386.6162 256.9204 398.8652 256.3501 402.5723 c
255.6948 406.834 253.6958 415.4258 253.3076 416.3955 c
253.2783 416.4697 253.2661 416.542 253.2661 416.6104 c
253.2661 416.6289 253.2778 416.6396 253.2793 416.6572 C
255.9038 415.0664 260.1187 413.7549 264.6421 412.3867 c
268.8184 411.123 273.1362 409.8164 276.6831 408.1572 c
282.2183 405.5664 284.3804 402.3691 285.124 400.9063 C
285.3364 400.4238 285.478 400.0732 285.4834 400.0586 C
286.833 400.4873 L
286.8315 400.4922 286.811 400.5527 286.8105 400.5547 C
286.7778 400.665 286.6724 400.9814 286.4185 401.4961 C
285.3999 403.8428 282.1782 410.2549 275.4106 415.3643 c
267.2871 421.4971 256.083 427.207 255.9707 427.2637 C
255.3291 426 L
f267.7495 408.8896 m
267.6987 408.8223 266.5112 407.2109 267.165 405.6855 c
267.251 405.4844 267.3809 404.6006 267.5068 403.7461 c
267.999 400.3955 268.916 394.1572 271.9282 390.3584 C
273.0386 391.2393 L
270.2627 394.7402 269.3823 400.7324 268.9087 403.9521 c
268.7183 405.25 268.6196 405.8896 268.4678 406.2441 c
268.4097 406.3789 268.3857 406.5244 268.3857 406.6729 c
268.3857 407.0332 268.5229 407.3691 268.6675 407.6504 C
278.02 405.8975 282.3301 398.8447 282.3726 398.7725 C
282.5273 398.5098 L
282.8271 398.4404 L
282.854 398.4346 285.5269 397.793 286.8496 395.1475 C
288.1172 395.7822 L
286.7441 398.5283 284.2729 399.4834 283.436 399.7383 C
282.6748 400.9385 278.0747 407.583 268.4312 409.1641 C
268.0073 409.2334 L
267.7495 408.8896 L
f287.8003 397.8398 m
287.8315 396.4229 L
287.9009 396.4248 294.6489 396.4551 301.6416 391.3018 C
301.5625 391.2393 301.5146 391.1738 301.3877 391.123 C
300.373 390.3994 L
297.9292 388.4414 291.4375 383.2373 283.8774 385.8027 C
283.4224 384.4609 L
291.7178 381.6455 298.8999 387.4023 301.2598 389.2939 C
301.9463 389.8213 L
303.0498 390.2607 303.3115 391.1885 303.3379 391.293 C
303.4502 391.7412 L
303.0859 392.0244 L
295.4736 397.9443 288.1099 397.8477 287.8003 397.8398 C
f268.1348 404.9473 m
275.9658 402.8691 280.3916 397.5684 280.4355 397.5156 C
281.5317 398.4141 L
281.3423 398.6455 276.791 404.1162 268.498 406.3164 C
268.1348 404.9473 L
f268.3384 401.7715 m
275.1504 400.3457 278.4077 396.5479 278.4399 396.5098 C
279.5278 397.4189 L
279.3853 397.5898 275.9526 401.626 268.6284 403.1582 C
268.3384 401.7715 L
f268.9839 399.1104 m
273.5933 397.998 277.166 395.1123 277.2017 395.083 C
278.0986 396.1807 L
277.9438 396.3066 274.2505 399.2979 269.3159 400.4873 C
268.9839 399.1104 L
f269.5923 396.46 m
272.9214 395.3496 275.3501 393.4307 275.374 393.4111 C
276.2593 394.5186 L
276.1528 394.6035 273.6191 396.6104 270.0405 397.8037 C
269.5923 396.46 L
f270.9961 392.6074 m
274.2964 391.7813 L
274.6704 393.1484 L
271.3032 393.9902 L
270.9961 392.6074 L
f280.4248 396.46 m
280.4668 396.4453 284.6387 395.0098 285.9941 391.6963 C
287.3057 392.2334 L
285.7012 396.1553 281.0703 397.7383 280.874 397.8037 C
280.4248 396.46 L
f277.3735 393.9316 m
277.4146 393.9248 281.5054 393.2275 285.1021 388.8486 C
286.1978 389.749 L
282.2373 394.5693 277.7788 395.3037 277.5913 395.332 C
277.3735 393.9316 L
f274.8799 391.2637 m
274.9233 391.2568 279.2642 390.5313 282.5298 384.6221 C
283.77 385.3076 L
280.1411 391.874 275.2886 392.6367 275.0835 392.666 C
274.8799 391.2637 L
f271.6509 389.8213 m
271.9731 388.4404 L
272.0117 388.4492 275.8506 389.1826 281.1045 382.8467 C
282.1953 383.751 L
276.3149 390.8438 271.8384 389.8662 271.6509 389.8213 C
f270.2915 385.7568 m
270.4888 385.749 275.1743 385.5078 278.9043 380.2236 C
280.0625 381.04 L
275.9067 386.9277 270.5645 387.166 270.3394 387.1729 C
270.2915 385.7568 L
f269.0396 383.4316 m
269.0806 383.4248 273.1489 382.7227 276.5786 378.0459 C
277.7212 378.8838 L
273.9248 384.0615 269.4463 384.8027 269.2578 384.832 C
269.0396 383.4316 L
f267.9761 381.0898 m
268.0049 381.0898 270.9063 380.9795 274.4355 376.6816 C
275.5308 377.582 L
271.5313 382.4512 268.1265 382.5078 267.9834 382.5078 C
267.9761 381.0898 L
f267.0532 379.957 m
267.5308 378.624 L
267.5435 378.627 268.8428 378.8701 271.0532 375.417 C
272.2466 376.1807 L
269.4082 380.6172 267.4224 380.1045 267.0532 379.957 C
f287.7266 393.9287 m
287.8032 393.9189 295.457 392.9102 300.2568 389.709 C
301.0439 390.8887 L
295.9629 394.2754 288.2324 395.293 287.9063 395.335 C
287.7266 393.9287 L
f286.9824 391.5898 m
287.0356 391.5898 292.3779 391.5371 298.2876 388.0225 C
299.0127 389.2412 L
292.7495 392.9648 287.2158 393.0078 286.9834 393.0078 C
286.9824 391.5898 L
f286.1265 390.3398 m
286.1724 388.9238 L
286.2202 388.9248 290.9937 389.0322 295.228 385.8955 C
296.0718 387.0342 L
291.4268 390.4746 286.3408 390.3477 286.1265 390.3398 C
f284.9507 386.7568 m
284.9854 386.7549 288.4766 386.5703 291.438 384.6992 C
292.1948 385.8984 L
288.9067 387.9746 285.1729 388.166 285.0156 388.1729 C
284.9507 386.7568 L
f287.7222 400.958 m
288.2441 399.6396 L
288.3311 399.6738 296.9658 403.0586 302.2109 402.2646 c
306.7217 401.5811 316.0508 398.9609 327.8633 389.0879 C
328.7715 390.1758 L
316.6953 400.2695 307.0801 402.96 302.4238 403.665 c
296.7983 404.5176 288.0903 401.1035 287.7222 400.958 C
f*u
1 D
259.96 409.5059 m
259.8218 409.5039 258.9893 409.4658 258.3281 408.7588 c
257.8423 408.2393 257.5972 407.5186 257.5972 406.6133 c
257.5972 406.4961 257.6011 406.375 257.6094 406.252 c
257.686 405.1035 258.1016 404.2061 258.8442 403.585 c
259.9302 402.6768 261.3262 402.6787 262.062 402.7607 c
262.8428 402.8477 263.5122 403.2959 263.9473 404.0225 c
264.543 405.0166 264.6172 406.373 264.1411 407.5625 c
263.4634 409.2559 261.9399 409.9473 259.96 409.5059 C
f0 D
259.7539 404.6719 m
259.3188 405.0361 259.0732 405.5986 259.0234 406.3457 c
258.98 406.9961 259.0933 407.4912 259.3511 407.7773 c
259.6172 408.0732 259.9805 408.0898 259.9956 408.0908 C
260.0693 408.0928 L
260.1558 408.1113 L
261.5059 408.4492 262.4043 408.0879 262.8257 407.0352 c
263.1357 406.2607 263.0986 405.3633 262.7314 404.75 c
262.5229 404.4023 262.2451 404.207 261.9048 404.1689 c
261.4937 404.123 260.4604 404.0801 259.7539 404.6719 c
f*U
*u
1 D
262.2852 399.5723 m
262.4497 399.6445 L
261.27 399.2979 259.1235 397.958 259.4468 395.377 c
259.5981 394.167 260.27 393.2021 261.3394 392.6592 c
262.5859 392.0264 264.3335 392.0352 265.4941 392.6797 c
267.3384 393.7041 267.5737 395.9336 266.9888 397.6885 c
266.7061 398.5371 265.9888 399.2119 264.9683 399.5889 c
263.9707 399.958 262.9175 399.9521 262.2852 399.5723 C
f0 D
261.981 393.9229 m
261.3262 394.2549 260.9468 394.8037 260.853 395.5527 c
260.5996 397.5771 262.7607 398.2578 262.853 398.2861 C
262.9365 398.3115 L
263.0146 398.3574 L
263.2065 398.4727 263.8213 398.5029 264.4766 398.2598 c
265.0767 398.0381 265.5024 397.667 265.644 397.2412 c
266.0146 396.1289 266.0176 394.5908 264.8057 393.918 c
264.145 393.5518 262.9072 393.4521 261.981 393.9229 c
f*U
*u
1 D
290.001 383.1523 m
288.8159 382.9932 286.5972 382.0967 286.2808 379.7256 c
286.2603 379.5693 286.25 379.4141 286.25 379.2598 c
286.25 378.1719 286.7578 377.125 287.686 376.334 c
288.8267 375.3613 290.3677 374.9404 291.52 375.2861 c
293.5098 375.8828 294.3584 377.1826 294.3584 379.6318 c
294.3584 380.7441 293.8545 381.7373 292.9399 382.4277 c
292.0513 383.0986 290.8784 383.3828 290.001 383.1523 C
f0 D
288.6055 377.4131 m
288.2021 377.7568 287.5459 378.4902 287.686 379.5381 c
287.9409 381.4512 290.1421 381.75 290.2354 381.7617 C
290.2896 381.7686 L
290.3442 381.7832 L
290.73 381.8936 291.4717 381.7598 292.0864 381.2959 c
292.4761 381.002 292.9414 380.4746 292.9414 379.6318 c
292.9414 377.5811 292.2988 376.999 291.1128 376.6436 c
290.436 376.4404 289.3579 376.7715 288.6055 377.4131 c
f1 D
289.9556 383.1465 m
289.9692 383.1504 289.9868 383.1484 290.001 383.1523 C
290.02 383.1553 290.0483 383.166 290.0674 383.1689 C
289.9556 383.1465 L
f*U
*u
305.2529 386.5049 m
305.2393 386.5029 L
303.9834 386.3633 301.6084 385.4443 301.6084 382.9648 c
301.6084 381.4873 302.0703 380.2852 302.9443 379.4873 c
303.6797 378.8154 304.6631 378.498 305.7139 378.5928 c
308.209 378.8193 309.7041 380.3623 309.5234 382.5234 c
309.4199 383.7676 308.8555 384.9043 307.9766 385.6426 c
307.207 386.2881 306.2393 386.5947 305.2529 386.5049 C
f0 D
307.0645 384.5566 m
307.6572 384.0596 308.0391 383.2754 308.1113 382.4063 c
308.2734 380.46 306.3994 380.0781 305.5869 380.0049 c
304.9268 379.9453 304.3438 380.1279 303.9004 380.5332 c
303.3359 381.0479 303.0264 381.9111 303.0264 382.9648 c
303.0264 384.7773 305.2568 385.0771 305.3896 385.0938 C
306.0029 385.1475 306.582 384.9619 307.0645 384.5566 C
f*U
251.2085 396.4961 m
251.1538 396.4053 245.7837 387.2803 249.8496 379.1475 c
253.1333 372.5801 259.2183 372.0957 261.9072 372.4355 C
261.9497 370.458 262.8452 366.0244 269.7959 364.1152 c
278.6143 361.6943 286.8291 370.6084 287.1748 370.9883 C
286.1255 371.9414 L
286.0464 371.8545 278.146 363.292 270.1709 365.4824 c
262.4429 367.6045 263.3062 372.9443 263.3467 373.1709 C
263.5503 374.3057 L
262.4463 373.9775 L
260.9922 373.541 254.4067 373.2031 251.1172 379.7822 c
247.395 387.2256 252.373 395.6816 252.4243 395.7676 C
256.2554 402.0967 L
255.0444 402.833 L
251.2085 396.4961 L
f275.9414 377.1094 m
275.9487 376.876 276.1924 371.3428 282.4595 367.6865 C
283.1733 368.9111 L
277.6118 372.1553 277.3657 376.9541 277.3579 377.1563 C
275.9414 377.1094 L
f278.5903 365.375 m
279.3765 366.5547 L
273.8154 370.2617 274.1719 375.8408 274.1899 376.0762 C
272.7769 376.1895 L
272.7554 375.9199 272.3154 369.5586 278.5903 365.375 C
f270.6079 375.2988 m
270.6079 375.0156 270.6499 368.3125 274.293 364.3213 C
275.3398 365.2764 L
272.0708 368.8574 272.0249 375.2354 272.0249 375.2988 C
270.6079 375.2988 L
f269.9814 364.5625 m
271.3184 365.0342 L
271.2993 365.0879 269.4468 370.4766 271.4502 374.4814 C
270.1826 375.1162 L
267.9072 370.5664 269.896 364.8057 269.9814 364.5625 C
f265.6147 366.7295 m
267.0181 366.5342 L
267.2427 368.1484 268.0723 372.6396 269.1982 374.0166 C
268.1016 374.9131 L
266.521 372.9814 265.7026 367.3633 265.6147 366.7295 C
f262.4507 370.5811 m
263.8481 370.3447 L
263.853 370.3721 264.3647 373.1006 267.3896 375.2178 C
266.5771 376.3799 L
263.041 373.9043 262.4731 370.7158 262.4507 370.5811 C
f255.2236 375.3369 m
255.0757 373.9268 L
255.3447 373.8984 261.728 373.2734 267.0474 376.8779 C
266.2524 378.0518 L
261.3716 374.7451 255.2842 375.3301 255.2236 375.3369 C
f251.2524 379.4541 m
250.7134 378.1436 L
251.0752 377.9951 259.6587 374.5615 267.7153 380.0459 C
266.9175 381.2178 L
259.5063 376.1719 251.334 379.4209 251.2524 379.4541 C
f249.189 382.4268 m
249.4399 382.2109 255.4902 377.209 268.2388 382.1377 C
267.728 383.46 L
255.8325 378.8604 250.1641 383.459 250.1084 383.5049 C
249.189 382.4268 L
f248.624 385.8242 m
248.8262 385.5996 253.729 380.376 266.8281 383.7793 C
266.4717 385.1504 L
254.2852 381.9844 249.7178 386.7285 249.6729 386.7773 C
248.624 385.8242 L
f248.9917 388.7881 m
249.186 388.6016 253.855 384.2246 263.1001 385.7656 C
262.8667 387.1641 L
254.3652 385.7471 250.0161 389.7705 249.9731 389.8105 C
248.9917 388.7881 L
f249.6245 392.6563 m
249.7617 392.5049 253.0757 388.9346 260.6177 388.5908 C
260.6821 390.0068 L
253.7729 390.3213 250.7036 393.5762 250.6733 393.6094 C
249.6245 392.6563 L
f251.3281 395.6182 m
251.4712 395.4824 254.8682 392.2891 258.5498 391.7637 C
258.75 393.166 L
255.521 393.6279 252.3359 396.6162 252.3042 396.6455 C
251.3281 395.6182 L
f*u
1 D
341.7793 373.4258 m
341.71 373.3457 L
341.668 373.248 L
341.5469 372.9717 338.7646 366.3545 342.9932 355.8672 c
346.8906 346.1992 350.0898 344.7559 351.6504 344.7559 c
351.9717 344.7559 352.2656 344.9277 352.5234 345.2676 c
353.5605 346.6299 354.8203 351.7393 352.166 361.3213 c
349.8418 369.7148 346.1387 373.335 343.6738 373.8848 c
342.873 374.0625 342.1836 373.8965 341.7793 373.4258 C
f0 D
343.5742 372.4434 m
345.623 371.7764 348.7451 368.3643 350.8008 360.9424 c
351.9561 356.7686 352.3203 353.5576 352.3203 351.2051 c
352.3203 348.1533 351.7197 346.5967 351.4297 346.2021 C
350.5684 346.3457 347.8809 347.5342 344.3076 356.3965 c
342.5879 360.6621 342.0967 364.2646 342.0967 366.9883 c
342.0967 370.1934 342.7471 372.0898 342.9063 372.5098 C
342.9795 372.5391 343.1689 372.5752 343.5742 372.4434 C
f*U
335.1309 372.9824 m
330.9336 371.8379 325.4893 367.6631 324.8818 367.1914 c
323.5273 366.1377 319.0068 363.8252 315.1963 363.1631 c
312.8408 362.7539 310.3994 363.1357 308.1357 364.2646 c
307.8652 364.3994 307.5635 364.3994 307.3066 364.2637 c
306.6953 363.9414 306.5674 363.0273 306.3564 361.5117 C
305.9668 359.3184 L
305.6094 358.0078 306.2422 355.4961 307.4375 353.4756 c
308.2988 352.0215 309.8145 350.1709 312.1523 349.6094 C
314.1904 349.1367 L
317.0684 348.4824 319.5537 347.917 320.2275 346.9053 c
320.7842 346.0713 323.9121 342.041 330.8975 344.6348 C
330.4033 345.9629 L
324.5693 343.7969 322.0439 346.7393 321.4072 347.6924 c
320.4189 349.1738 317.9385 349.7383 314.5049 350.5195 C
312.4824 350.9883 L
310.6279 351.4336 309.3789 352.9795 308.6572 354.1982 c
307.6895 355.833 307.2822 357.5195 307.2822 358.4609 c
307.2822 358.6572 307.2998 358.8213 307.334 358.9453 C
307.7607 361.3164 L
307.8291 361.8076 307.916 362.4268 308.0078 362.8115 C
310.4043 361.7295 312.9551 361.335 315.4385 361.7666 c
319.5352 362.4785 324.2598 364.9111 325.7529 366.0723 c
327.8721 367.7217 332.3105 370.7441 335.5039 371.6152 c
338.9912 372.5664 342.2148 372.2627 342.2471 372.2598 C
342.3877 373.6699 L
342.2461 373.6846 338.8818 374.0049 335.1309 372.9824 c
f323.4414 365.7988 m
323.4414 365.5195 323.5068 358.9092 329.2012 354.25 c
334.9355 349.5586 344.1484 352.498 344.5381 352.625 C
344.0977 353.9727 L
344.0098 353.9434 335.2295 351.1494 330.0996 355.3477 c
324.9395 359.5693 324.8594 365.7383 324.8594 365.7998 C
323.4414 365.7988 L
f359.833 384.7656 m
358.0801 383.8389 L
355.6338 382.5186 352.2832 380.71 348.9658 379.8164 c
344.2998 378.5596 342.8613 373.7002 342.8018 373.4932 C
344.1641 373.1025 L
344.1768 373.1455 345.4531 377.4023 349.335 378.4473 c
352.8115 379.3838 356.2451 381.2373 358.7529 382.5918 C
360.4668 383.498 L
364.543 385.5361 368.4316 391.5039 368.6709 392.46 C
367.3008 392.8213 L
367.1045 392.2422 363.6357 386.667 359.833 384.7656 C
f352.8213 358.8213 m
353.1445 357.4414 L
353.5654 357.54 363.5156 359.958 368.6084 369.4639 C
367.3584 370.1338 L
362.5762 361.207 352.9189 358.8447 352.8213 358.8213 C
f362.0703 362.1348 m
362.1123 362.1191 366.2432 360.541 367.1338 357.2783 C
368.501 357.6514 L
367.418 361.623 362.7617 363.3896 362.5635 363.4629 C
362.0703 362.1348 L
f330.1367 347.3301 m
329.5479 345.3115 329.832 343.2646 330.9365 341.5684 c
332.0176 339.9082 334.3906 337.7852 339.5566 337.0967 c
346.5537 336.1631 351.165 341.5098 352.4775 344.4238 C
353.4961 343.8389 355.5166 343.2979 359.4307 343.9326 c
365.8262 344.9697 368.3184 349.9736 368.5234 352.2354 C
367.1113 352.3623 L
366.9463 350.5352 364.7246 346.2266 359.2041 345.3311 c
353.8223 344.458 352.7764 345.9658 352.7666 345.9814 C
351.7725 347.5146 L
351.4512 345.748 L
351.167 344.043 346.7129 337.5723 339.7441 338.501 c
335.1113 339.1191 333.043 340.9307 332.125 342.3408 c
331.2363 343.7061 331.0195 345.2939 331.498 346.9336 c
332.5889 350.6748 334.1387 352.2842 334.1543 352.2998 C
333.1494 353.2998 L
333.0762 353.2266 331.3408 351.457 330.1367 347.3301 c
f332.0527 376.501 m
330.4463 376.2773 328.5781 375.7969 326.5996 375.2871 c
321.043 373.8564 314.127 372.0771 307.5596 374.4648 C
307.0752 373.1328 L
314.0557 370.5947 321.207 372.4355 326.9531 373.915 c
328.8906 374.4131 330.7217 374.8848 332.248 375.0967 c
337.8154 375.8711 341.458 372.4863 341.4941 372.4521 C
342.4736 373.4766 L
342.3066 373.6367 338.3203 377.3721 332.0527 376.501 c
f349.7402 384.4414 m
348.1836 383.3486 346.7139 382.3164 345.4922 381.1426 c
340.8955 376.7227 341.9287 373.2314 341.9746 373.085 C
343.3291 373.5039 L
343.2959 373.6191 342.5625 376.3594 346.4746 380.1211 c
347.6172 381.2197 349.0439 382.2217 350.5547 383.2822 c
354.6113 386.1299 359.6602 389.6738 362.1582 397.4141 C
360.8086 397.8496 L
358.457 390.5605 353.8262 387.3096 349.7402 384.4414 c
f324.1406 365.8408 m
324.1602 364.4229 L
336.3203 364.5928 341.9326 370.3984 342.166 370.6455 C
341.1357 371.6191 L
341.082 371.5625 335.6611 366.001 324.1406 365.8408 C
f325.1113 362.9961 m
324.8545 361.6016 L
325.3145 361.5166 336.1855 359.6064 341.7188 367.042 C
340.582 367.8877 L
335.5801 361.166 325.2158 362.9766 325.1113 362.9961 C
f326.335 359.6494 m
325.9639 358.2813 L
326.2773 358.1953 333.7285 356.2617 342.0771 362.5664 C
341.2236 363.6973 L
333.457 357.833 326.4053 359.6299 326.335 359.6494 C
f328.4473 356.8281 m
328.1855 355.4355 L
328.4492 355.3857 334.7285 354.2744 342.5469 359.5439 C
341.7539 360.7197 L
334.4502 355.7969 328.5068 356.8174 328.4473 356.8281 C
f343.124 358.1729 m
342.8164 358.1611 L
342.6143 357.9277 L
339.6465 354.4922 334.2285 353.3369 334.1738 353.3262 C
334.46 351.9375 L
334.6963 351.9863 340.1396 353.1611 343.4541 356.7734 C
344.5479 356.8545 348.5928 357.3096 352.0547 359.7168 C
351.2461 360.8809 L
347.6387 358.3711 343.1689 358.1748 343.124 358.1729 C
f344.8896 373.291 m
345.4111 371.9727 L
345.7441 372.1045 353.6172 375.2549 357.8457 379.9932 C
356.7891 380.9365 L
352.7852 376.4521 344.9678 373.3223 344.8896 373.291 C
f349.1094 367.9766 m
349.5254 366.6211 L
349.7988 366.7051 356.2324 368.7021 358.1729 370.8203 C
357.1279 371.7773 L
355.7324 370.2549 350.8662 368.5176 349.1094 367.9766 C
f350.6777 364.3271 m
350.9561 362.9365 L
351.4092 363.0273 355.418 363.873 356.8711 365.6895 C
355.7637 366.5742 L
354.8047 365.375 351.7676 364.5449 350.6777 364.3271 C
f346.7949 370.9824 m
344.3281 370.6602 341.5 369.5029 341.3809 369.4541 C
341.9199 368.1436 L
341.9473 368.1553 344.7002 369.2803 347.0771 369.5967 C
347.4502 369.6924 354.0469 371.5371 358.7783 375.5938 C
357.8564 376.6699 L
353.3701 372.8242 346.8604 371 346.7949 370.9824 C
f341.2168 366.166 m
341.418 364.7637 L
341.6602 364.7979 347.3721 365.6221 349.2764 366.4863 C
348.6904 367.7773 L
347.2627 367.1279 342.8115 366.3945 341.2168 366.166 C
f341.8262 361.9902 m
342.1406 360.6074 L
343.3936 360.8926 349.707 362.3662 350.9443 363.4268 C
350.0225 364.5029 L
349.3096 363.8926 344.8008 362.666 341.8262 361.9902 C
f356.2129 381.5947 m
356.2314 381.5635 357.6514 379.1689 357.6514 375.2764 c
357.6514 374.0391 357.5078 372.6494 357.1299 371.1367 c
355.0234 362.7051 352.2383 358.5264 351.9609 358.124 C
349.2012 355.7236 344.2227 355.8389 344.1719 355.8398 C
344.1279 354.4238 L
344.3574 354.416 349.7793 354.2803 352.9541 357.1025 C
353.0117 357.1533 L
353.0576 357.2168 L
353.1855 357.3936 356.2236 361.6631 358.5049 370.793 c
360.2236 377.6699 357.5361 382.1484 357.4209 382.3359 C
356.2129 381.5947 L
f348.3994 348.8359 m
348.5664 347.4277 L
348.6914 347.4424 351.6641 347.8105 353.4844 349.6309 C
352.4824 350.6328 L
351.0146 349.165 348.4258 348.8389 348.3994 348.8359 C
f332.0107 350.8271 m
332.2891 349.4365 L
332.4297 349.4648 335.7539 350.1396 338.3164 351.5068 C
337.6504 352.7568 L
335.2744 351.4902 332.0439 350.833 332.0107 350.8271 C
f330.7471 347.8369 m
330.8857 346.4268 L
331.1045 346.4473 336.3252 347.0059 343.5645 352.2236 C
342.7363 353.374 L
335.8389 348.4014 330.7979 347.8418 330.7471 347.8369 C
f346.124 351.6729 m
345.9072 351.665 L
345.7314 351.5361 L
336.7715 344.9756 330.4502 345.498 330.3877 345.5039 C
330.2451 344.0938 L
330.5195 344.0654 337.042 343.5 346.3838 350.2686 C
347.29 350.3232 351.3672 350.6816 353.4844 352.7979 C
352.4824 353.7998 L
350.541 351.8594 346.168 351.6748 346.124 351.6729 C
f331.4023 342.502 m
331.2295 341.0957 L
331.5137 341.0605 338.2988 340.3125 348.085 347.9053 C
347.2158 349.0244 L
337.9414 341.8291 331.4668 342.4951 331.4023 342.502 C
f335.1328 339.6729 m
335.167 338.2568 L
335.4717 338.2637 342.7197 338.5186 349.5127 346.1611 C
348.4541 347.1025 L
342.0928 339.9473 335.2012 339.6748 335.1328 339.6729 C
f355.9023 359.668 m
355.7324 358.2617 L
355.9668 358.2324 361.54 357.5947 365.7109 360.375 C
364.9238 361.5547 L
361.1973 359.0693 355.9551 359.6621 355.9023 359.668 C
f352.8643 355.9746 m
352.4355 354.624 L
352.749 354.5234 360.1982 352.2451 367.7344 357.7256 C
366.9004 358.8721 L
359.9639 353.8271 352.9346 355.9521 352.8643 355.9746 C
f353.0322 352.8066 m
352.6016 351.457 L
352.957 351.3428 361.3984 348.7363 368.124 354.7715 C
367.1768 355.8262 L
361.0684 350.3447 353.1123 352.7822 353.0322 352.8066 C
f353.0645 349.5029 m
352.9023 348.0947 L
353.2646 348.0527 361.8555 347.1045 367.6494 350.1729 C
366.9854 351.4248 L
361.584 348.5654 353.1494 349.4932 353.0645 349.5029 C
f*u
1 D
315.4512 360.0068 m
315.4424 360.0059 L
314.2627 359.9375 311.9453 359.1992 311.6162 356.8994 c
311.4824 355.9648 311.7119 355.125 312.2793 354.4707 c
313.2246 353.3809 314.8428 353.0898 315.6504 353.0898 c
316.9492 353.0898 318.7451 353.4609 319.3467 356.668 c
319.5508 357.7578 319.1807 358.4629 318.834 358.8623 c
317.7793 360.0762 315.6865 360.0176 315.4512 360.0068 C
f0 D
317.7656 357.9307 m
317.8984 357.7773 318.0625 357.5068 317.9541 356.9297 c
317.5352 354.6943 316.5859 354.5078 315.6504 354.5078 c
315.0361 354.5078 313.918 354.7451 313.3506 355.3994 c
313.1133 355.6729 312.9951 355.998 312.9951 356.3857 c
312.9951 356.4854 313.0029 356.5898 313.0186 356.6982 c
313.2646 358.4189 315.4219 358.584 315.5234 358.5908 C
315.9541 358.6064 317.2559 358.5195 317.7656 357.9307 C
f*U
*u
1 D
324.2344 355.5029 m
323.0654 355.3652 320.7686 354.4678 320.4482 352.0586 c
320.3047 350.9814 320.5703 350.0234 321.2148 349.2861 c
322.04 348.3447 323.3672 347.9229 324.3174 347.9229 c
325.9805 347.9229 327.8213 349.1436 328.1855 351.8711 c
328.3115 352.8145 328.1436 353.5928 327.6846 354.1855 c
326.9023 355.1982 325.543 355.3633 324.5518 355.4844 C
324.3203 355.5127 L
324.2344 355.5029 L
f0 D
322.2813 350.2197 m
321.9766 350.5684 321.8262 350.9863 321.8262 351.4893 c
321.8262 351.6113 321.835 351.7393 321.8525 351.8711 c
322.0977 353.709 324.0957 354.0469 324.3398 354.082 C
324.3555 354.0801 324.3799 354.0771 Y
325.166 353.9814 326.1436 353.8623 326.5635 353.3184 c
326.7285 353.1064 326.8096 352.8232 326.8096 352.4609 c
326.8096 352.3369 326.7998 352.2021 326.7813 352.0586 c
326.5127 350.0527 325.2861 349.3408 324.3174 349.3408 c
323.8086 349.3408 322.8467 349.5742 322.2813 350.2197 c
f*U
*u
1 D
362.3672 380.6641 m
362.3301 380.6582 L
362.2939 380.6475 L
362.1504 380.6074 358.7744 379.6416 358.7744 377.1318 c
358.7744 374.9014 360.6768 373.665 362.5625 373.4287 c
363.4746 373.3145 364.2656 373.5264 364.8496 374.042 c
365.5195 374.6328 365.8594 375.5605 365.8594 376.7988 c
365.8594 378.0615 365.3535 379.2129 364.4736 379.96 c
363.8223 380.5117 363.0352 380.7744 362.3672 380.6641 C
f0 D
363.5566 378.8789 m
363.8877 378.5986 364.4414 377.9561 364.4414 376.7988 c
364.4414 375.9961 364.2588 375.4102 363.9121 375.1045 c
363.5703 374.8027 363.085 374.792 362.7383 374.835 c
362.3135 374.8887 360.1924 375.249 360.1924 377.1318 c
360.1924 378.5088 362.4961 379.2266 362.6348 379.2686 C
362.8486 379.2871 363.2041 379.1777 363.5566 378.8789 C
f*U
*u
1 D
356.7959 368.1367 m
356.5322 367.083 356.6436 366.1406 357.126 365.3379 c
357.9033 364.043 359.4561 363.4912 360.3115 363.2773 c
360.8428 363.1445 362.2012 362.9268 363.3418 363.7607 c
363.9023 364.1709 364.5908 364.9951 364.6904 366.5879 c
364.8105 368.5088 363.7607 369.6172 363.124 370.1064 c
362.5723 370.5313 361.7686 370.8984 361.1611 370.8389 C
359.8711 371.0186 357.4326 370.6836 356.7959 368.1367 C
f0 D
360.6553 364.6523 m
360.0117 364.8135 358.8555 365.21 358.3408 366.0674 c
358.0557 366.543 358 367.1074 358.1709 367.793 c
358.6592 369.748 360.7949 369.4707 361.0371 369.4326 C
361.1641 369.4121 L
361.2275 369.4268 361.2881 369.4404 V
361.4219 369.4385 362.0488 369.2598 362.5879 368.6875 c
363.0498 368.1973 363.2832 367.5928 363.2832 366.8857 c
363.2832 366.8164 363.2803 366.7471 363.2764 366.6758 c
363.2236 365.8369 362.9639 365.2412 362.5039 364.9053 c
361.8291 364.4111 360.918 364.5869 360.6553 364.6523 c
f*U
235.5581 364.335 m
231.4136 363.7939 229.1221 359.6455 229.0269 359.4697 C
230.2725 358.793 L
230.2925 358.8301 232.3228 362.4834 235.7417 362.9287 c
239.1392 363.3721 241.9185 360.2021 241.9463 360.1699 C
242.2529 359.8145 L
242.7012 359.958 L
242.7573 359.9756 248.3169 361.7139 250.1826 357.9814 c
251.1406 356.0664 251.1528 354.1455 250.2153 352.8457 c
249.1284 351.3379 246.8916 350.7412 243.9165 351.166 C
243.7163 349.7637 L
247.2388 349.2598 249.9551 350.0605 251.3652 352.0166 c
252.6167 353.7529 252.6479 356.2197 251.4502 358.6162 c
249.627 362.2627 245.1758 362.082 242.7173 361.4141 C
241.8447 362.3057 239.0698 364.793 235.5581 364.335 C
f229.1367 375.083 m
229.8271 373.8447 L
230.0898 373.9893 236.3589 377.2734 245.1582 368.7891 C
245.4927 368.4658 L
245.9233 368.6455 L
246.1655 368.7461 251.8994 371.0605 256.4907 366.6221 c
261.0859 362.1807 259.5469 357.3945 259.479 357.1934 C
259.2651 356.5566 L
259.8887 356.3057 L
259.9478 356.2822 265.8052 353.8896 266.1089 348.4258 c
266.2563 345.7764 263.9072 343.0771 260.645 342.1484 c
257.5327 341.2617 254.7769 342.3799 253.272 345.1377 C
252.6309 346.3135 L
252.0176 345.1191 L
251.9551 344.9971 250.4297 342.1221 245.9131 341.6699 c
241.4644 341.2256 239.519 344.6582 239.4385 344.8047 C
238.8511 345.8711 L
238.2114 344.834 L
238.1992 344.8135 236.9478 342.8115 234.8018 342.4131 c
233.3809 342.1494 231.8486 342.6367 230.2471 343.8613 C
229.3857 342.7363 L
231.3257 341.2529 233.2402 340.6768 235.0762 341.0234 c
236.8501 341.3574 238.1011 342.4766 238.793 343.2686 C
239.7915 342.0127 242.0942 339.8643 246.0537 340.2598 c
249.7803 340.6318 251.7681 342.46 252.668 343.5859 C
254.9067 340.4814 258.3574 340.0234 261.0332 340.7852 c
264.7959 341.8574 267.5327 345.0059 267.5327 348.1973 c
267.5327 348.2988 267.5298 348.4014 267.5239 348.5039 c
267.2246 353.8887 262.5957 356.5781 260.981 357.3604 C
261.084 357.8301 261.1958 358.5215 261.1958 359.4131 c
261.1958 361.5576 260.5361 364.6836 257.4761 367.6416 c
252.8994 372.0645 247.3711 370.6416 245.8042 370.1104 C
236.376 378.9521 229.4307 375.248 229.1367 375.083 C
f245.7266 335.6309 m
244.9565 335.9102 L
244.7886 335.1035 L
244.7568 334.9502 243.9443 331.3408 238.3164 331.3408 c
232.4863 331.3408 230.5645 333.7061 230.5459 333.7295 C
229.4165 332.874 L
229.5068 332.7529 231.7046 329.9229 238.3164 329.9229 c
243.5361 329.9229 245.354 332.7402 245.9307 334.1025 C
248.2866 333.4756 256.562 331.9902 260.4648 340.8457 C
259.168 341.418 L
255.1602 332.3242 246.1099 335.4912 245.7266 335.6309 C
f262.5063 337.3262 m
258.748 336.5479 257.5186 333.6357 257.3145 331.6992 C
248.6714 332.0703 247.0371 327.0557 246.9712 326.8359 C
248.3271 326.4229 L
248.3848 326.6045 249.8374 330.8682 257.9302 330.2578 C
258.7144 330.1992 L
258.6919 330.9873 L
258.687 331.1543 258.623 335.0752 262.7935 335.9375 c
265.0195 336.3984 267.0825 334.6641 267.9702 332.7119 c
268.7036 331.1006 268.8481 328.8926 267.0547 327.5293 C
267.9121 326.4004 L
269.9375 327.9395 270.4668 330.6475 269.2603 333.2988 c
268.1743 335.6865 265.5977 337.9658 262.5063 337.3262 c
f272.8823 349.9756 m
271.854 350.4834 269.0405 351.7998 266.1475 352.4883 C
265.8193 351.1094 L
269.1885 350.3076 272.6201 348.5225 272.6548 348.5039 C
273.0952 348.2734 L
273.4624 348.6094 L
273.521 348.6631 279.3716 353.9307 285.0352 351.4814 c
290.4922 349.1211 289.3604 345.3438 289.3096 345.1846 C
289.0425 344.3447 L
289.918 344.2588 L
292.7964 343.9922 300.4531 342.6367 301.3008 339.6074 c
301.7227 338.0996 301.584 336.7197 300.8867 335.5088 c
299.9492 333.8789 298.0767 332.6602 295.4722 331.9844 c
290.9141 330.8027 282.1006 331.9492 280.2246 334.5469 c
279.0225 336.2109 278.5874 337.8564 279.0601 338.9492 c
279.584 340.1582 281.1694 340.6025 282.4067 340.7617 c
287.2769 341.3896 291.2837 339.3564 291.3237 339.3359 C
291.9766 340.5938 L
291.7983 340.6865 287.5513 342.8545 282.2256 342.168 c
279.3228 341.793 278.1948 340.5166 277.7598 339.5117 c
277.0762 337.9336 277.5557 335.8213 279.0752 333.7168 c
281.4883 330.376 291.2231 329.4189 295.8276 330.6133 c
298.8091 331.3857 300.9834 332.835 302.1152 334.8018 c
302.6719 335.7695 302.9531 336.8418 302.9531 337.9707 c
302.9531 338.6279 302.8574 339.3047 302.666 339.9893 c
301.5459 343.9893 293.4175 345.2754 290.7881 345.5898 C
290.8081 345.7754 290.8379 345.9238 290.8379 346.1602 c
290.8379 347.8955 290.0938 350.8379 285.5977 352.7822 c
279.873 355.2578 274.3286 351.1719 272.8823 349.9756 C
f269.5386 331.6377 m
269.0923 330.293 L
269.3345 330.2119 275.0742 328.3789 280.1592 333.6396 C
279.1401 334.624 L
274.6938 330.0244 269.7471 331.5693 269.5386 331.6377 C
f316.3926 332.002 m
310.8662 331.2891 309.2207 327.0605 309.1533 326.8809 C
310.4795 326.3809 L
310.5361 326.5283 311.9199 329.9961 316.5742 330.5957 c
320.9844 331.165 321.7539 327.0225 321.7852 326.8457 C
323.1826 327.0811 L
322.8555 329.0439 321.0156 332.5977 316.3926 332.002 c
f321.4648 328.1455 m
322.833 327.7754 L
322.8643 327.8828 323.6563 330.4014 328.4619 330.2568 c
333.4189 330.1064 335.2539 325.8721 335.3291 325.6924 C
336.6387 326.2354 L
336.5498 326.4502 334.3955 331.4951 328.5049 331.6729 c
322.5107 331.8545 321.5049 328.2969 321.4648 328.1455 C
f357.9619 334.8398 m
353.1689 334.6943 349.8945 331.4355 348.8223 330.2061 C
348.0566 330.5938 346.5352 331.0732 343.5938 330.8379 c
339.1299 330.4814 337.1377 327.4775 337.0557 327.3496 C
338.2441 326.5771 L
338.3125 326.6816 339.9648 329.126 343.707 329.4258 c
347.375 329.7188 348.4893 328.79 348.5 328.7813 C
349.0732 328.2822 L
349.5498 328.873 L
349.583 328.917 352.9238 333.2695 358.0049 333.4238 c
363.1055 333.5781 365.9561 330.8242 365.9844 330.7959 C
366.9844 331.7998 L
366.8535 331.9316 363.7021 335.0146 357.9619 334.8398 c
f320.5566 343.501 m
316.2813 342.9316 315.1709 339.8008 314.8828 338.3779 C
312.8145 338.4395 309.4492 337.708 308.002 334.417 c
305.9844 329.8311 309.3125 326.7988 309.3467 326.7695 C
310.29 327.8262 L
310.1846 327.9229 307.7051 330.2236 309.2988 333.8467 c
310.8906 337.4648 315.208 336.9531 315.3916 336.9287 C
316.1543 336.8311 L
316.1914 337.6025 L
316.1992 337.7627 316.4189 341.5205 320.7441 342.0967 c
325.1289 342.6807 327.4688 336.9287 327.4912 336.8711 C
327.9189 335.7949 L
328.6914 336.6738 L
328.7451 336.7354 330.0479 338.1631 333.6787 337.4365 c
337.082 336.7568 336.9688 334.1553 336.9443 333.8613 C
336.8018 332.1221 L
338.1182 333.2666 L
338.3379 333.458 343.5654 337.8691 350.4766 330.8037 C
351.4902 331.7939 L
345.4805 337.9375 340.3691 336.2207 338.2441 335.0332 C
337.9141 336.4893 336.7979 338.2588 333.9561 338.8271 c
331.0459 339.4092 329.3311 338.7744 328.4229 338.2168 C
327.5225 340.0029 324.9658 344.0889 320.5566 343.501 C
f302.0566 339.791 m
302.5771 338.4727 L
302.6455 338.499 309.4658 341.1035 315.0684 337.0576 C
315.8984 338.2061 L
309.6553 342.7148 302.3643 339.9121 302.0566 339.791 C
fULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
