%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 9.0
%%For: (\260\355\267\301 ) (\260\355\267\301\300\307\307\320)
%%Title: (837.ai)
%%CreationDate: 3/25/2002 6:32 PM
%%BoundingBox: 213 311 367 550
%%HiResBoundingBox: 213.624 311.4229 366.6943 549.5332
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 298.5 420.3887 298.5 420.3887
%AI3_TileBox: 15.5 14.3887 581.5 826.3887
%AI3_DocumentPreview: None
%AI5_ArtSize: 595 842
%AI5_RulerUnits: 1
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -194.5 742.3887 1 1002 661 18 0 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:15.5 14.3887
%%AI3_PaperRect:-15 827 580 -15
%%AI3_Margin:15 -15 -14 15
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI7_Thumbnail: 84 128 8
%%BeginData: 11748 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD52FCC2FFFD52FCBCFFFD52FCC2FFFD07FC92204B204B204B204B
%204B204B204B204B204B204B204B204B2027204B204B204B204B204B204B
%204B204B204B204B204B204B204B204B204B204B204B204B204B204B44FD
%07FC99FFFD05FC8C4BF82727525152275251522752515227525152275251
%5227525152F827444B204B444B204B444B204B444B204B444B204B444B20
%4B444B204B444B204B444B204B444B2027F893FD05FCC2FFFD05FC20F8FD
%1AFF2744FD28FC27F8FD05FCBBFFFD04FC6FF8FD1BFF206FFD29FC2720FD
%04FCC2FFFD04FCF876FD1BFF2768FD29FC8CF88CFCFCFCBBFFFD04FCF8A8
%FD1BFF206FFD2AFC206FFCFCFCC2FFFD04FCF8FD1CFF5220FD2AFC2768FC
%FCFCBCFFFD04FCF8FD1CFF274BFD2AFCF86FFCFCFCC2FFFD04FCF8FD1CFF
%7DF8FD2AFC2068FCFCFC99FFFD04FCF8FD1CFF7D27FD2AFCF893FCFCFCC2
%FFFD04FCF8FD1DFFF892FD29FC2068FCFCFCBBFFFD04FCF8FD1DFF2744FD
%29FC206FFCFCFCC2FFFD04FCF8FD1DFF4B20FD29FC2668FCFCFCBBFFFD04
%FCF8FD1DFFA8F8B5FD28FC206FFCFCFCC2FFFD04FCF8FD1EFF2744FD28FC
%2768FCFCFCBCFFFD04FCF8FD1EFF5220FD28FCF86FFCFCFCC2FFFD04FCF8
%FD1FFFF84AFD27FC2068FCFCFC99FFFD04FCF8FD1FFF76F8FD27FCF893FC
%FCFCC2FFFD04FCF8FD1CFFA7A7FFFFF844FD26FC2068FCFCFCBBFFFD04FC
%F8FD1BFF27F8F827FF76F88CFD25FC206FFCFCFCC2FFFD04FCF8FD16FFA7
%524BF8F8F8FF52F8FFFFF820FD25FC2668FCFCFCBBFFFD04FCF8FD08FF7D
%7D7DFD07FF7D5227F8F827F8F8F827F8277DFFFFA8F86FFD24FC206FFCFC
%FCC2FFFD04FCF8FD05FFA827F820F8F8F852FF7D2727F820274B27F8F8F8
%27A8FFA8A8FD04FF76F892FD23FC2768FCFCFCBCFFFD04FCF8FD04FF7D27
%2092FCFCFC6FF8F8F852527D27F8F827F827A8FD0AFF4BF8B4FD22FCF86F
%FCFCFCC2FFFD04FCF8FFFFFFA8F844FC688CFCFCFCF8277D27F8F827F8F8
%27A8FD0DFF26F8FD22FC2068FCFCFC99FFFD04FCF8FFFFFF5220FC8CF8F8
%FCFC4BF827F8524B27F852A8FD0FFFA82720FD21FCF893FCFCFCC2FFFD04
%FCF8FFFFFFF86EFCFC448CFC4BF84B7D52F8F852FD13FFA82720FD20FC20
%68FCFCFCBBFFFD04FCF8FFFFFFF844FCFCB44420F85227F8277DFD16FFA8
%2720FD1FFC206FFCFCFCC2FFFD04FCF8FFFFFFFD05F82752FFF852A8FD19
%FFA827F8FD1EFC2668FCFCFCBBFFFD04FCF8FFFFFF277DFD06FFF8FD1CFF
%A827F893FD1CFC206FFCFCFCC2FFFD04FCF8FFFFFFF876FD05FF7DF8FD1E
%FF52F84BFD1BFC2768FCFCFCBCFFFD04FCF8FFFFFF5227FD05FF2752FD1F
%FF7DF8278CFD19FCF86FFCFCFCC2FFFD04FCF8FFFFFF2727FD04FF27F8A8
%FD20FFCF27F820FD18FC2068FCFCFC99FFFD04FCF8FFFFFF7DF8FFFFFFA8
%2727FD23FF7D27F84B8CFD15FCF893FCFCFCC2FFFD04FCF8FFFFFF7DF8FF
%FFFF20F87DFD25FF7DF8F8206EFD13FC2068FCFCFCBBFFFD04FCF8FD04FF
%F8FFFF2727F8FD28FFA852F8F8206F8CFD0DFC8C6FF86FFCFCFCC2FFFD04
%FCF8FD04FF277DA7F827F8FD2BFF7D52F8F8F820F84B204A204B204A2026
%FD04F868FCFCFCBBFFFD04FCF8FD04FF277DFF7DF827FD2FFFA87D524B52
%2727275227527DA8FFFF276FFCFCFCC2FFFD04FCF8FD04FF5227A8F852F8
%FD3EFF2768FCFCFCBCFFFD04FCF8FD04FF2752A876F827FD35FFA827277D
%FD05FFF86FFCFCFCC2FFFD04FCF8FD04FF52F8FFF852F8FD34FFA8F8514A
%F8A8FD04FF2768FCFCFC99FFFD04FCF8FD04FF7D277D7D2727FD34FF274B
%C6C62652FD04FFF893FCFCFCC2FFFD04FCF8FD04FF7DF8FF2727F8FD34FF
%2750C6C65126FD04FF2768FCFCFCBBFFFD04FCF8FD04FF7D2752275227FD
%32FFA8FFF87BC6C674277DFFFFFF276FFCFCFCC2FFFD04FCF8FD04FF7DF8
%FFA8F8F8FD32FFF8A82774C6C651F852F8CFFF2768FCFCFCBBFFFD04FCF8
%FD04FF7D27A8272727FD30FF76A827272675C6C64AFD042752276FFCFCFC
%C2FFFD04FCF8FD05FFF8A85252F8FD30FF27F8A8F82720C6C6F8F8F827F8
%A72768FCFCFCBCFFFD04FCF8FD05FFF8FF7CF827FD2FFF5252275227F8F8
%C6A5FD05F8A8F86FFCFCFCC2FFFD04FCF8FD05FFF87DF827F8FD2EFFA752
%F852F827F8F85120FD07F868FCFCFC99FFFD04FCF8FD05FFF8A852F827FD
%2EFFF87DFD0427F8F8F827FD07F893FCFCFCC2FFFD04FCF8FD05FFF8A827
%7CF8FD2DFF2776F87DF827FD0CF868FCFCFCBBFFFD04FCF8FD05FFF8FFFF
%27F8FD2DFF272752F8A7FD0DF86FFCFCFCC2FFFD04FCF8FD05FFF8FF5227
%F8A8FD2AFF7DF8A7F85227FD0EF868FCFCFCBBFFFD04FCF8FD04FFA8F8FF
%7D7DF852FD2BFFF8277DF87D27FD0DF86FFCFCFCC2FFFD04FCF8FD04FF7D
%F8FFFFA8F8F8FD29FF7D7DFFF87627FD0FF868FCFCFCBCFFFD04FCF8FD04
%FF7D27FFFF5252F852FD28FF5227A87DF8A8FD0FF86FFCFCFCC2FFFD04FC
%F8FD04FF7DF8FFFF2752F8F8A8FD26FFFD0427FF27FD10F868FCFCFC99FF
%FD04FCF8FD04FF7D27FFFFFF4B5227F8A8FD25FFA8F87DF852A827FD0FF8
%93FCFCFCC2FFFD04FCF8FD04FF7DF8FFFFFFA7FF27F8F876FD24FFA852F8
%7DF8A827FD0FF868FCFCFCBBFFFD04FCF8FD04FF7D27FFFFFFA8F827F87D
%F82727527DA8FD1EFF7D27A82727522727FD0FF86FFCFCFCC2FFFD04FCF8
%FD04FF7DF852274BF8F8522752FF7D52F827FD09F827F82727527DFD10FF
%A827277DF852FD11F868FCFCFCBBFFFD04FCF8FD04FF7DF8F827F8F827FF
%522752FD0DFF7D7D76522727F82752FD0DFFF87DF827522727FD10F86FFC
%FCFCC2FFFD04FCF8FD04FF7DFD04F852FFA8F852FD14FFA85127F827A7FD
%0AFF7DF87DF852FD12F868FCFCFCBCFFFD04FCF8FD04FFA8F8F85252FFFF
%2727FD04FF7D52FD12FFA827F827FD09FF7D52F8A7F852FD11F86FFCFCFC
%C2FFFD04FCF8FD05FFF827A8FFFFFFF8FD05FFA827F8A8FD12FFA827F87D
%FD06FFA1F87D27F876FD12F868FCFCFC99FFFD04FCF8FD05FF277DFFFFFF
%7D27FD04FF27FFFF52F852A8FD08FF527DFD08FF7DF827A8FD05FF5127A8
%275127FD11F893FCFCFCC2FFFD04FCF8FD05FF2751FFFFFF7D27FD04FF52
%F8FFFFFF2720F8527D7D27A8FFFF52F8277DFD08FFF8F8A8FFFFFF52A8F8
%277DFD13F868FCFCFCBBFFFD04FCF8FD05FF7DF8FFFFFF7D52FFFF52FFFF
%2727FFFFFFA8F8275227527DFD04FF7CF827277C7DFD04FFA8F827A8FFFF
%52F8A8F87D27FD12F86FFCFCFCC2FFFD04FCF8FF5227FFFFFFF87CFFFFA7
%F8FFFFF852FFA827F8A8FFFF2776FFFFFF4BF8A8FD04FFA87D2727F87DFF
%FFFF52F827FFA827F85252F827FD12F868FCFCFCBBFFFD04FCF852F82752
%FFFF2727FFFFFF27A8FFA82752FFFF27F82727277DFD04FF7DF8277DFD08
%FF527DFF7DF8F87DA8F84B27A827FD13F86FFCFCFCC2FFFD04FCF8F852F8
%52A8FFFFF87DFFFF2752FFFF7D2052FF2752A87D7DFFFF2752FFFFFF5227
%F8F8F827F827FFFF27207D20F8F8F8FF52F8F8277DFD13F868FCFCFCBCFF
%FD04FCF8522727F852A8FF52F8FFFFA8F8A8FFFFA827F82727FF5252FFFF
%7D2727A8FD05FFA87DA8FFFF27A8F852FD05F8A82752F852FD13F86FFCFC
%FCC2FFFD04FCF827F827F8F827FFFFF827FFFF52F8FD09FF27F84BFFFF52
%F8F8F84B5252A8FFF8FFFF52F87D76FD06F87DF852FD14F868FCFCFC99FF
%FD04FCF8F827F827F8A77DFF7DF87DFFFF7DF8A8FD04FFA8A8FFFFA84BF8
%27F827F827275251FFFF7D27FFFF27277DFD05F8272752F827FD13F893FC
%FCFCC2FFFD04FCF8F8F827F87DF87DFFFF51F8A8FFFF7DF852A8FFFF7DF8
%7DFD04FFA8F8F8FD04FF52A820FF5252A72727FD06F87D2727FD15F868FC
%FCFCBBFFFD04FCFD04F87DF8275227FFFF2727A8FFFFFF27F827FFFFA8F8
%27A8FFFFFFA82752FFFFFFF852FD04277CFD08F8277D2727FD14F86FFCFC
%FCC2FFFD04FCFD05F8277DF85276FFFFF827A8FFFFFFA827F827A8FF52F8
%F87DFFFFA8F8FF7652CFF827F85252FD0AF82752FD15F868FCFCFCBBFFFD
%04FCFD05F8A727522727FFFFFF2727A8FD05FF5227F852A87DFD0427F8FF
%A8FD04277DF8A8FD09F827F84BFD15F86FFCFCFCC2FFFD04FCFD06F82752
%F87627FFFFFF27F852FD06FFA72720277DFFFF7D52277D52F87D7DFD0DF8
%A8FD16F868FCFCFCBCFFFD04FCFD06F87DF87DF85252FFFFFF7CF827A8FD
%07FF7D2727FFFFFD047D52FFFFFD0CF827277DFD15F86FFCFCFCC2FFFD04
%FCFD07F852F852F87DFD04FFA827F827A8FD07FF2727FD06FF5227FD0EF8
%27FD15F868FCFCFC99FFFD04FCFD08F827F87D27A8FD05FFA827F827A8FD
%06FF27FD05FF2727FD0DF82727FD16F893FCFCFCC2FFFD04FCFD07F827F8
%525120A8FD07FFA827F82752277D7D7DA852FF7DFFFF52FD0BF827F8F8A8
%FD17F868FCFCFCBBFFFD04FCFD08F8277DF87D274BFD09FF5227F8F8F827
%27F852277C7D7DFD0BF85227F82752FD16F86FFCFCFCC2FFFD04FCFD09F8
%272727F8A8A8FD0AFF7DF8F8207D27F8F82727FFFD0BF8A7F8F8F827FD16
%F868FCFCFCBBFFFD04FCFD0AF852F8CAF8A8FD0BFF52F8A87D52F827F8F8
%F827FD0AF8FF27F8A1FD17F86FFCFCFCC2FFFD04FCFD09F827F8A8F8277D
%FD0CFF27F82727F8A87DF827FD0AF827522727F852FD16F868FCFCFCBCFF
%FD04FCFD0AF8A752275227FFFF2727F827A8FD05FFA8F82727F8FFA8FD0C
%F87D7DF87D2727FD16F86FFCFCFCC2FFFD04FCFD0AF827F876F8527627F8
%9EC6F852FD06FFF827F827FFFFFD0CF8A14B51F8A7FD17F868FCFCFC99FF
%FD04FCFD0AF82752FD0427F874C6C65127FD06FF51F82727FFFF27F827F8
%A8F8F8F827F8F87D7DF87DF84B27FD16F893FCFCFCC2FFFD04FCFD0BF852
%F827F87DF8C6C6C6F852FD06FF52F8F827FFFFF82727F8FFFFF8F8A72752
%A8F852F8FFF827FD16F868FCFCFCBBFFFD04FCFD0CF852F8FF274BC6C6C6
%F87D277DFD04FF7DF827F8FFFF52F827F8FFFF277DFF7D7D7D52F827527D
%FD17F86FFCFCFCC2FFFD04FCFD0DF8A827F826C6C651F82727FD05FF52F8
%27F87CFF52F827F87DFD04FF7D2727FFF827F8A8FD17F868FCFCFCBBFFFD
%04FCFD0CF85227F8F851C6C7F82727A8F8A1FFFFFFA1F827F852FFFFF827
%F851A8A17DFF2727F87D7D272727FD17F86FFCFCFCC2FFFD04FCFD11F8C6
%F8F8F8A8F827FD04FF7DF827F87DFFFF27F827F820F8F8F8A8F827F8FFFD
%1AF868FCFCFCBCFFFD04FCFD16F8272727FFFFFF7DF827F8FFFFFF52F827
%F8F8C67AF8F87DF82727FD06F827446F6893686F2027FD0BF86FFCFCFCC2
%FFFD04FCFD16F852F87DFFFFFF7D20F827FD04FFF827F827C6C620F85127
%FD06F844FD0AFC6EFD0AF868FCFCFC99FFFD04FCFD16F8277D2752FFFFA1
%F8277DFFFFFF5227F827F8C6C69FF8F827FD04F84B8CFD06FCBBFD06FC44
%FD08F893FCFCFCC2FFFD04FCFD16F85227F8FFFFFF7DF8F8FD04FF27F820
%A8F874C6C620FD05F84AFD08FCC3B4FCFCB4FCFCFC68FD07F868FCFCFCBB
%FFFD04FCFD16F827F8A8A8FFFF52F852FD04FFF8F87DFF52279EC62627F8
%F8F84BFD09FCCAFCFCC2FFFD04FC6827FD05F86FFCFCFCC2FFFD04FCFD17
%F8A8F852FFFF27F87DFD04FFF820FFFF7DF8269E26F8F8F820FD0AFCC9B4
%A7FFBCFD05FC44FD05F868FCFCFCBBFFFD04FCFD16F87DF84BFFFFFF4BF8
%FD04FFA8F87DFFFF7D2727FD04F8208CFD06FCB5FCFCFCFFCFFFB5FD07FC
%20FD04F86FFCFCFCC2FFFD04FCFD17F820A8A8FFFFF827FD04FF7DF87DFF
%7D2752F827F8F8F820FD06FCB5FFCAFCB5FFC2FD09FC6FFD04F868FCFCFC
%BCFFFD04FCFD16F827A82727FFFF2727FD04FF7DF8FFFFFFF82752FD04F8
%93FD07FCC2B4FCBCCAFCB4B5FD08FC27F8F8F86FFCFCFCC2FFFD04FCFD16
%F82727F8CFFFFFF852FD04FF27F8FFFF7CA8F85220F8F8F8FD0BFCC2A1C2
%CACAFD08FC20F8F8F868FCFCFC99FFFD04FCFD16F827F8A176FF7DF87DFD
%04FF5227FFFF2727A8F827F8F844FD08FCBCC3CAFFFFFFC3FD09FC93F8F8
%F893FCFCFCC2FFFD04FCFD17F8A8F8275227F8FD05FF2727FFFFA820277D
%F8F8F84AFD07FCBBCAC3B5BBFFFFBCFD09FC8CF8F8F868FCFCFCBBFFFD04
%FCFD16F827F8275227F8F852FD04FF52F8FFFF7D7D277C27F8F868FD0AFC
%B5CFFFFFFFFD0AFCF8F8F86FFCFCFCC2FFFD04FCFD17F827FF76F8275227
%F827A8FF2727FFFFF82752FD04F86EFD0AFCCAFFC2FF99FD0AFCF8F8F868
%FCFCFCBBFFFD04FCFD16F820A827F8272752FF7D27FFFF2727FFFFFFF84B
%51F8F8F844FD08FCB5CAFFBBB5FFFD0AFCB4F8F8F86FFCFCFCC2FFFD04FC
%FD17F827F820FF52F8FD05FFF852FFFFF87DF827F8F8F84BFD07FCB5CAFF
%B5FCB5FFFD0AFC68F8F8F868FCFCFCBCFFFD04FCFD16F827F82752FF7D27
%FD05FF274BFFFF27F87DFD05F8FD06FCBBCAFFB4FCFCBCC9FD06FCC9FCFC
%FC4BF8F8F86FFCFCFCC2FFFD04FCFD17F87DF852FFFF52FD05FFF852FFFF
%FF27F8A7FD04F88CFD04FCBBFFFF8CFCFCFC99CAFD05FCCAFFB5FCFCFD04
%F868FCFCFC99FFFD04FCFD16F8272727A8FD08FF2727FFFFF8527DF852F8
%F8F84BFCFCFCB5C9C3FD05FCBCFFCFC9CAC9FFFFFFBCFC68FD04F893FCFC
%FCC2FFFD04FCFD18F8527DFD06FF5227F8F8F87D52F85252FD05F8FD0CFC
%BCC3C9C3CFCAC9C3B5FC20FD04F868FCFCFCBBFFFD04FCFD17F827F87CFF
%FFFF7D27FD04F8525252FF52F8527CFD04F820FD14FC4BFD05F86FFCFCFC
%C2FFFD04FCFD18F87DA8FFFF7CF8527DF8F8F8FFFFFFF82752F85227FD04
%F820FD12FC8CFD06F868FCFCFCBBFFFD04FC27FD16F87D7DF8FD04FF7DF8
%7D5152FD04FFF84B52F827FD05F844FD10FC93FD07F8B4FCFCFCC2FFFD04
%FC44FD15F8277DF8A8FD04FF27FFFFA8A8FFFFFF7D7DF8527DFD07F820FD
%0EFC4BFD07F827FD04FCBCFFFD05FCFD15F852F87CFD0DFF52F87DF87D7D
%FD08F84B8CFD09FC6827FD08F88CFD04FCC2FFFD06FCFD15F82727522752
%275227522752275227522727F827F827FD0BF84B6868686E4420FD0AF868
%FD05FC99FFFD07FC8C4B204B2027204B2027204B2027204B20272027444B
%204B444B204B4B4B264B4B4B264B4B27264B264B264B4B4B264B444B204B
%2027204B2027204B2027204B2027206FFD07FCC2FFFD52FCBBFFFD52FCC2
%FFFD52FCBBFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Brick)
(Brick) 0 0 72 72 [
%AI3_Tile
(0 O 0 R 0.3 0.85 0.85 0 k
 0.3 0.85 0.85 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
0 0 m
0 72 L
72 72 L
72 0 L
0 0 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0 68.4097 m
72 68.4097 l
S0 61.209 m
72 61.209 L
S0 54.0088 m
72 54.0088 L
S0 46.8076 m
72 46.8076 L
S0 39.6084 m
72 39.6084 L
S0 32.4072 m
72 32.4072 L
S0 25.207 m
72 25.207 L
S0 18.0059 m
72 18.0059 L
S0 10.8057 m
72 10.8057 L
S0 3.6064 m
72 3.6064 L
S68.4102 68.4097 m
68.4102 61.2217 l
S54.0098 68.4097 m
54.0098 61.2217 L
S39.6094 68.4097 m
39.6094 61.2217 L
S25.21 68.4097 m
25.21 61.2217 L
S10.8105 68.4097 m
10.8105 61.2217 L
S68.4102 53.9717 m
68.4102 46.7842 l
S54.0098 53.9717 m
54.0098 46.7842 L
S39.6094 53.9717 m
39.6094 46.7842 L
S25.21 53.9717 m
25.21 46.7842 L
S10.8105 53.9717 m
10.8105 46.7842 L
S68.4102 39.5967 m
68.4102 32.4092 l
S54.0098 39.5967 m
54.0098 32.4092 L
S39.6094 39.5967 m
39.6094 32.4092 L
S25.21 39.5967 m
25.21 32.4092 L
S10.8105 39.5967 m
10.8105 32.4092 L
S68.4102 25.2217 m
68.4102 18.0342 l
S54.0098 25.2217 m
54.0098 18.0342 L
S39.6094 25.2217 m
39.6094 18.0342 L
S25.21 25.2217 m
25.21 18.0342 L
S10.8105 25.2217 m
10.8105 18.0342 L
S68.4102 10.7842 m
68.4102 3.5967 l
S54.0098 10.7842 m
54.0098 3.5967 L
S39.6094 10.7842 m
39.6094 3.5967 L
S25.21 10.7842 m
25.21 3.5967 L
S10.8105 10.7842 m
10.8105 3.5967 L
S61.1973 3.5967 m
61.1973 0 L
S46.7969 3.5967 m
46.7969 0 L
S32.3965 3.5967 m
32.3965 0 L
S17.9971 3.5967 m
17.9971 0 L
S3.5967 3.5967 m
3.5967 0 l
S61.1973 18.0342 m
61.1973 10.8467 L
S46.7969 18.0342 m
46.7969 10.8467 L
S32.3965 18.0342 m
32.3965 10.8467 L
S17.9971 18.0342 m
17.9971 10.8467 L
S3.5967 18.0342 m
3.5967 10.8467 l
S61.1973 32.4092 m
61.1973 25.2217 L
S46.7969 32.4092 m
46.7969 25.2217 L
S17.9971 32.4092 m
17.9971 25.2217 L
S3.5967 32.4092 m
3.5967 25.2217 l
S61.1973 46.7842 m
61.1973 39.5967 L
S46.7969 46.7842 m
46.7969 39.5967 L
S32.3965 46.7842 m
32.3965 39.5967 L
S17.9971 46.7842 m
17.9971 39.5967 L
S3.5967 46.7842 m
3.5967 39.5967 l
S61.1973 61.2217 m
61.1973 54.0347 L
S46.7969 61.2217 m
46.7969 54.0347 L
S32.3965 61.2217 m
32.3965 54.0347 L
S17.9971 61.2217 m
17.9971 54.0347 L
S3.5967 61.2217 m
3.5967 54.0347 l
S61.1973 71.959 m
61.1973 68.4717 L
S46.7969 71.959 m
46.7969 68.4717 L
S32.3965 71.959 m
32.3965 68.4717 L
S17.9971 71.959 m
17.9971 68.4717 L
S3.5967 71.959 m
3.5967 68.4717 l
S32.3965 32.4092 m
32.3965 25.2217 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Confetti)
(Confetti) 4.85 3.617 76.85 75.617 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
4.85 3.617 m
4.85 75.617 L
76.85 75.617 L
76.85 3.617 L
4.85 3.617 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 g
 0 G
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
10.6 64.867 m
7.85 62.867 l
S9.1 8.617 m
6.85 6.867 l
S78.1 68.617 m
74.85 67.867 l
S76.85 56.867 m
74.35 55.117 l
S79.6 51.617 m
76.6 51.617 l
S76.35 44.117 m
73.6 45.867 l
S78.6 35.867 m
76.6 34.367 l
S76.1 23.867 m
73.35 26.117 l
S78.1 12.867 m
73.85 13.617 l
S68.35 14.617 m
66.1 12.867 l
S76.6 30.617 m
73.6 30.617 l
S62.85 58.117 m
60.956 60.941 l
S32.85 59.617 m
31.196 62.181 l
S47.891 64.061 m
49.744 66.742 l
S72.814 2.769 m
73.928 5.729 l
S67.976 2.633 m
67.35 5.909 l
S61.85 27.617 m
59.956 30.441 l
S53.504 56.053 m
51.85 58.617 l
S52.762 1.779 m
52.876 4.776 l
S45.391 5.311 m
47.244 7.992 l
S37.062 3.375 m
35.639 5.43 l
S55.165 34.828 m
57.518 37.491 l
S20.795 3.242 m
22.12 5.193 l
S14.097 4.747 m
15.008 8.965 l
S9.736 1.91 m
8.073 4.225 l
S31.891 5.573 m
32.005 8.571 l
S12.1 70.367 m
15.6 68.867 l
S9.35 54.867 m
9.6 58.117 l
S12.85 31.867 m
14.35 28.117 l
S10.1 37.367 m
12.35 41.117 l
S34.1 71.117 m
31.85 68.617 l
S38.35 71.117 m
41.6 68.367 l
S55.1 71.117 m
58.35 69.117 l
S57.35 65.117 m
55.35 61.867 l
S64.35 66.367 m
69.35 68.617 l
S71.85 62.867 m
69.35 61.117 l
S23.6 70.867 m
23.6 67.867 l
S20.6 65.867 m
17.35 65.367 l
S24.85 61.367 m
25.35 58.117 l
S25.85 65.867 m
29.35 66.617 l
S14.1 54.117 m
16.85 56.117 l
S12.35 11.617 m
12.6 15.617 l
S12.1 19.867 m
14.35 22.367 l
S26.1 9.867 m
23.6 13.367 l
S34.6 47.117 m
32.1 45.367 l
S62.6 41.867 m
59.85 43.367 l
S31.6 35.617 m
27.85 36.367 l
S36.35 26.117 m
34.35 24.617 l
S33.85 14.117 m
31.1 16.367 l
S37.1 9.867 m
35.1 11.117 l
S34.35 20.867 m
31.35 20.867 l
S44.6 56.617 m
42.1 54.867 l
S47.35 51.367 m
44.35 51.367 l
S44.1 43.867 m
41.35 45.617 l
S43.35 33.117 m
42.6 30.617 l
S43.85 23.617 m
41.1 25.867 l
S44.35 15.617 m
42.35 16.867 l
S67.823 31.1 m
64.823 31.1 l
S27.1 32.617 m
29.6 30.867 l
S31.85 55.117 m
34.85 55.117 l
S19.6 40.867 m
22.1 39.117 l
S16.85 35.617 m
19.85 35.617 l
S20.1 28.117 m
22.85 29.867 l
S52.1 42.617 m
54.484 44.178 l
S52.437 50.146 m
54.821 48.325 l
S59.572 54.133 m
59.35 51.117 l
S50.185 10.055 m
53.234 9.928 l
S51.187 15.896 m
53.571 14.075 l
S58.322 19.883 m
59.445 16.823 l
S53.1 32.117 m
50.6 30.367 l
S52.85 24.617 m
49.6 25.617 l
S61.85 9.117 m
59.1 10.867 l
S69.35 34.617 m
66.6 36.367 l
S67.1 23.617 m
65.1 22.117 l
S24.435 46.055 m
27.484 45.928 l
S25.437 51.896 m
27.821 50.075 l
S62.6 47.117 m
65.321 46.575 l
S19.85 19.867 m
20.35 16.617 l
S21.85 21.867 m
25.35 22.617 l
S37.6 62.867 m
41.6 62.117 l
S38.323 42.1 m
38.823 38.6 l
S69.35 52.617 m
66.85 53.867 l
S14.85 62.117 m
18.1 59.367 l
S9.6 46.117 m
7.1 44.367 l
S20.6 51.617 m
18.6 50.117 l
S46.141 70.811 m
47.994 73.492 l
S69.391 40.561 m
71.244 43.242 l
S38.641 49.311 m
39.35 52.117 l
S25.141 16.811 m
25.85 19.617 l
S36.6 32.867 m
34.6 31.367 l
S6.1 68.617 m
2.85 67.867 l
S4.85 56.867 m
2.35 55.117 l
S7.6 51.617 m
4.6 51.617 l
S6.6 35.867 m
4.6 34.367 l
S6.1 12.867 m
1.85 13.617 l
S4.6 30.617 m
1.6 30.617 l
S72.814 74.769 m
73.928 77.729 l
S67.976 74.633 m
67.35 77.909 l
S52.762 73.779 m
52.876 76.776 l
S37.062 75.375 m
35.639 77.43 l
S20.795 75.242 m
22.12 77.193 l
S9.736 73.91 m
8.073 76.225 l
S10.1 23.617 m
6.35 24.367 l
S73.217 18.276 m
71.323 21.1 l
S28.823 39.6 m
29.505 42.389 l
S49.6 38.617 m
47.6 37.117 l
S60.323 73.6 m
62.323 76.6 l
S60.323 1.6 m
62.323 4.6 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Leaves - Fall )
(Leaves - Fall ) 0 0 64.0781 78.9336 [
%AI3_Tile
(0 O 0 R 0.05 0.2 1 0 k
 0.05 0.2 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
64.0781 78.9336 m
64.0781 0 L
0 0 L
0 78.9336 L
64.0781 78.9336 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.83 0 1 0 k
 0.83 0 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
29.7578 0.9902 m
30.4346 1.1914 30.7246 1.3428 V
29.2559 4.0547 33.707 8.3359 34.627 9.0762 C
35.2275 8.8506 35.3477 6.3184 34.6699 4.9805 C
35.5137 5.1035 37.7031 3.7256 38.4609 2.4365 C
38.5254 3.125 40.0957 6.0664 40.9219 6.4434 C
40.002 6.8408 39.3359 8.3135 38.5742 9.7617 C
39.5957 9.9287 40.9961 9.0078 42.4668 8.1025 C
42.9814 8.9043 44.3555 9.875 45.6143 10.3916 C
44.5264 11.0781 44.0313 11.8203 43.5352 13.2793 C
42.4922 12.7139 40.3057 12.5645 39.7764 12.8516 C
40.291 13.9648 42.5371 14.5078 43.2676 14.4551 C
43.0137 15.3164 42.8652 17.4697 43.0391 20.0625 C
41.3789 18.7461 39.834 17.4297 38.1738 17.4883 C
38.4434 16.0664 37.8076 14.2607 37.4307 13.7676 C
36.8574 14.5117 36.4463 15.3389 36.8008 17.3164 C
35.3486 17.8008 34.1113 18.3467 32.7373 19.6045 C
32.7373 17.7734 32.166 16.5723 31.2969 15.2959 C
32.5576 14.8076 33.8301 13.6045 33.8252 12.5664 C
32.9775 12.7178 31.2852 13.4619 30.793 14.4551 C
30.0742 13.707 28.3906 12.3984 26.7871 12.3945 C
27.9746 11.5391 28.8945 10.5059 28.9893 8.5938 C
30.2422 9.5645 32.6953 10.1797 34.0752 9.582 C
29.2344 5.3457 29.7031 2.3125 29.7578 0.9902 C
f13.8525 29.9844 m
13.3281 29.5127 13.1309 29.25 V
15.623 27.4326 13.3691 21.6074 12.8555 20.5439 C
12.2168 20.4883 10.8096 23.2285 10.8457 24.7266 C
9.7129 23.9707 8.0488 24.0918 6.4463 24.3779 C
7.0186 23.2891 6.6172 21.3447 5.8164 20.5439 C
6.8184 20.5801 8.1699 19.8652 9.4785 18.8838 C
8.6436 18.0645 6.8164 18.2246 4.9004 18.8838 C
4.9004 17.5107 4.0781 15.7734 3.2412 14.5918 C
4.5576 14.6484 5.7031 13.9629 6.5605 12.9316 C
7.2256 14.5 9.2598 15.6133 10.166 15.5645 C
10.1826 14.1992 8.6094 12.1094 7.5879 11.7109 C
8.1875 11.041 9.207 9.5107 10.166 7.0947 C
10.9648 9.0205 12.1348 10.2627 13.3672 11.1953 C
12.2256 12.7578 12.3994 13.6289 12.7988 15.1074 C
13.541 14.5664 14.5723 14.1338 14.7441 12.1309 C
16.4609 12.416 17.5957 12.3447 19.0938 11.4434 C
18.6387 13.1055 18.6348 14.707 18.9551 16.4063 C
17.1055 16.2666 15.5449 16.4795 14.5156 17.9688 C
15.3457 18.1953 17.6055 18.2549 18.4795 17.3223 C
18.8066 18.3047 19.7012 19.7109 21.1475 20.4043 C
19.707 20.6641 18.7227 21.7637 17.8135 23.4492 C
17.1006 22.0332 14.873 20.3691 13.3711 20.3145 C
15.373 24.3779 15.373 27.2959 13.8525 29.9844 C
f41.2324 26.0742 m
41.5518 26.7021 41.7549 26.959 V
44.1523 25.0176 48.958 28.3262 49.8535 29.0957 C
49.7432 29.7266 47.6182 30.8643 45.9004 29.834 C
46.3408 31.123 45.4395 33.084 44.2402 34.126 C
45.9805 34.0254 48.126 35.3867 48.6484 36.1289 C
48.8701 35.1514 50.0527 33.8809 51.3379 32.8672 C
51.6895 33.8398 50.9941 35.958 50.0781 37.5605 C
51.3125 38.0605 52.4248 38.9912 52.8828 40.25 C
53.3398 38.9336 54.3428 38.2598 55.6875 37.5039 C
54.5273 36.0762 53.7471 33.9023 54.0273 33.0391 C
55.3496 33.374 56.9209 36.0918 57.0439 37.1816 C
57.9189 36.415 59.4727 35.7285 62.0537 35.4219 C
60.3535 34.3438 59.9902 32.3516 59.4063 30.9219 C
58.2588 31.3682 56.0898 31.4277 55.1152 30.8643 C
55.8281 30.2852 57.168 29.7344 59.1777 29.7207 C
59.1777 28.1758 59.6406 27.043 60.8945 25.8281 C
59.1719 25.8418 57.0723 25.3555 55.5762 24.9629 C
55.3281 26.292 54.4844 27.8887 53.3398 28.2891 C
53.334 27.4277 53.5996 25.1797 54.4844 24.5117 C
53.6201 23.9443 52.3672 22.5674 51.9102 20.8496 C
51.2881 22.1758 50.4268 23.4805 48.5645 23.9238 C
49.749 24.9766 50.584 26.9941 50.25 28.4609 C
45.1973 24.4785 42.5215 25.7773 41.2324 26.0742 C
f27.7578 38.7324 m
28.4346 38.9316 28.7246 39.084 V
27.2559 41.7969 31.707 46.0776 32.627 46.8169 C
33.2275 46.5918 33.3477 44.0586 32.6699 42.7227 C
33.5137 42.8457 35.7031 41.4678 36.4609 40.1787 C
36.5254 40.8652 38.0957 43.8066 38.9219 44.1846 C
38.002 44.582 37.3359 46.0547 36.5742 47.5039 C
37.5957 47.6709 38.9961 46.7485 40.4668 45.8438 C
40.9814 46.6445 42.3555 47.6177 43.6143 48.1328 C
42.5264 48.8198 42.0313 49.5615 41.5352 51.0205 C
40.4922 50.4556 38.3057 50.3057 37.7764 50.5938 C
38.291 51.7056 40.5371 52.2485 41.2676 52.1958 C
41.0137 53.0576 40.8652 55.2109 41.0391 57.8037 C
39.3789 56.4878 37.834 55.1719 36.1738 55.2285 C
36.4434 53.8076 35.8076 52.002 35.4307 51.5088 C
34.8574 52.2529 34.4463 53.0796 34.8008 55.0576 C
33.3486 55.5425 32.1113 56.0879 30.7373 57.3467 C
30.7373 55.5146 30.166 54.314 29.2969 53.0366 C
30.5576 52.5488 31.8301 51.3467 31.8252 50.3076 C
30.9775 50.46 29.2852 51.2036 28.793 52.1958 C
28.0742 51.4497 26.3906 50.1396 24.7871 50.1357 C
25.9746 49.2817 26.8945 48.2466 26.9893 46.335 C
28.2422 47.3057 30.6953 47.9209 32.0752 47.3237 C
27.2344 43.0869 27.7031 40.0547 27.7578 38.7324 C
f13.5195 70.3916 m
12.9941 69.9209 12.7988 69.6587 V
15.2891 67.8418 13.0352 62.0146 12.5225 60.9517 C
11.8828 60.8955 10.4766 63.6367 10.5117 65.1348 C
9.3809 64.3789 7.7148 64.4995 6.1133 64.7856 C
6.6855 63.6987 6.2842 61.7529 5.4834 60.9517 C
6.4854 60.9878 7.8359 60.2729 9.1455 59.2925 C
8.3105 58.4717 6.4834 58.6338 4.5674 59.2925 C
4.5674 57.9189 3.7461 56.1816 2.9082 54.9995 C
4.2246 55.0576 5.3691 54.3706 6.2275 53.3408 C
6.8926 54.9097 8.9258 56.0215 9.832 55.9727 C
9.8496 54.6079 8.2764 52.5176 7.2539 52.1187 C
7.8545 51.4497 8.873 49.9189 9.832 47.5039 C
10.6309 49.4297 11.8008 50.6719 13.0342 51.6045 C
11.8926 53.1655 12.0664 54.0366 12.4648 55.5146 C
13.209 54.9746 14.2393 54.5415 14.4102 52.5386 C
16.127 52.8247 17.2637 52.7529 18.7598 51.8525 C
18.3057 53.5137 18.3027 55.1147 18.623 56.8149 C
16.7725 56.6748 15.2129 56.8887 14.1826 58.377 C
15.0117 58.6035 17.2725 58.6626 18.1465 57.731 C
18.4736 58.7129 19.3691 60.1187 20.8145 60.8125 C
19.375 61.0728 18.3896 62.1719 17.4805 63.8579 C
16.7676 62.4429 14.541 60.7769 13.0371 60.7227 C
15.041 64.7856 15.041 67.7046 13.5195 70.3916 C
f41.2324 64.4824 m
41.5518 65.1113 41.7549 65.3682 V
44.1523 63.4272 48.958 66.7354 49.8535 67.5034 C
49.7432 68.1362 47.6182 69.2725 45.9004 68.2422 C
46.3408 69.5313 45.4395 71.4922 44.2402 72.5342 C
45.9805 72.4341 48.126 73.7954 48.6484 74.5371 C
48.8701 73.5601 50.0527 72.29 51.3379 71.2754 C
51.6895 72.249 50.9941 74.3662 50.0781 75.9683 C
51.3125 76.4692 52.4248 77.3994 52.8828 78.6582 C
53.3398 77.3423 54.3428 76.667 55.6875 75.9111 C
54.5273 74.4844 53.7471 72.3101 54.0273 71.4473 C
55.3496 71.7822 56.9209 74.5 57.0439 75.5903 C
57.9189 74.8232 59.4727 74.1372 62.0537 73.8311 C
60.3535 72.7534 59.9902 70.7612 59.4063 69.3301 C
58.2588 69.7773 56.0898 69.8364 55.1152 69.2725 C
55.8281 68.6934 57.168 68.1431 59.1777 68.1284 C
59.1777 66.583 59.6406 65.4512 60.8945 64.2373 C
59.1719 64.249 57.0723 63.7632 55.5762 63.3721 C
55.3281 64.7002 54.4844 66.2974 53.3398 66.6973 C
53.334 65.8364 53.5996 63.5874 54.4844 62.9214 C
53.6201 62.353 52.3672 60.9751 51.9102 59.2583 C
51.2881 60.583 50.4268 61.8882 48.5645 62.333 C
49.749 63.3862 50.584 65.4033 50.25 66.8691 C
45.1973 62.8872 42.5215 64.1851 41.2324 64.4824 C
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Stripes)
(Stripes) 8.45 4.6001 80.45 76.6001 [
%AI3_Tile
(0 O 0 R 1 0.07 1 0 k
 1 0.07 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 3.6 w 4 M []0 d0 XR
8.2 8.2 m
80.7 8.2 L
S8.2 22.6001 m
80.7 22.6001 L
S8.2 37.0002 m
80.7 37.0002 L
S8.2 51.4 m
80.7 51.4 L
S8.2 65.8001 m
80.7 65.8001 L
S8.2 15.4 m
80.7 15.4 L
S8.2 29.8001 m
80.7 29.8001 L
S8.2 44.2 m
80.7 44.2 L
S8.2 58.6001 m
80.7 58.6001 L
S8.2 73.0002 m
80.7 73.0002 L
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
([\265\356\267\317]) Pc
(Brick) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Brick) Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Confetti) Pc
(Leaves - Fall ) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Leaves - Fall ) Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Stripes) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(\267\271\300\314\276\356 1) Ln
0 A
0 O
0 1 1 0 k
0 J 0 j 1 w 4 M []0 d0 XR
366.6943 311.4229 m
213.624 311.4229 L
213.624 549.5332 L
366.6943 549.5332 L
366.6943 311.4229 L
fu0 0 0 0 k
221.9927 533.3115 m
221.6592 407.9785 l
244.1592 349.8115 l
260.6592 318.9785 l
305.1592 318.6445 l
343.8252 319.4785 l
350.1592 361.4785 l
358.3252 448.8115 l
358.3252 533.3115 l
356.3252 542.3115 348.3252 542.3115 v
231.1592 542.478 l
222.9927 541.145 221.9927 533.3115 v
f0 1 1 0 k
349.6592 542.145 m
276.9927 542.3115 l
273.9927 524.978 285.3262 506.478 v
296.6592 487.978 325.3252 467.645 358.3252 477.145 c
358.3252 533.3115 l
357.3271 541.9785 349.6592 542.145 v
f229.7427 491.8115 m
229.1177 498.1865 234.9927 501.3115 v
240.8677 504.4365 246.6177 501.0615 247.2427 499.8115 c
246.8677 495.4365 240.8677 492.4365 v
234.8677 489.4365 230.9927 490.8115 229.7427 491.8115 c
f0 0.2 1 0 k
343.8682 451.3115 m
340.2432 453.6865 339.4932 460.1865 v
338.7432 466.6865 341.6182 470.3115 343.8682 470.1865 c
346.1182 470.0615 347.7432 467.0615 347.7432 462.9365 c
347.7432 458.8115 346.7432 453.5615 y
345.7432 449.8115 343.8682 451.3115 v
f250.4927 371.6865 m
250.7427 377.3115 253.3677 379.8115 v
255.9927 382.3115 258.8677 382.3115 259.7427 379.6865 c
260.6177 377.0615 258.6177 370.5615 257.9927 369.6865 c
257.3677 368.8115 256.7427 365.9365 y
253.2427 364.1865 l
249.8677 366.3115 l
250.4927 371.6865 l
f301.7432 353.9365 m
297.7432 356.5615 295.6182 359.3115 v
293.4932 362.0615 293.3682 366.1865 294.4932 367.9365 c
295.6182 369.6865 298.3682 369.9365 300.3682 366.1865 c
302.3682 362.4365 302.9932 357.5615 302.9932 356.4365 c
302.9932 355.3115 303.6182 353.0615 y
301.7432 353.9365 l
f0.65 0.53 0.51 1 k
357.9932 449.978 m
351.1592 458.312 348.1592 459.645 v
345.8252 450.9785 343.4932 451.145 v
341.1592 451.3115 340.1592 457.978 y
322.2432 428.8115 316.2432 371.0615 v
306.4932 364.4775 302.9932 357.6445 v
302.6592 353.8125 301.4932 353.9785 v
297.8252 340.1445 300.4932 332.6445 v
303.1592 325.1445 303.6592 320.1445 303.3252 319.1445 c
349.3252 318.4785 l
358.1592 320.1523 358.3252 328.5654 v
357.9932 449.978 l
f*u
1 D
231.9141 543.02 m
226.0527 543.02 221.2842 538.2515 221.2842 532.3901 C
221.2842 328.5654 L
221.2842 322.7041 226.0527 317.9355 231.9141 317.9355 C
348.4053 317.9355 L
354.2666 317.9355 359.0342 322.7041 359.0342 328.5654 C
359.0342 532.3901 L
359.0342 538.2515 354.2666 543.02 348.4053 543.02 C
231.9141 543.02 L
f0 D
222.7012 328.5654 m
222.7012 532.3901 L
222.7012 537.4702 226.834 541.603 231.9141 541.603 C
348.4053 541.603 L
353.4854 541.603 357.6162 537.4702 357.6162 532.3901 C
357.6162 328.5654 L
357.6162 323.4854 353.4854 319.3535 348.4053 319.3535 C
231.9141 319.3535 L
226.834 319.3535 222.7012 323.4854 222.7012 328.5654 C
f*U
298.1846 490.7852 m
325.5068 466.1294 357.5596 476.1997 357.8799 476.3042 C
357.4404 477.6519 L
357.1279 477.5498 325.8311 467.7456 299.1338 491.8374 c
272.4512 515.9175 277.6299 541.5713 277.6851 541.8276 C
276.3003 542.1289 L
276.2427 541.8647 270.8618 515.4419 298.1846 490.7852 c
f0 1 1 0 k
352.8682 343.0615 m
352.8682 330.0137 342.29 319.4365 329.2432 319.4365 c
316.1943 319.4365 305.6182 330.0137 305.6182 343.0615 c
305.6182 356.1094 316.1943 366.6865 329.2432 366.6865 c
342.29 366.6865 352.8682 356.1094 352.8682 343.0615 c
fu0 0 0 0 k
325.3682 353.4365 m
322.4932 354.4365 321.7432 354.5615 v
320.9932 354.6865 321.2432 353.4365 321.2432 352.5615 c
321.2432 351.6865 321.2432 350.8115 322.6182 351.4365 c
323.9932 352.0615 325.3682 353.4365 y
f329.1182 353.1865 m
329.8682 358.0615 329.7432 359.1865 v
329.6182 360.3115 329.7432 361.8115 329.7432 362.3115 c
329.7432 362.8115 330.8682 362.6865 330.8682 361.5615 c
330.8682 360.4365 330.4932 359.4365 330.4932 358.8115 c
330.4932 358.1865 330.8682 355.0615 y
334.6182 357.5615 335.7432 358.8115 v
336.8682 360.0615 337.8682 361.3115 338.1182 360.3115 c
338.3682 359.3115 338.6182 358.4365 337.8682 357.6865 c
337.1182 356.9365 331.2432 353.9365 330.2432 352.5615 c
329.2432 351.1865 329.3682 350.3115 329.6182 349.6865 c
329.8682 349.0615 329.6182 348.4365 330.9932 348.9365 c
332.3682 349.4365 334.3682 350.4365 335.6182 351.0615 c
336.8682 351.6865 336.7432 350.1865 336.2432 349.6865 c
335.7432 349.1865 333.1182 347.8115 332.7432 347.5615 c
332.3682 347.3115 332.4932 346.0615 333.2432 345.8115 c
333.9932 345.5615 334.9932 345.1865 334.1182 343.9365 c
333.2432 342.6865 332.9932 342.6865 332.6182 341.3115 c
332.2432 339.9365 332.1182 336.9365 331.8682 335.1865 c
331.6182 333.4365 333.3682 332.9365 335.8682 332.9365 c
338.3682 332.9365 341.2432 333.3115 341.8682 333.5615 c
342.4932 333.8115 344.1182 336.3115 344.6182 336.9365 c
345.1182 337.5615 345.1182 337.3115 345.3682 336.4365 c
345.6182 335.5615 345.9932 333.6865 346.3682 332.8115 c
346.7432 331.9365 346.9932 331.4365 344.6182 330.8115 c
342.2432 330.1865 335.7432 330.5615 333.2432 330.9365 c
330.7432 331.3115 330.1182 332.3115 330.2432 334.9365 c
330.3682 337.5615 331.2432 342.1865 y
331.2432 343.0615 329.9932 342.5615 v
328.7432 342.0615 325.9932 339.4365 324.4932 337.8115 c
322.9932 336.1865 320.4932 333.6865 318.2432 332.8115 c
315.9932 331.9365 315.3682 333.1865 316.3682 333.6865 c
317.3682 334.1865 322.6182 338.6865 324.1182 340.3115 c
325.6182 341.9365 329.3682 345.6865 329.3682 346.1865 c
329.3682 346.6865 328.4932 347.0615 327.6182 347.1865 c
326.7432 347.3115 325.8682 346.9365 324.3682 345.9365 c
322.8682 344.9365 322.1182 344.1865 320.7432 344.9365 c
319.3682 345.6865 320.3682 346.6865 321.8682 346.9365 c
323.3682 347.1865 323.4932 347.8115 324.4932 347.8115 c
325.4932 347.8115 327.4932 347.9365 328.3682 348.3115 c
329.2432 348.6865 328.8682 349.1865 328.4932 349.8115 c
328.1182 350.4365 327.7432 350.6865 328.2432 351.8115 c
328.7432 352.9365 329.1182 353.1865 y
fU*u
1 D
0.65 0.53 0.51 1 k
276.665 508.8535 m
276.4204 508.8652 275.042 508.8926 274.0967 508.0039 c
273.5649 507.5044 273.2842 506.8037 273.2842 505.978 c
273.2842 504.6416 273.8511 503.8599 274.3271 503.4399 c
275.0835 502.7725 276.2373 502.4614 277.4141 502.6084 c
279.1074 502.8198 280.2012 504.1426 280.2012 505.978 c
280.2012 506.7349 279.8325 507.4536 279.1636 508.002 c
278.4331 508.6006 277.4126 508.9395 276.665 508.8535 C
f0 D
276.7983 507.4502 m
277.0234 507.4951 277.7256 507.3481 278.2651 506.9058 c
278.6094 506.624 278.7842 506.3115 278.7842 505.978 c
278.7842 504.853 278.2207 504.1372 277.2383 504.0146 c
276.6367 503.9395 275.8022 504.0283 275.2651 504.5024 c
274.8911 504.8325 274.7012 505.3291 274.7012 505.978 c
274.7012 506.4131 274.8198 506.7363 275.0635 506.9678 c
275.5161 507.397 276.3394 507.4521 276.6182 507.4375 C
276.7075 507.4326 L
276.7983 507.4502 L
f*U
*u
1 D
247.3975 500.6255 m
246.5693 501.5327 244.1372 503.6118 239.4287 503.1836 c
233.2993 502.6265 228.9453 498.3516 228.9453 492.9575 c
228.9453 492.8457 228.9473 492.7339 228.9507 492.6216 c
229.1216 487.502 230.6758 477.2598 231.2954 473.8511 c
231.8652 470.7153 232.1982 459.5527 232.377 453.5557 C
232.4507 451.1221 L
232.4604 450.8213 232.4648 450.5054 232.4648 450.1758 c
232.4648 448.5938 232.3628 446.6919 232.2471 444.5479 c
232.0884 441.5933 231.9067 438.2231 231.9067 434.4482 c
231.9067 431.6572 232.0059 428.6455 232.2866 425.417 c
233.3032 413.7324 243.2842 400.4453 251.9683 395.3672 c
260.1606 390.5762 267.5137 388.0566 268.5649 387.707 C
268.7905 387.418 271.9258 383.3867 Y
273.8477 380.8242 274.3022 379.0703 274.6201 375.417 c
274.9507 371.6201 274.9507 365.123 274.9507 362.9883 c
274.9507 361.1953 275.7363 359.7021 276.7393 359.5781 c
277.2124 359.5195 277.7954 359.7686 278.0137 360.6396 c
278.3306 361.9063 280.3076 366.6924 280.8105 367.8652 c
281.0991 368.5391 281.2437 369.2988 281.2437 370.0381 c
281.2437 370.7939 281.0933 371.5283 280.793 372.1279 C
280.7046 372.3037 L
280.2886 373.1211 279.5796 374.5156 279.5796 377.0352 c
279.5796 377.5967 279.6147 378.2148 279.6963 378.8945 c
280.1064 382.3125 280.7378 384.6377 281.1001 385.4404 C
281.8926 385.0566 283.1416 384.6885 284.1475 384.4248 C
284.2441 382.7676 284.6099 377.373 285.4688 373.6523 c
286.3428 369.8643 287.9375 366.1455 288.3921 365.1221 C
288.0435 364.2021 286.936 361.1855 286.7871 359.543 c
286.772 359.3809 286.7651 359.2295 286.7651 359.0898 c
286.7651 357.6709 287.4712 357.3574 287.7974 357.2891 c
288.4341 357.1563 289.0649 357.6211 289.3315 358.4199 c
289.604 359.2344 292.1475 362.4619 292.9346 363.0908 c
293.4482 363.501 293.7021 364.2412 293.7021 365.2285 c
293.7021 366.5752 293.2295 368.3809 292.3057 370.4355 c
291.335 372.5928 290.9482 377.1768 290.7959 379.9287 C
292.4365 378.2295 294.3994 377.2324 294.5088 377.1777 C
295.5342 376.665 L
295.5342 377.8115 L
295.5342 378.6592 295.6982 379.5742 295.9209 380.457 C
295.8428 377.6865 295.7881 374.7061 295.7842 374.4912 C
295.7607 373.2217 L
296.8545 373.8691 L
299.5674 375.4766 301.0479 378.8203 301.8486 381.4746 C
301.8857 380.7939 301.9092 380.1133 301.9092 379.4736 c
301.9092 377.5859 301.7881 376.0654 301.7861 376.0361 C
301.6318 374.1143 L
302.9932 375.4775 L
308.0127 380.4971 309.1709 389.167 309.4404 393.3711 C
311.2861 389.3857 311.4502 383.8623 311.4521 383.7969 C
312.8545 383.668 L
314.0342 389.376 314.5869 394.2803 314.5869 398.5352 c
314.5869 413.0342 308.1592 420.0039 298.1729 425.5967 c
286.9727 431.8682 276.8345 431.9404 270.1265 431.9883 C
267.6772 432.0195 L
266.3018 432.0537 L
260.4805 432.1934 254.9819 432.3252 250.772 434.1294 c
246.3926 436.0059 241.6831 441.3945 241.0322 449.2041 c
240.7954 452.0493 240.7085 456.2598 240.7085 460.5864 c
240.7085 468.499 240.9985 476.8003 241.1899 477.8511 c
241.4976 479.542 242.585 482.4111 243.96 485.1611 c
245.0596 487.3599 245.1982 489.9077 245.2046 490.9814 C
256.3291 494.8877 273.9751 504.0898 274.1548 504.1836 C
273.7954 504.8701 273.6279 505.1904 V
273.9048 505.2412 274.103 505.2778 274.1187 505.2808 C
273.8667 506.6753 L
273.6938 506.644 256.769 503.5645 247.3975 500.6255 C
f0 D
247.376 499.1367 m
255.0195 501.5938 268.3169 504.1895 272.6685 505.0107 C
269.0015 503.123 253.9077 495.459 244.2627 492.1484 C
243.7593 491.9756 L
243.7847 491.4434 L
243.7852 491.4375 243.79 491.3237 243.79 491.127 c
243.79 490.2642 243.6948 487.7998 242.6924 485.7949 c
241.2622 482.9351 240.125 479.9165 239.7954 478.105 c
239.5654 476.8398 239.2876 468.6646 239.2876 460.8291 c
239.2876 456.3535 239.3779 451.9893 239.6201 449.0859 c
240.3193 440.6899 245.4448 434.8701 250.2134 432.8267 c
254.6748 430.915 260.3062 430.7803 266.2676 430.6367 C
267.6411 430.6035 L
270.1162 430.5713 L
276.6797 430.5244 286.5981 430.4541 297.4795 424.3604 c
307.0146 419.0205 313.1533 412.3408 313.1533 398.4033 c
313.1533 395.5195 312.8721 392.3027 312.3213 388.7451 C
311.8545 391.2646 310.9912 394.2168 309.3818 396.251 C
308.0928 397.8799 L
308.1182 395.7803 308.1182 395.749 v
308.1182 394.8984 308.0029 384.3916 303.3057 378.0391 C
303.3193 378.4717 303.3271 378.9414 303.3271 379.4482 c
303.3271 381.4385 303.1963 383.8525 302.6689 385.5244 C
301.29 385.3984 L
301.2803 385.3271 300.4385 379.0205 297.2314 375.9805 C
297.2979 379.2979 297.4189 384.0107 297.5283 384.8906 C
296.1924 385.2959 L
296.1162 385.1455 294.5635 382.0029 294.1982 379.001 C
293.1572 379.666 291.5107 380.8896 290.6104 382.4922 C
289.23 384.9463 L
289.2837 382.1309 L
289.2915 381.7715 289.4712 373.2793 291.0127 369.8535 c
291.9736 367.7217 292.2822 366.124 292.2822 365.1709 c
292.2822 364.6367 292.1846 364.3057 292.0498 364.1982 c
291.2197 363.5332 288.9399 360.7236 288.1938 359.3105 C
288.1958 359.3467 288.1948 359.375 288.1987 359.4141 c
288.354 361.126 289.8052 364.8486 289.8198 364.8857 C
289.9292 365.167 L
289.8032 365.4414 L
289.7837 365.4844 287.8208 369.7627 286.8496 373.9707 c
285.8755 378.1914 285.5371 384.9453 285.5342 385.0127 C
285.5083 385.5381 L
284.998 385.666 L
283.543 386.0293 281.7827 386.582 281.481 386.8242 C
281.2603 387.0459 280.9253 387.125 280.6191 387.0195 c
279.2534 386.5469 278.4385 380.3086 278.2891 379.0625 c
278.2017 378.334 278.1636 377.665 278.1636 377.0527 c
278.1636 374.1729 278.9995 372.5303 279.4409 371.6611 C
279.5254 371.4941 L
279.7251 371.0957 279.8247 370.5801 279.8247 370.043 c
279.8247 369.4902 279.7188 368.915 279.5078 368.4238 c
279.1538 367.5986 277.2666 363.0693 276.7388 361.3135 C
276.5566 361.6523 276.3677 362.208 276.3677 362.9785 c
276.3677 365.1387 276.3677 371.6816 276.0322 375.54 c
275.7036 379.3154 275.2178 381.3584 273.0596 384.2363 C
269.4063 388.9336 L
269.2085 388.9863 L
269.1304 389.0117 261.3413 391.5273 252.6841 396.5898 c
244.4775 401.3896 234.6626 414.459 233.6987 425.54 c
233.4224 428.7197 233.3242 431.6914 233.3242 434.4482 c
233.3242 438.1909 233.5044 441.5381 233.6626 444.4717 c
233.7788 446.6353 233.8823 448.5557 233.8823 450.1758 c
233.8823 450.52 233.8774 450.8511 233.8677 451.168 C
233.7935 453.5981 L
233.6011 460.0557 233.2788 470.8638 232.6899 474.1045 c
232.0757 477.4834 230.5356 487.623 230.3677 492.6685 c
230.3643 492.7637 230.3628 492.8584 230.3628 492.9521 c
230.3628 497.5962 234.1821 501.2837 239.5566 501.7725 c
244.5352 502.2246 246.4956 499.5229 246.5767 499.4077 C
246.877 498.981 L
247.376 499.1367 L
f*U
240.6411 493.0933 m
235.2222 489.9971 230.498 492.1885 230.2998 492.2837 C
229.6841 491.0073 L
229.9087 490.8984 235.2563 488.3848 241.3442 491.8628 c
247.4316 495.3408 247.8506 499.5742 247.8652 499.7529 C
246.4536 499.8755 L
246.439 499.7256 246.0322 496.1733 240.6411 493.0933 c
f244.1099 495.8198 m
244.5425 494.4702 L
244.7559 494.5386 265.9912 501.3486 273.5967 504.4902 C
273.0557 505.7998 L
265.5034 502.6807 244.3232 495.8882 244.1099 495.8198 C
f241.8364 484.7637 m
241.8018 484.7046 238.3516 478.8169 235.7856 476.5718 c
235.5503 476.3652 235.5264 476.0073 235.7324 475.7715 c
235.939 475.5361 236.2969 475.5122 236.5327 475.7183 c
239.2378 478.0854 242.6709 483.9443 242.8159 484.1924 c
242.9736 484.4629 242.8828 484.8105 242.6118 484.9678 c
242.3413 485.1255 241.9946 485.0342 241.8364 484.7637 c
f240.0723 477.1919 m
239.9414 477.0474 236.8555 473.6284 235.5098 471.4424 c
235.3457 471.1753 235.4292 470.8262 235.6958 470.6621 c
235.9624 470.498 236.3115 470.5815 236.4756 470.8477 c
237.7661 472.9453 240.8818 476.3965 240.9131 476.4312 c
241.123 476.6631 241.105 477.022 240.873 477.2319 c
240.6411 477.4419 240.2822 477.4243 240.0723 477.1919 c
f239.1875 471.7925 m
238.5596 470.8506 236.6816 468.269 235.5508 467.6406 c
235.2773 467.4883 235.1787 467.1436 235.3306 466.8696 c
235.4829 466.5962 235.8276 466.4976 236.1016 466.6494 c
237.6763 467.5244 239.8843 470.7935 240.1309 471.1636 c
240.3047 471.4238 240.2339 471.7759 239.9736 471.9497 c
239.7134 472.1235 239.3618 472.0532 239.1875 471.7925 c
f239.6338 467.417 m
238.7437 466.6885 235.8125 464.2295 235.4551 463.1572 c
235.356 462.8604 235.5161 462.5391 235.8135 462.4404 c
236.1104 462.3413 236.4316 462.5015 236.5303 462.7988 c
236.7041 463.3198 238.6494 465.146 240.3516 466.5391 c
240.5942 466.7373 240.6299 467.0947 240.4316 467.3369 c
240.2329 467.5791 239.876 467.6152 239.6338 467.417 c
f239.6025 462.7231 m
239.271 462.4092 236.3433 459.6138 235.6519 458.2314 c
235.5122 457.9517 235.625 457.6108 235.9058 457.4707 c
236.1855 457.3311 236.5264 457.4438 236.666 457.7246 c
237.1763 458.7441 239.522 461.0845 240.3828 461.8999 c
240.6099 462.1152 240.6196 462.4741 240.4043 462.7012 c
240.189 462.9287 239.8301 462.9385 239.6025 462.7231 c
f239.1299 457.4136 m
238.8135 457.1499 236.019 454.7979 235.3193 453.3984 c
235.1792 453.1187 235.293 452.7773 235.5728 452.6382 c
235.8525 452.498 236.1938 452.6118 236.333 452.8916 c
236.8364 453.8975 239.0464 455.8682 239.8555 456.5425 c
240.0962 456.7432 240.1284 457.1006 239.9282 457.3408 c
239.7275 457.5815 239.3701 457.6138 239.1299 457.4136 c
f239.5308 453.7954 m
239.2065 453.5972 236.3481 451.8179 235.7954 450.3442 c
235.6855 450.0508 235.834 449.7241 236.127 449.6143 c
236.4204 449.5044 236.7471 449.6528 236.8569 449.9458 c
237.1709 450.7827 239.0259 452.1577 240.1221 452.8276 c
240.3892 452.9912 240.4731 453.3398 240.3101 453.6074 c
240.1465 453.874 239.7979 453.9585 239.5308 453.7954 c
f239.8994 449.5181 m
239.8018 449.4067 237.502 446.7686 236.8081 445.2085 c
236.6812 444.9224 236.8091 444.5884 237.0957 444.46 c
237.3818 444.333 237.7158 444.4609 237.8442 444.7476 c
238.4683 446.1519 240.73 448.7456 240.7529 448.772 c
240.959 449.0073 240.9351 449.3657 240.6992 449.5718 c
240.4639 449.7778 240.1055 449.7539 239.8994 449.5181 c
f240.2739 444.9404 m
240.2627 444.8906 239.1099 439.9604 238.6284 438.6772 c
238.5186 438.3838 238.667 438.0571 238.96 437.9473 c
239.2534 437.8374 239.5801 437.9858 239.6899 438.2788 c
240.1973 439.6309 241.3301 444.4771 241.3784 444.6826 c
241.4492 444.9878 241.2598 445.2925 240.9551 445.3638 c
240.6499 445.4346 240.3452 445.2451 240.2739 444.9404 c
f242.5254 440.4663 m
242.2075 440.0034 240.6118 437.6411 240.4336 436.5713 c
240.3818 436.2622 240.5908 435.9702 240.8994 435.9189 c
241.2085 435.8672 241.5005 436.0762 241.5518 436.3848 c
241.6582 437.0225 242.7783 438.8325 243.46 439.8237 c
243.6372 440.082 243.5718 440.4351 243.314 440.6123 c
243.0557 440.7896 242.7031 440.7241 242.5254 440.4663 c
f244.4414 438.5425 m
244.147 438.5156 243.9258 438.2686 243.9258 437.9785 c
243.9258 437.9614 243.9263 437.9443 243.9282 437.9268 c
244.001 437.124 244.0352 436.3198 244.0352 435.5796 c
244.0352 433.8687 243.8525 432.5029 243.5444 432.3037 C
243.4849 432.2793 243.4736 432.2744 V
243.3589 432.3237 243.2007 432.6494 243.0708 433.0713 C
243 433.4375 242.9258 433.7598 242.8745 433.9556 C
241.7637 433.7412 L
241.7822 433.5918 241.8345 433.3203 241.9072 433.02 C
242.0347 432.3799 242.1284 431.7227 242.1284 431.1924 c
242.1284 430.8262 242.0776 430.5605 241.9951 430.377 C
241.8882 430.5195 241.769 430.7363 241.6426 431.0303 C
241.4727 431.6953 241.2349 432.2529 241.1724 432.3857 C
240.1108 432 L
240.2056 431.6406 240.3569 431.1895 240.5361 430.748 C
240.6152 430.4316 240.6851 430.1094 240.6851 429.8408 c
240.6851 429.5107 240.6074 429.2529 240.4058 429.1514 c
240.334 429.1162 240.2852 429.1143 240.2134 429.1455 c
239.7095 429.3623 239.1133 430.6641 238.8691 431.4746 C
237.7764 431.1738 L
238.0825 429.9473 238.2617 428.6836 238.2617 427.9229 c
238.2617 427.7949 238.2319 427.7607 238.2212 427.6641 C
237.7202 428.373 236.9312 430.1738 236.3623 431.8291 C
235.2598 431.6172 L
235.3135 430.5195 235.3428 429.376 235.3555 428.3135 C
235.3076 428.7217 235.2607 429.1348 235.2236 429.5313 C
234.0928 429.5 L
234.0664 428.8193 234.0234 428.1113 233.9756 427.4375 C
233.8281 428.2705 233.6787 429.1846 233.5537 430.0586 c
233.5098 430.3682 233.2227 430.584 232.9126 430.54 c
232.6025 430.4951 232.3872 430.208 232.4316 429.8984 c
233.2407 424.2305 233.584 424.1523 233.9819 424.0625 C
234.3623 423.9756 L
234.6309 424.3301 L
234.6904 424.4189 234.7378 424.6357 234.7876 424.8311 C
235.0024 424.1191 235.1929 424.0283 235.3354 423.96 C
235.626 423.8213 L
235.9736 424.0068 L
236.1763 424.1416 236.5117 424.3652 236.5117 427.5664 c
236.5117 427.8135 236.5024 428.1396 236.4985 428.4238 C
237.0063 427.3525 237.5674 426.4521 238.0825 426.2646 c
238.3232 426.1768 238.5723 426.1982 238.7842 426.3252 c
239.23 426.5928 239.394 427.2529 239.394 428.083 c
239.394 428.1885 239.3667 428.3164 239.3618 428.4268 C
239.4951 428.3164 239.6138 428.1689 239.7632 428.1045 c
240.1436 427.9404 240.541 427.9512 240.9126 428.1377 c
241.3789 428.3711 241.5801 428.7705 241.6934 429.21 C
241.731 429.1943 241.7607 429.1475 241.8003 429.1367 c
241.9922 429.085 242.3682 429.0508 242.7271 429.4111 c
243.1182 429.8018 243.2476 430.4736 243.2578 431.1875 C
243.5356 431.1328 243.8257 431.1582 244.1074 431.3193 c
245.4458 432.084 245.2173 436.2666 245.0571 438.0293 c
245.0288 438.3413 244.7534 438.5708 244.4414 438.5425 c
f244.9907 437.353 m
244.6919 437.2598 244.5249 436.9419 244.6177 436.6431 C
246.9512 429.1436 L
247.0444 428.8438 247.3623 428.6768 247.6611 428.7705 c
247.96 428.8633 248.127 429.1807 248.0342 429.4795 C
245.7007 436.98 L
245.6074 437.2788 245.2896 437.4458 244.9907 437.353 c
f248.9526 430.1729 m
248.7852 430.1064 244.8364 428.5078 243.4448 423.291 c
242.1968 418.6113 242.959 409.2061 253.7324 403.6406 c
260.3403 400.2275 264.9487 398.6855 267.9985 397.665 c
269.5923 397.1318 270.7437 396.7461 271.5596 396.3115 c
273.8955 395.0654 275.335 393.0127 275.6328 392.2676 c
275.749 391.9775 276.0791 391.8359 276.3696 391.9521 c
276.6606 392.0684 276.8018 392.3984 276.6855 392.6895 c
276.2583 393.7568 274.6338 395.957 272.0928 397.3115 c
271.1934 397.791 270.0039 398.1895 268.3579 398.7402 c
265.3418 399.749 260.7832 401.2744 254.2529 404.6484 c
244.1191 409.8838 243.3799 418.6465 244.5405 422.998 c
245.7783 427.6396 249.2212 429.0596 249.3672 429.1172 c
249.6577 429.2324 249.8003 429.5615 249.6855 429.8525 c
249.5708 430.1426 249.2437 430.2861 248.9526 430.1729 c
f249.3174 417.9307 m
249.0674 417.7422 249.0181 417.3867 249.207 417.1367 c
249.7534 416.4141 254.6406 410.0771 257.9927 410.0771 c
260.022 410.0771 260.666 410.2051 260.9873 410.6699 c
261.2681 411.0762 261.1064 411.5049 260.9634 411.8838 C
260.8638 412.1582 L
259.3457 415.8721 L
259.4639 415.582 259.3306 415.2383 259.041 415.1201 c
258.751 415.001 258.4253 415.1279 258.3066 415.417 C
259.7886 411.7988 L
259.9023 411.4834 L
259.9297 411.4014 259.9565 411.3193 V
259.7227 411.2666 259.1934 411.2119 257.9927 411.2119 c
255.6284 411.2119 251.502 415.9824 250.1113 417.8203 c
249.9224 418.0703 249.5669 418.1191 249.3174 417.9307 c
f253.4204 422.4922 m
253.1367 422.3604 253.0132 422.0244 253.1445 421.7402 c
253.188 421.6465 257.5967 412.3779 267.2295 413.582 C
267.5078 413.6172 L
267.6489 413.8584 L
267.7036 413.9521 268.9644 416.1953 266.8057 419.6143 c
266.6382 419.8789 266.2881 419.958 266.0234 419.791 c
265.8525 419.6826 265.7593 419.499 265.7593 419.3105 c
265.7593 419.207 265.7876 419.1025 265.8467 419.0088 c
266.7095 417.6426 266.9351 416.5352 266.9351 415.751 c
266.9351 415.2207 266.8462 414.9014 266.7671 414.6865 C
258.1968 413.8301 254.335 421.8691 254.1733 422.2168 c
254.0415 422.501 253.7046 422.624 253.4204 422.4922 c
f255.8765 425.6563 m
255.686 425.4082 255.7324 425.0527 255.981 424.8613 c
256.2788 424.6328 263.3257 419.2598 267.9302 418.748 c
272.4888 418.2412 274.8823 418.9053 274.9819 418.9336 c
275.2827 419.0195 275.4561 419.332 275.3711 419.6328 c
275.2856 419.9336 274.9727 420.1084 274.6719 420.0244 c
274.6489 420.0176 272.3643 419.3965 268.0552 419.875 c
263.7651 420.3516 256.7417 425.707 256.6714 425.7617 c
256.4229 425.9521 256.0664 425.9053 255.8765 425.6563 c
f281.0283 421.9697 m
280.8486 421.7129 280.9111 421.3594 281.1675 421.1797 c
281.4458 420.9854 288.0845 416.4131 297.4834 416.2451 c
297.7959 416.2393 298.0537 416.4883 298.0596 416.8018 c
298.0654 417.1143 297.8154 417.373 297.5029 417.3779 c
288.4644 417.54 281.8828 422.0635 281.8174 422.1094 c
281.561 422.2881 281.2075 422.2256 281.0283 421.9697 c
f275.7471 417.5332 m
275.5327 417.3057 275.5425 416.9482 275.769 416.7334 c
276.0356 416.4805 282.439 410.5664 294.7295 412.082 c
295.04 412.1201 295.2607 412.4033 295.2217 412.7139 c
295.1846 413.0244 294.9014 413.2451 294.5908 413.207 c
282.8604 411.7607 276.6104 417.499 276.5483 417.5566 c
276.3208 417.7715 275.9619 417.7607 275.7471 417.5332 c
f271.7578 413.2119 m
271.5371 412.9902 271.5371 412.6318 271.7583 412.4111 c
271.9976 412.1719 277.7324 406.5654 287.8823 407.5801 c
288.1938 407.6113 288.4214 407.8896 288.3901 408.2012 c
288.3589 408.5127 288.0815 408.7402 287.7695 408.709 c
278.1768 407.749 272.6147 413.1582 272.5596 413.2129 c
272.3374 413.4336 271.9785 413.4326 271.7578 413.2119 c
f265.0435 410.9902 m
264.8525 410.7412 264.8989 410.3857 265.147 410.1953 c
265.5127 409.9141 274.1943 403.3564 282.4209 407.6416 c
282.6987 407.7861 282.8066 408.1289 282.6621 408.4063 c
282.5176 408.6846 282.1748 408.792 281.8975 408.6475 c
274.3179 404.7002 265.9219 411.0293 265.8379 411.0938 c
265.5898 411.2842 265.2339 411.2373 265.0435 410.9902 c
f274.8818 406.9971 m
274.6875 406.751 274.729 406.3945 274.9741 406.2002 c
275.0122 406.1699 278.7939 403.1436 279.0962 400.5781 c
279.1108 400.4541 279.1035 400.332 278.8589 400.2012 c
276.9478 399.1758 268.5249 401.2334 262.0259 406.7441 c
261.7871 406.9463 261.4292 406.917 261.2266 406.6777 c
261.0244 406.4395 261.0537 406.0811 261.2925 405.8789 c
268.0474 400.1523 276.9312 397.8799 279.395 399.2021 c
280.0044 399.5293 280.2983 400.0645 280.2222 400.7109 c
279.8652 403.7412 275.8491 406.9541 275.6782 407.0889 c
275.4326 407.2832 275.0762 407.2422 274.8818 406.9971 c
f283.7349 401.8545 m
283.6392 401.7461 283.5923 401.6123 283.5923 401.4785 c
283.5923 401.3223 283.6567 401.166 283.7837 401.0537 c
285.3574 399.6611 286.729 398.001 286.7397 397.4912 C
285.7339 397.0684 281.8281 397.4971 279.5859 397.8711 c
279.2769 397.9219 278.9849 397.7139 278.9336 397.4043 c
278.8818 397.0957 279.0908 396.8037 279.3994 396.752 c
280.0308 396.6475 285.6138 395.7461 287.2227 396.46 c
287.5781 396.6182 287.8047 396.9072 287.8613 397.2734 c
288.0679 398.6123 285.604 400.957 284.5347 401.9033 c
284.3003 402.1104 283.9424 402.0889 283.7349 401.8545 c
f286.2734 405.2266 m
286.0439 405.0137 286.0308 404.6553 286.2437 404.4258 c
288.4272 402.0732 289.8198 399.7637 289.562 399.3467 C
288.9849 398.6738 287.4155 399.2354 286.9116 399.4863 c
286.6313 399.625 286.2915 399.5098 286.1519 399.2314 c
286.0127 398.9512 286.126 398.6113 286.4058 398.4717 c
286.5171 398.416 289.1499 397.125 290.4229 398.6094 c
291.5791 399.958 288.8218 403.3154 287.0747 405.1973 c
286.8618 405.4268 286.5029 405.4404 286.2734 405.2266 c
f289.9438 405.8975 m
289.8208 405.7852 289.7583 405.6318 289.7583 405.4785 c
289.7583 405.3418 289.8081 405.2051 289.9067 405.0967 c
291.2881 403.582 292.4443 401.835 292.4443 401.2852 c
292.4443 401.2686 292.4404 401.2549 292.4385 401.2402 C
291.958 400.8779 290.6826 401.3496 289.9565 401.7949 c
289.6899 401.958 289.3403 401.875 289.1772 401.6084 c
289.0132 401.3408 289.0962 400.9922 289.3628 400.8291 c
289.6196 400.6709 291.9131 399.3125 293.1885 400.376 C
293.5693 401.1533 L
293.667 402.582 291.2334 405.3252 290.7451 405.8604 c
290.5342 406.0918 290.1748 406.1084 289.9438 405.8975 c
f291.9072 409.5273 m
291.8076 409.418 291.7588 409.2813 291.7588 409.1445 c
291.7588 408.9912 291.8213 408.8379 291.9424 408.7266 c
294.2139 406.6494 296.126 404.2881 296.126 403.5889 c
296.126 403.5576 296.1201 403.5313 296.1123 403.5068 C
296.1045 403.502 296.0908 403.4951 Y
294.501 402.7725 292.8682 403.3389 292.8525 403.3447 c
292.5576 403.4502 292.2334 403.2969 292.1279 403.0029 c
292.0205 402.709 292.1729 402.3857 292.4658 402.2783 c
292.5498 402.248 294.5381 401.5439 296.5596 402.4619 c
296.9326 402.6309 297.1709 402.9395 297.2334 403.3301 c
297.5029 405.0293 293.8369 408.5303 292.708 409.5625 c
292.4775 409.7744 292.1182 409.7578 291.9072 409.5273 c
f297.9248 411.3799 m
297.7041 411.1582 297.7041 410.7998 297.9248 410.5781 c
298.6611 409.8398 300.5459 407.6143 300.4268 406.1914 c
300.4014 405.8799 300.6338 405.6055 300.9463 405.5791 c
301.2568 405.5537 301.5322 405.7852 301.5576 406.0977 c
301.7412 408.2959 299.0361 411.0703 298.7275 411.3799 c
298.5049 411.6006 298.1455 411.6006 297.9248 411.3799 c
f299.9385 414.7256 m
299.71 414.5127 299.6982 414.1543 299.9111 413.9248 c
300.5225 413.2686 302.1377 411.2402 302.2607 409.7646 c
302.2861 409.4521 302.5615 409.2207 302.8721 409.2461 c
303.1846 409.2725 303.417 409.5469 303.3916 409.8584 c
303.21 412.0293 300.8408 414.5908 300.7393 414.6982 c
300.5264 414.9268 300.1689 414.9395 299.9385 414.7256 c
f267.9893 390.6084 m
267.7563 390.3994 267.7368 390.041 267.9458 389.8076 c
268.5249 389.1621 271.5151 385.96 273.4863 386.3818 c
274.1655 386.5273 274.438 386.9258 274.5469 387.2344 c
274.9409 388.3496 273.6885 389.9785 273.4331 390.293 c
273.2363 390.5361 272.8799 390.5742 272.6362 390.377 c
272.3931 390.1807 272.355 389.8242 272.5518 389.5801 c
273.0854 388.9189 273.5967 387.9482 273.478 387.6123 c
273.4551 387.5479 273.3408 387.5107 273.249 387.4912 c
272.2651 387.2803 270.0493 389.1621 268.7896 390.5654 c
268.5806 390.7979 268.2222 390.8174 267.9893 390.6084 c
f273.7319 388.4326 m
273.5962 388.1504 273.7144 387.8115 273.9961 387.6758 c
274.3921 387.4854 277.9146 385.834 279.73 386.6719 c
280.0146 386.8027 280.1387 387.1396 280.0073 387.4238 c
279.8765 387.708 279.5396 387.832 279.2549 387.7012 c
278.2505 387.2373 275.7983 388.0664 274.4888 388.6973 c
274.207 388.833 273.8682 388.7148 273.7319 388.4326 c
f277.0542 390.4707 m
276.7593 390.3662 276.6045 390.0439 276.7075 389.749 c
276.7471 389.6357 277.7095 386.9668 280.4546 386.1436 c
280.7549 386.0537 281.0708 386.2236 281.1606 386.5234 c
281.2505 386.8232 281.0806 387.1396 280.7808 387.2295 c
278.5991 387.8838 277.7852 390.1025 277.7773 390.125 c
277.6724 390.4199 277.3486 390.5742 277.0542 390.4707 c
f281.1763 390.124 m
280.8652 390.0879 280.6431 389.8057 280.6797 389.4951 c
280.6904 389.4033 280.9541 387.2344 281.8779 385.6514 c
282.0356 385.3809 282.3828 385.2891 282.6533 385.4473 c
282.9238 385.6045 283.0151 385.9521 282.8574 386.2217 c
282.0542 387.5986 281.8081 389.6084 281.8057 389.6279 c
281.7686 389.9385 281.4868 390.1611 281.1763 390.124 c
f284.2427 389.0029 m
283.9297 389.0029 283.6758 388.75 283.6758 388.4365 c
283.6758 388.1943 283.6875 386.043 284.0967 385.0879 c
284.2197 384.8008 284.5532 384.667 284.8408 384.79 c
285.1289 384.9141 285.2622 385.2471 285.1387 385.5352 c
284.8994 386.0938 284.8101 387.6113 284.8096 388.4365 c
284.8096 388.75 284.5557 389.0039 284.2427 389.0029 c
f285.3926 384.9551 m
285.3794 384.6426 285.105 384.3994 284.7925 384.4131 C
288.8677 384.2441 L
289.1802 384.2314 289.4214 384.4756 289.4341 384.7881 c
289.4468 385.1006 289.1802 385.3652 288.8677 385.3789 C
284.8599 385.5439 L
285.1729 385.5313 285.4053 385.2676 285.3926 384.9551 c
f289.9927 381.6445 m
288.6587 385.6455 287.7427 388.9785 v
286.8262 392.3115 286.9927 393.0615 y
289.1597 391.8115 l
289.4097 393.0605 289.4927 393.8945 v
289.5757 394.7285 289.6597 395.0615 y
290.3252 394.3945 290.8252 394.1445 v
291.3252 393.8945 291.7432 393.1445 y
291.9092 394.9785 291.8252 396.2285 v
291.7432 397.4785 291.7432 398.6445 y
293.3271 397.6445 293.9092 397.3945 v
293.9092 400.3945 l
296.0752 398.9785 296.8252 398.4785 v
297.5752 397.9785 297.6592 398.1455 297.7432 398.9785 c
297.8252 399.8115 297.1592 402.5615 y
297.5752 402.8125 298.0752 402.7285 v
298.5752 402.6445 299.2432 402.8115 y
299.1592 405.4785 l
299.3252 405.4785 300.0752 405.0615 v
300.8252 404.6445 301.8252 404.7285 y
302.0752 405.8945 302.0752 406.5615 v
302.0752 407.2285 302.1592 407.8115 y
302.7432 407.1455 303.4932 406.7285 v
304.2432 406.3115 304.9092 406.5615 y
304.8252 408.6445 304.7432 409.8945 v
304.6592 411.1445 304.4932 412.8945 y
306.6592 413.5615 l
306.8271 416.8945 303.6592 420.5615 v
304.5752 420.3955 306.0752 418.9785 v
307.5752 417.5615 310.7412 415.5605 313.0752 405.3945 c
315.4092 395.2285 312.5752 386.9785 y
311.9092 387.9785 l
311.0752 392.8125 308.9932 395.2285 v
308.6592 390.3115 306.9092 384.0615 v
305.1592 377.8115 302.8252 376.6445 y
302.4092 382.8115 l
301.7412 383.3105 301.5752 382.3945 v
301.4092 381.4785 299.9092 377.8105 297.0752 375.1445 c
296.0752 380.6445 296.2432 381.8945 v
296.4092 383.1445 295.6592 381.8945 295.3252 381.1445 c
294.9932 380.3945 294.3252 378.1445 y
290.9932 380.3105 289.9927 381.6445 v
f279.3354 385.0742 m
279.3081 385.0625 276.6226 383.8184 274.4893 384.123 c
274.1792 384.167 273.8921 383.9512 273.8481 383.6416 c
273.8037 383.332 274.019 383.0449 274.3291 383 c
276.8018 382.6475 279.6953 383.9912 279.8174 384.0488 c
280.1006 384.1816 280.2222 384.5195 280.0894 384.8027 c
279.9561 385.0859 279.6187 385.208 279.3354 385.0742 c
f278.9731 382.5361 m
278.9517 382.5322 276.791 382.1396 275.1563 382.373 c
274.8462 382.417 274.5591 382.2021 274.5151 381.8916 c
274.4707 381.582 274.686 381.2949 274.9961 381.25 c
276.8169 380.9902 279.084 381.4033 279.1797 381.4209 c
279.4873 381.4785 279.6904 381.7734 279.6333 382.082 c
279.5767 382.3896 279.2808 382.5928 278.9731 382.5361 c
f278.7505 380.6885 m
277.9863 380.4668 276.7017 380.2158 276.2393 380.3545 c
275.939 380.4443 275.623 380.2744 275.5332 379.9746 c
275.4434 379.6748 275.6133 379.3584 275.9131 379.2686 c
276.8594 378.9844 278.707 379.4951 279.0679 379.6006 c
279.3687 379.6875 279.541 380.0029 279.4536 380.3027 c
279.3657 380.6035 279.0513 380.7764 278.7505 380.6885 c
f278.1372 378.6416 m
278.1226 378.6338 276.6694 377.8555 275.5146 378.2627 c
275.2197 378.3672 274.896 378.2119 274.7915 377.917 c
274.6875 377.6221 274.8423 377.2979 275.1377 377.1943 c
276.7749 376.6162 278.605 377.6055 278.6821 377.6475 c
278.9561 377.7979 279.0562 378.1416 278.9058 378.416 c
278.7559 378.6904 278.4116 378.791 278.1372 378.6416 c
f278.7935 376.2832 m
278.2729 376.1748 276.7207 375.9473 275.8057 376.1924 c
275.5029 376.2734 275.1924 376.0938 275.1113 375.791 c
275.0308 375.4883 275.2104 375.1777 275.5127 375.0967 c
276.8774 374.7324 278.939 375.1553 279.0249 375.1738 c
279.3315 375.2373 279.5278 375.5381 279.4639 375.8438 c
279.3999 376.1504 279.1001 376.3477 278.7935 376.2832 c
f275.2607 373.6035 m
275.2378 373.291 275.4722 373.0195 275.7847 372.9961 c
276.02 372.9785 278.1089 372.8291 278.8887 372.915 c
279.1997 372.9492 279.4243 373.2295 279.3896 373.541 c
279.355 373.8525 279.0752 374.0762 278.7637 374.042 c
278.1914 373.9785 276.4795 374.082 275.8677 374.127 c
275.5557 374.1504 275.2837 373.915 275.2607 373.6035 c
f275.4927 371.8789 m
275.1797 371.8789 274.9258 371.625 274.9258 371.3115 c
274.9258 370.998 275.1797 370.7441 275.4927 370.7441 C
279.5762 370.7441 L
279.8892 370.7441 280.1431 370.998 280.1431 371.3115 c
280.1431 371.625 279.8892 371.8789 279.5762 371.8789 C
275.4927 371.8789 L
f280.0215 370.1113 m
279.6543 370.0195 277.5278 370.0479 275.6841 370.1279 c
275.3711 370.1416 275.1064 369.8994 275.0928 369.5859 c
275.0791 369.2734 275.3218 369.0088 275.6343 368.9951 c
276.2886 368.9668 279.5859 368.834 280.2969 369.0117 c
280.6006 369.0879 280.7852 369.3955 280.709 369.6992 c
280.6333 370.0029 280.3252 370.1875 280.0215 370.1113 c
f275.6895 367.7695 m
275.6206 367.4639 275.8125 367.1602 276.1177 367.0918 c
276.7603 366.9463 278.9204 366.4951 279.7554 366.7734 c
280.0522 366.873 280.2129 367.1934 280.1138 367.4912 c
280.0151 367.7881 279.6938 367.9482 279.397 367.8496 c
279.0269 367.7256 277.5361 367.9336 276.3672 368.1973 c
276.062 368.2666 275.7583 368.0742 275.6895 367.7695 c
f275.3745 365.749 m
275.271 365.4541 275.4258 365.1309 275.7207 365.0273 c
275.7842 365.0049 277.2959 364.4805 278.8413 364.7529 c
279.1494 364.8076 279.3555 365.1016 279.3008 365.4102 c
279.2466 365.7188 278.9526 365.9238 278.644 365.8701 c
277.3984 365.6504 276.1099 366.0918 276.0967 366.0967 c
275.8018 366.1992 275.478 366.0439 275.3745 365.749 c
f289.8257 383.8789 m
285.2192 383.7109 L
285.5322 383.7227 285.7979 383.4775 285.8091 383.165 c
285.8208 382.8525 285.5786 382.5898 285.2656 382.5781 C
289.8257 382.7441 L
290.1382 382.7559 290.4033 383.0195 290.3916 383.332 c
290.3799 383.6455 290.1382 383.8896 289.8257 383.8789 C
f284.8428 381.5273 m
284.8154 381.2158 285.0913 380.9395 285.4028 380.9121 C
286.0562 380.8525 L
288.2495 380.6426 289.5249 380.5537 289.981 380.6836 c
290.2764 380.7676 290.4404 381.0684 290.3623 381.3662 c
290.2861 381.6641 289.9751 381.8438 289.6753 381.7754 c
289.2769 381.6836 286.9341 381.9082 286.1641 381.9814 C
285.4092 382.0459 L
285.0977 382.0713 284.8696 381.8389 284.8428 381.5273 c
f289.9048 379.9346 m
289.5737 379.8467 287.4019 379.7949 285.4927 379.7959 c
285.1797 379.7959 284.9258 379.542 284.9258 379.2285 c
284.9258 378.915 285.1792 378.6621 285.4927 378.6611 c
286.748 378.6611 289.7251 378.6797 290.2549 378.8564 c
290.5459 378.9541 290.6943 379.2598 290.6064 379.5537 c
290.5186 379.8467 290.2002 380.0137 289.9048 379.9346 c
f285.4927 377.7959 m
285.1797 377.7959 284.9258 377.542 284.9258 377.2285 c
284.9258 376.915 285.1797 376.6611 285.4927 376.6611 C
290.0757 376.6611 L
290.3896 376.6611 290.6436 376.915 290.6436 377.2285 c
290.6436 377.542 290.3896 377.7959 290.0757 377.7959 C
285.4927 377.7959 L
f290.1631 375.5215 m
289.6558 375.3691 287.3442 375.4434 285.8647 375.5439 c
285.5522 375.5654 285.2817 375.3291 285.2607 375.0166 c
285.2393 374.7051 285.4751 374.4346 285.7876 374.4131 c
286.417 374.3701 289.6011 374.1689 290.4893 374.4355 c
290.7881 374.5254 290.958 374.8418 290.8682 375.1416 c
290.7783 375.4414 290.4619 375.6113 290.1631 375.5215 c
f290.4814 373.7041 m
290.1689 373.6514 288.1069 373.6279 286.7427 373.6279 c
286.4297 373.6289 286.1758 373.375 286.1758 373.0615 c
286.1758 372.749 286.4292 372.4951 286.7427 372.4941 c
287.3071 372.4941 290.1494 372.498 290.6689 372.585 c
290.9775 372.6377 291.1865 372.9297 291.1357 373.2383 c
291.083 373.5469 290.79 373.7559 290.4814 373.7041 c
f286.8262 371.6289 m
286.5132 371.6289 286.2593 371.375 286.2593 371.0615 c
286.2593 370.748 286.5132 370.4941 286.8262 370.4941 C
291.1592 370.4941 L
291.4736 370.4941 291.7275 370.748 291.7275 371.0615 c
291.7275 371.375 291.4736 371.6289 291.1592 371.6289 C
286.8262 371.6289 L
f288.4761 369.0488 m
288.4692 368.7363 288.2056 368.4883 287.8931 368.4951 C
291.7432 368.4111 L
292.0557 368.4053 292.3018 368.6533 292.3096 368.9658 c
292.3154 369.2793 292.0557 369.5391 291.7432 369.5459 C
287.9253 369.6279 L
288.2388 369.6211 288.4829 369.3623 288.4761 369.0488 c
f292.4736 367.4521 m
291.7686 367.3242 289.312 367.3555 288.4243 367.3779 c
288.1118 367.3867 287.8511 367.1396 287.8428 366.8262 c
287.835 366.5127 288.0825 366.2529 288.395 366.2451 c
288.7339 366.2363 291.7295 366.1641 292.6768 366.3369 c
292.9854 366.3926 293.1904 366.6885 293.1338 366.9961 c
293.0771 367.3037 292.7822 367.5088 292.4736 367.4521 c
f288.6772 364.6807 m
288.6567 364.3682 288.894 364.0986 289.2065 364.0791 c
290.4424 363.999 292.0107 363.9404 292.4541 364.1182 c
292.7314 364.2295 292.8545 364.5322 292.7588 364.8174 c
292.6631 365.1025 292.3408 365.2559 292.0518 365.1777 c
291.7822 365.1045 290.4033 365.1377 289.2788 365.21 c
288.9663 365.2305 288.6968 364.9932 288.6772 364.6807 c
f286.7427 359.5615 m
285.7427 352.8115 285.4927 347.0615 v
285.2427 341.3115 284.9927 332.0615 y
284.2427 330.9365 282.6177 330.6865 v
280.9927 330.4365 278.8677 329.6865 277.3677 328.9365 c
275.8677 328.1865 274.4927 327.1865 y
273.9927 326.1865 274.9927 326.4365 v
275.9927 326.6865 277.1177 327.6865 278.9927 328.1865 c
280.8677 328.6865 281.8677 328.6865 y
282.1177 328.1865 281.6177 327.8115 v
281.1177 327.4365 277.6177 324.6865 277.2427 324.1865 c
276.8677 323.6865 276.7427 323.0615 277.6177 323.4365 c
278.4927 323.8115 280.8677 325.4365 281.6177 326.0615 c
282.3677 326.6865 283.3677 327.5615 283.3677 326.9365 c
283.3677 326.3115 283.3677 323.6865 283.9927 323.8115 c
284.6177 323.9365 285.2427 325.0615 285.3677 326.4365 c
285.4927 327.8115 286.7427 330.3115 y
287.7427 329.8115 288.4927 329.4365 v
289.2427 329.0615 290.6182 328.9365 290.8682 329.3115 c
291.1182 329.6865 291.9932 329.8115 290.8682 330.0615 c
289.7427 330.3115 286.8677 332.4365 y
286.9927 344.3115 287.6177 349.4365 v
288.2427 354.5615 288.4927 357.5615 289.9927 359.6865 c
288.4927 358.9365 l
286.7427 359.5615 l
f274.8677 362.4365 m
273.7427 349.8115 272.8677 347.1865 v
272.4927 345.0615 271.4927 345.0615 v
270.4927 345.0615 268.9927 345.6865 267.7427 346.0615 c
266.4927 346.4365 265.2427 345.8115 265.9927 345.3115 c
266.7427 344.8115 269.3677 344.3115 269.9927 344.0615 c
270.6177 343.8115 270.8677 343.5615 270.4927 343.1865 c
270.1177 342.8115 269.2427 341.9365 268.3677 341.1865 c
267.4927 340.4365 265.9927 337.1865 265.6177 336.8115 c
265.2427 336.4365 267.3677 335.1865 267.7427 336.0615 c
268.1177 336.9365 268.8677 339.3115 269.6177 339.9365 c
270.3677 340.5615 272.6177 342.4365 272.9927 342.9365 c
273.3677 343.4365 272.6177 344.0615 273.3677 343.4365 c
274.1177 342.8115 276.4927 341.9365 277.2427 341.4365 c
277.9927 340.9365 279.2427 339.6865 279.8677 339.9365 c
280.4927 340.1865 281.7427 340.8115 280.7427 341.3115 c
279.7427 341.8115 279.1177 342.5615 278.6177 342.5615 c
278.1177 342.5615 274.9927 343.8115 274.6177 344.0615 c
274.2427 344.3115 274.4927 345.4365 274.7427 346.0615 c
274.9927 346.6865 276.9927 357.3115 277.9927 360.9365 c
276.4927 361.1865 l
274.8677 362.4365 l
f273.2427 342.5615 m
272.6177 341.8115 272.6177 341.4365 v
272.6177 341.0615 272.8677 337.3115 272.7427 336.3115 c
272.6177 335.3115 272.8677 334.6865 273.4927 334.5615 c
274.1177 334.4365 274.4927 334.9365 274.2427 336.6865 c
273.9927 338.4365 274.1177 340.6865 273.8677 341.6865 c
273.6177 342.6865 273.9927 342.8115 273.2427 342.5615 c
f237.4927 498.0615 m
235.8677 497.5615 235.8677 496.3115 v
235.8677 495.0615 236.8677 494.8115 237.6177 494.8115 c
238.3677 494.8115 239.6177 495.5615 239.6177 496.6865 c
239.6177 497.8115 238.1177 498.5615 237.4927 498.0615 c
f*u
1 D
254.5493 381.5283 m
253.248 380.8057 251.4849 379.1436 250.4741 375.3262 c
248.9072 369.4063 251.791 365.2432 251.9146 365.0684 C
252.0298 364.9063 L
252.2134 364.8271 L
252.6206 364.6523 253.1108 364.6777 253.6694 364.9014 c
255.377 365.584 257.9775 368.3105 259.644 372.1992 c
260.9951 375.3516 261.2681 378.2432 260.3931 380.1318 c
259.9575 381.0732 259.2573 381.7148 258.3677 381.9893 c
257.1279 382.3701 255.772 382.207 254.5493 381.5283 c
f0 D
251.4341 371.8506 m
251.4341 372.8076 251.5503 373.8525 251.8442 374.9629 c
252.7271 378.2988 254.1768 379.7002 255.2373 380.2891 c
256.1191 380.7783 257.083 380.9014 257.9507 380.6338 c
258.4521 380.4795 258.8413 380.1104 259.1074 379.5371 c
259.3579 378.9951 259.481 378.3203 259.481 377.5488 c
259.481 376.1807 259.0933 374.5117 258.3413 372.7578 c
256.4897 368.4375 253.7314 366.2695 252.9116 366.1484 C
252.5083 366.833 251.4341 368.9219 251.4341 371.8506 C
f*U
*u
1 D
295.2139 369.4629 m
294.5283 369.1699 293.876 368.3262 293.4658 367.207 c
293.1104 366.2363 292.4521 363.6406 294.0264 360.4941 c
296.0967 356.3545 300.9287 353.4873 301.1338 353.3672 C
301.2373 353.3066 L
301.3545 353.2832 L
301.8115 353.1924 302.292 353.3926 302.6709 353.832 c
303.1611 354.4023 304.5889 356.75 302.3271 363.0508 c
301.083 366.5166 299.5693 368.6572 297.8311 369.415 c
296.6533 369.9277 295.6865 369.665 295.2139 369.4629 c
f0 D
295.2939 361.1279 m
294.6377 362.4385 294.4385 363.624 294.4385 364.584 c
294.4385 365.5684 294.6475 366.3154 294.7959 366.7197 c
295.1221 367.6094 295.5576 368.0684 295.7725 368.1602 c
296.0908 368.2969 296.6104 368.4004 297.2646 368.1162 c
298.2041 367.7061 299.6143 366.4121 300.9932 362.5723 c
301.8701 360.127 302.1416 358.3467 302.1416 357.1016 c
302.1416 355.6641 301.79 354.9707 301.583 354.7578 C
300.5811 355.3955 296.917 357.8818 295.2939 361.1279 C
f*U
*u
1 D
341.0068 469.6455 m
339.3936 468.0908 338.7021 465.272 338.9521 461.2676 c
339.4678 453.0068 342.958 450.6475 343.1064 450.5508 C
343.2822 450.4365 L
343.4932 450.4365 L
345.249 450.4365 347.8857 455.1035 348.5303 460.8999 c
348.9189 464.4102 348.2764 467.4946 346.7646 469.3628 c
346.0557 470.2402 345.2139 470.7681 344.3955 470.8501 c
343.8135 470.9082 342.3174 470.9077 341.0068 469.6455 c
f0 D
340.3662 461.3555 m
340.335 461.8687 340.3193 462.3486 340.3193 462.7974 c
340.3193 466.2407 341.2002 467.8628 341.9912 468.625 c
342.876 469.4766 343.8682 469.4785 344.2549 469.4399 c
344.6807 469.3975 345.2061 469.0352 345.6631 468.4712 c
346.1768 467.8374 347.2275 466.1416 347.2275 462.9102 c
347.2275 462.3408 347.1963 461.7236 347.1221 461.0562 c
346.5322 455.7412 344.4326 452.5723 343.6162 451.9736 C
342.8799 452.6636 340.7549 455.1582 340.3662 461.3555 C
f*U
262.1592 318.8115 m
265.8262 350.1445 258.8262 371.6445 v
256.8262 366.6445 252.9927 365.8115 v
249.9927 366.6445 250.4927 373.6445 v
246.3262 370.3115 244.4927 367.8115 v
234.4927 397.4785 222.4927 409.4785 v
221.9927 408.9785 221.9927 407.9785 v
221.9927 406.9785 221.8262 327.1445 y
223.3354 318.6445 231.9141 318.6445 v
262.1592 318.8115 l
f227.0615 416.999 m
226.9028 416.877 223.1572 413.9785 221.3545 410.2441 c
221.1841 409.8926 221.333 409.4678 221.6846 409.2979 c
222.0371 409.1279 222.4614 409.2773 222.6309 409.6279 c
224.2842 413.0537 227.8877 415.8467 227.9243 415.874 c
228.2344 416.1123 228.293 416.5576 228.0547 416.8682 c
227.8164 417.1787 227.3721 417.2373 227.0615 416.999 c
f228.2891 415.0957 m
228.1401 414.8848 224.6274 409.9131 223.373 407.6553 c
223.1831 407.3135 223.3066 406.8828 223.6484 406.6924 c
223.9907 406.502 224.4214 406.625 224.6123 406.9678 c
225.8291 409.1582 229.4102 414.2266 229.4463 414.2773 c
229.6724 414.5967 229.5962 415.0391 229.2769 415.2646 c
228.9575 415.4912 228.5151 415.415 228.2891 415.0957 c
f229.9629 412.1572 m
229.439 411.5674 224.8286 406.334 224.3027 404.0986 c
224.2134 403.7178 224.4492 403.3359 224.8306 403.2471 c
225.2114 403.1572 225.5928 403.3936 225.6826 403.7744 c
226.0586 405.373 229.6646 409.6885 231.0225 411.2158 c
231.2822 411.5078 231.2559 411.9561 230.9634 412.2158 c
230.6709 412.4766 230.2231 412.4502 229.9629 412.1572 c
f232.0713 410.1377 m
231.877 409.9023 227.2881 404.3447 225.668 402.1016 c
225.439 401.7842 225.5103 401.3418 225.8276 401.1123 c
226.145 400.8828 226.5879 400.9541 226.8174 401.2715 c
228.4102 403.4775 233.1167 409.1777 233.1641 409.2354 c
233.4131 409.5371 233.3706 409.9834 233.0688 410.2324 c
232.7671 410.4824 232.3208 410.4395 232.0713 410.1377 c
f233.8232 406.8906 m
233.3081 406.2725 228.7739 400.8242 228.1416 399.8125 c
227.9341 399.4805 228.0356 399.043 228.3672 398.8359 c
228.6992 398.6279 229.1357 398.7295 229.3438 399.0605 c
229.8354 399.8477 233.5298 404.3242 234.9121 405.9824 c
235.1626 406.2832 235.1221 406.7305 234.8213 406.9805 c
234.5205 407.2314 234.0737 407.1904 233.8232 406.8906 c
f236.0718 403.8877 m
235.8516 403.6221 230.6772 397.3633 229.9258 396.3613 c
229.6909 396.0488 229.7544 395.6045 230.0674 395.3691 c
230.3804 395.1348 230.8247 395.1982 231.0596 395.5117 c
231.791 396.4863 237.1104 402.9199 237.1636 402.9854 c
237.4131 403.2861 237.3711 403.7334 237.0693 403.9824 c
236.7676 404.2324 236.3213 404.1895 236.0718 403.8877 c
f237.8232 401.2656 m
236.8657 400.1162 232.0703 394.2988 231.6772 392.5957 c
231.5894 392.2148 231.8271 391.834 232.2085 391.7461 c
232.5898 391.6582 232.9702 391.8955 233.0581 392.2773 c
233.3037 393.3408 236.7793 397.7979 238.9121 400.3574 c
239.1626 400.6582 239.1221 401.1055 238.8213 401.3555 c
238.5205 401.6064 238.0737 401.5654 237.8232 401.2656 c
f239.5552 398.3672 m
239.5103 398.3096 235.0684 392.5205 232.77 390.4648 c
232.4785 390.2041 232.4536 389.7559 232.7144 389.4639 c
232.9756 389.1719 233.4238 389.1475 233.7153 389.4082 c
236.1123 391.5527 240.4946 397.2637 240.6802 397.5059 c
240.9185 397.8164 240.8594 398.2617 240.5483 398.499 c
240.2378 398.7373 239.793 398.6777 239.5552 398.3672 c
f241.3481 396.043 m
241.0845 395.7588 234.8809 389.0537 233.7212 386.4775 c
233.561 386.1201 233.7202 385.7021 234.0767 385.54 c
234.4336 385.3799 234.8521 385.5391 235.0137 385.8955 c
236.0786 388.2617 242.3242 395.0117 242.3872 395.0801 c
242.6533 395.3662 242.6362 395.8154 242.3496 396.0811 c
242.0625 396.3477 241.6138 396.3301 241.3481 396.043 c
f242.5229 392.4463 m
242.4819 392.3838 238.4209 386.1289 235.7793 383.8477 c
235.4834 383.5918 235.4507 383.1445 235.7065 382.8486 c
235.9624 382.5518 236.4097 382.5195 236.7061 382.7754 c
239.5005 385.1885 243.542 391.4131 243.7124 391.6768 c
243.9253 392.0049 243.8315 392.4443 243.5024 392.6563 c
243.1743 392.8691 242.7358 392.7754 242.5229 392.4463 c
f244.8438 389.2881 m
244.0586 388.4258 237.1494 380.8252 236.3853 379.5508 c
236.1836 379.2158 236.2925 378.7803 236.6279 378.5791 c
236.9639 378.3779 237.3989 378.4863 237.6001 378.8223 c
238.124 379.6943 242.8457 384.9893 245.8916 388.334 c
246.1553 388.624 246.1343 389.0723 245.8447 389.3359 c
245.5552 389.5986 245.1069 389.5781 244.8438 389.2881 c
f246.291 385.8486 m
244.3833 383.1768 239.3223 376.1143 238.8232 375.5156 c
238.5728 375.2148 238.6133 374.7676 238.9141 374.5176 c
239.2148 374.2666 239.6616 374.3076 239.9121 374.6074 c
240.5469 375.3691 247.1631 384.6309 247.4443 385.0244 c
247.6719 385.3428 247.5981 385.7861 247.2798 386.0127 c
246.9609 386.2402 246.5186 386.167 246.291 385.8486 c
f247.5376 382.2188 m
247.272 381.8408 241.0146 372.9336 240.2603 371.6758 c
240.0586 371.3408 240.1675 370.9053 240.5029 370.7041 c
240.8389 370.5029 241.2739 370.6113 241.4751 370.9473 c
242.2036 372.1611 248.6328 381.3115 248.6973 381.4043 c
248.9224 381.7246 248.8452 382.166 248.5249 382.3916 c
248.2051 382.6162 247.7632 382.5391 247.5376 382.2188 c
f249.2075 378.9014 m
248.4482 378.0264 241.77 370.3174 241.0103 369.0508 c
240.8086 368.7158 240.9175 368.2803 241.2529 368.0791 c
241.5889 367.8779 242.0239 367.9863 242.2251 368.3223 c
242.7524 369.2002 247.3296 374.5742 250.2778 377.9717 c
250.5347 378.2676 250.5024 378.7148 250.207 378.9717 c
249.9116 379.2285 249.4639 379.1963 249.2075 378.9014 c
f263.2476 374.3184 m
263.0376 374.1133 258.0913 369.2861 257.3296 368.3975 c
257.0747 368.1006 257.1094 367.6533 257.4067 367.3984 c
257.7036 367.1436 258.1509 367.1787 258.4058 367.4756 c
258.9829 368.1484 262.4727 371.583 264.2378 373.3047 c
264.5176 373.5771 264.5229 374.0264 264.25 374.3066 c
263.9766 374.5869 263.5278 374.5918 263.2476 374.3184 c
f264.9858 370.8066 m
264.9336 370.7529 259.7407 365.4385 258.647 364.4658 c
258.3545 364.2061 258.3281 363.7588 258.5879 363.4658 c
258.8481 363.1729 259.2959 363.1465 259.5884 363.4072 c
260.7192 364.4121 265.7847 369.5957 265.9995 369.8164 c
266.2729 370.0967 266.2676 370.5449 265.9878 370.8184 c
265.708 371.0918 265.2588 371.0869 264.9858 370.8066 c
f265.707 366.9004 m
263.772 364.6641 259.8843 360.2324 259.022 359.4658 c
258.7295 359.2061 258.7031 358.7588 258.9629 358.4658 c
259.2231 358.1729 259.6709 358.1465 259.9634 358.4072 c
261.1099 359.4258 266.5474 365.7061 266.7783 365.9727 c
267.0347 366.2686 267.0024 366.7158 266.7065 366.9727 c
266.4106 367.2285 265.9629 367.1963 265.707 366.9004 c
f267.2041 363.3965 m
265.584 361.501 261.1216 356.3877 259.9424 355.5029 c
259.6294 355.2686 259.5659 354.8242 259.8008 354.5117 c
260.0356 354.1982 260.48 354.1348 260.793 354.3691 c
262.3379 355.5283 268.0396 362.1934 268.2813 362.4766 c
268.5356 362.7734 268.5005 363.2207 268.2031 363.4756 c
267.9058 363.7295 267.458 363.6943 267.2041 363.3965 c
f267.0859 357.9053 m
264.8428 355.3604 260.4473 350.3936 259.8667 349.8125 c
259.5898 349.5361 259.5898 349.0869 259.8667 348.8105 c
260.1436 348.5342 260.5918 348.5332 260.8687 348.8105 c
261.626 349.5674 267.8833 356.666 268.1494 356.9678 c
268.4082 357.2617 268.3799 357.709 268.0864 357.9678 c
267.7925 358.2266 267.3452 358.1982 267.0859 357.9053 c
f267.5923 352.5371 m
267.5327 352.4707 261.5942 345.915 260.7417 345.0625 c
260.4648 344.7861 260.4648 344.3369 260.7417 344.0605 c
261.0186 343.7842 261.4668 343.7832 261.7437 344.0605 c
262.6211 344.9375 268.3975 351.3145 268.6431 351.5859 c
268.9058 351.876 268.8838 352.3242 268.5933 352.5869 c
268.3032 352.8496 267.855 352.8271 267.5923 352.5371 c
f267.4526 347.3955 m
264.3896 343.792 260.8525 339.7607 260.3306 339.3877 c
260.0122 339.1611 259.9385 338.7178 260.166 338.3994 c
260.3936 338.0811 260.8364 338.0078 261.1548 338.2354 c
262.0552 338.8779 267.4585 345.2139 268.5327 346.4775 c
268.7861 346.7754 268.7495 347.2227 268.4517 347.4766 c
268.1533 347.7295 267.7065 347.6934 267.4526 347.3955 c
f266.3955 340.4434 m
264.0728 336.8105 261.2871 332.8193 260.646 332.4297 c
260.3164 332.2295 260.1968 331.7949 260.3911 331.4619 c
260.585 331.1279 260.9995 331.0049 261.3369 331.1924 c
262.5259 331.8525 266.4233 337.8555 267.5898 339.6797 c
267.8003 340.0098 267.7041 340.4473 267.3745 340.6582 c
267.0444 340.8691 266.6064 340.7725 266.3955 340.4434 c
f267.1836 335.4971 m
265.0762 332.7939 261.5801 328.3643 261.1709 327.9854 c
260.8999 327.7344 260.8496 327.3027 261.0786 327.0117 c
261.3071 326.7217 261.7031 326.6416 262.0107 326.8467 c
262.127 326.9248 262.481 327.1602 268.3013 334.626 c
268.542 334.9346 268.4868 335.3799 268.1782 335.6201 c
267.8696 335.8613 267.4248 335.8057 267.1836 335.4971 c
f267.3975 330.8418 m
267.1714 330.6416 261.8438 325.9141 260.4517 324.2695 c
260.1987 323.9707 260.2363 323.5234 260.5347 323.2705 c
260.8335 323.0176 261.2808 323.0547 261.5337 323.3535 c
262.8604 324.9219 268.2832 329.7324 268.3379 329.7813 c
268.6304 330.041 268.6577 330.4883 268.3979 330.7813 c
268.1382 331.0742 267.6904 331.1016 267.3975 330.8418 c
f267.9492 326.2666 m
262.1992 319.3916 L
261.9478 319.0908 261.9878 318.6436 262.2881 318.3926 c
262.5884 318.1416 263.0352 318.1816 263.2861 318.4814 C
269.0361 325.3564 L
269.2876 325.6572 269.2476 326.1045 268.9473 326.3555 c
268.647 326.6064 268.2002 326.5664 267.9492 326.2666 C
f292.4756 322.9209 m
292.208 322.6348 292.2217 322.1865 292.5088 321.9189 C
296.3838 318.2939 L
296.6689 318.0264 297.1182 318.041 297.3857 318.3271 c
297.6533 318.6133 297.6377 319.0615 297.3525 319.3291 C
293.4775 322.9541 L
293.1904 323.2217 292.7432 323.207 292.4756 322.9209 c
f292.5068 328.0771 m
292.2217 327.8086 292.208 327.3594 292.4775 327.0752 C
300.8525 318.2002 L
301.1201 317.915 301.5693 317.9023 301.8545 318.1709 c
302.1396 318.4395 302.1514 318.8887 301.8838 319.1729 C
293.5088 328.0479 L
293.2393 328.333 292.79 328.3457 292.5068 328.0771 c
f291.9873 333.4326 m
291.7119 333.1533 291.7178 332.7051 291.9971 332.4307 C
304.9971 319.6807 L
305.2764 319.4063 305.7236 319.4111 305.999 319.6904 c
306.2725 319.9697 306.2686 320.418 305.9893 320.6924 C
292.9893 333.4424 L
292.71 333.7168 292.2607 333.7119 291.9873 333.4326 c
f291.8584 338.6787 m
291.5869 338.3975 291.5947 337.9492 291.876 337.6768 C
303.001 326.9268 L
303.2822 326.6553 303.7295 326.6631 304.0029 326.9443 c
304.2744 327.2256 304.2666 327.6738 303.9854 327.9463 C
292.8604 338.6963 L
292.5791 338.9678 292.1299 338.96 291.8584 338.6787 c
f292.0967 343.167 m
291.8311 342.8799 291.8486 342.4316 292.1377 342.166 C
302.0127 333.041 L
302.2998 332.7754 302.7471 332.793 303.0127 333.0811 c
303.2783 333.3682 303.2607 333.8164 302.9736 334.082 C
293.0986 343.207 L
292.8115 343.4727 292.3623 343.4551 292.0967 343.167 c
f292.4248 349.1152 m
292.1201 348.8701 292.0693 348.4248 292.3135 348.1191 C
298.8135 339.9941 L
299.0596 339.6885 299.5049 339.6387 299.8096 339.8828 c
300.1162 340.1279 300.165 340.5732 299.9209 340.8789 C
293.4209 349.0039 L
293.1768 349.3096 292.7314 349.3594 292.4248 349.1152 c
f293.2822 353.7246 m
292.9834 353.4697 292.9502 353.0225 293.2041 352.7256 C
300.7041 343.9756 L
300.96 343.6777 301.4072 343.6436 301.7041 343.8984 c
302.001 344.1533 302.0361 344.6006 301.7803 344.8975 C
294.2803 353.6475 L
294.0264 353.9453 293.5791 353.9795 293.2822 353.7246 c
f295.0068 356.7031 m
294.7217 356.4346 294.708 355.9863 294.9756 355.7012 C
302.7256 347.4512 L
302.9951 347.166 303.4424 347.1523 303.7275 347.4199 c
304.0127 347.6885 304.0264 348.1367 303.7588 348.4219 C
296.0088 356.6719 L
295.7412 356.957 295.292 356.9707 295.0068 356.7031 c
f299.5947 368.6484 m
299.2705 368.4287 299.1865 367.9883 299.4053 367.6641 C
305.1553 359.1641 L
305.376 358.8398 305.8154 358.7549 306.1396 358.9746 c
306.4639 359.1943 306.5498 359.6348 306.3291 359.959 C
300.5791 368.459 L
300.3604 368.7832 299.9189 368.8682 299.5947 368.6484 c
f302.1201 371.665 m
301.7881 371.459 301.6846 371.0225 301.8896 370.6895 C
308.1396 360.5645 L
308.3447 360.2314 308.7822 360.1279 309.1143 360.333 c
309.4482 360.5391 309.5518 360.9756 309.3467 361.3086 C
303.0967 371.4336 L
302.8896 371.7666 302.4541 371.8701 302.1201 371.665 c
f304.0146 373.6758 m
303.6748 373.4805 303.5576 373.0479 303.7529 372.708 C
309.5029 362.708 L
309.6982 362.3691 310.1318 362.252 310.4717 362.4473 c
310.8096 362.6426 310.9268 363.0752 310.7314 363.415 C
304.9814 373.415 L
304.7861 373.7539 304.3545 373.8711 304.0146 373.6758 c
f306.751 377.167 m
306.415 376.9648 306.3096 376.5283 306.5127 376.1943 C
313.6377 364.4443 L
313.8389 364.1094 314.2764 364.0029 314.6104 364.2061 c
314.9443 364.4082 315.0518 364.8447 314.8486 365.1787 C
307.7236 376.9287 L
307.5205 377.2637 307.085 377.3701 306.751 377.167 c
f308.6436 379.4277 m
308.3037 379.2354 308.1826 378.8027 308.376 378.4619 C
314.251 368.0869 L
314.4443 367.7471 314.876 367.627 315.2178 367.8203 c
315.5576 368.0127 315.6768 368.4453 315.4834 368.7861 C
309.6084 379.1611 L
309.417 379.501 308.9834 379.6211 308.6436 379.4277 c
f309.8311 383.2637 m
309.5127 383.0361 309.4385 382.5938 309.665 382.2754 C
318.04 370.5254 L
318.2686 370.2061 318.71 370.1318 319.0283 370.3594 c
319.3486 370.5869 319.4229 371.0293 319.1943 371.3477 C
310.8193 383.0977 L
310.5928 383.417 310.1494 383.4912 309.8311 383.2637 c
f310.542 387.6084 m
310.2393 387.3604 310.1963 386.9131 310.4463 386.6113 C
318.5713 376.7363 L
318.8193 376.4336 319.2666 376.3906 319.5674 376.6396 c
319.8701 376.8877 319.9131 377.335 319.665 377.6367 C
311.54 387.5117 L
311.292 387.8145 310.8447 387.8574 310.542 387.6084 c
f312.6162 389.6875 m
312.3408 389.4111 312.3389 388.9619 312.6162 388.6855 C
319.1162 382.1855 L
319.3936 381.9092 319.8428 381.9082 320.1182 382.1855 c
320.3955 382.4619 320.3955 382.9111 320.1182 383.1875 C
313.6182 389.6875 L
313.3428 389.9639 312.8936 389.9639 312.6162 389.6875 c
f313.458 395.7646 m
313.1396 395.5391 313.0635 395.0967 313.29 394.7773 C
319.04 386.6523 L
319.2646 386.333 319.708 386.2568 320.0264 386.4834 c
320.3467 386.709 320.4229 387.1514 320.1963 387.4707 C
314.4463 395.5957 L
314.2197 395.915 313.7783 395.9912 313.458 395.7646 c
f313.3115 399.498 m
313.001 399.2598 312.9424 398.8145 313.1807 398.5049 c
315.6689 395.2705 319.4443 390.3486 319.6533 390.042 c
319.874 389.7197 320.3135 389.6338 320.6377 389.8516 c
320.96 390.0693 321.0479 390.5049 320.833 390.8291 c
320.5771 391.2139 314.9463 398.5352 314.3037 399.3682 c
314.0654 399.6787 313.6201 399.7373 313.3115 399.498 c
f312.6357 405.0811 m
312.3486 404.8145 312.333 404.3662 312.5986 404.0791 C
320.7236 395.3291 L
320.9893 395.043 321.4385 395.0264 321.7256 395.292 c
322.0107 395.5586 322.0283 396.0068 321.7627 396.2939 C
313.6377 405.0439 L
313.3701 405.3301 312.9229 405.3467 312.6357 405.0811 c
f312.3037 411.8682 m
311.9971 411.625 311.9443 411.1797 312.1865 410.8721 C
321.5615 398.9971 L
321.8037 398.6904 322.249 398.6377 322.5576 398.8799 c
322.8643 399.123 322.917 399.5684 322.6748 399.876 C
313.2998 411.751 L
313.0557 412.0576 312.6104 412.1104 312.3037 411.8682 c
f314.124 416.542 m
313.79 416.3389 313.6846 415.9033 313.8877 415.5684 C
321.6377 402.8184 L
321.8408 402.4844 322.2764 402.3779 322.6104 402.5811 c
322.9443 402.7842 323.0518 403.2197 322.8486 403.5547 C
315.0986 416.3047 L
314.8955 416.6387 314.46 416.7451 314.124 416.542 c
f314.9932 420.1631 m
314.6611 419.9561 314.5596 419.5186 314.7666 419.1865 C
323.2666 405.5615 L
323.4736 405.2295 323.9111 405.1279 324.2432 405.335 c
324.5752 405.542 324.6768 405.9795 324.4697 406.3115 C
315.9697 419.9365 L
315.7627 420.2686 315.3252 420.3701 314.9932 420.1631 c
f315.9736 425.4004 m
315.6475 425.1826 315.5615 424.7422 315.7783 424.417 C
324.4033 411.542 L
324.6221 411.2168 325.0615 411.1299 325.3877 411.3477 c
325.7119 411.5654 325.7998 412.0059 325.5811 412.3311 C
316.9561 425.2061 L
316.7393 425.5313 316.2979 425.6182 315.9736 425.4004 c
f316.3018 430.4922 m
315.9951 430.249 315.9443 429.8037 316.1865 429.4961 C
326.1865 416.8711 L
326.4307 416.5645 326.876 416.5127 327.1826 416.7559 c
327.4893 416.999 327.542 417.4443 327.2979 417.752 C
317.2979 430.377 L
317.0557 430.6836 316.6104 430.7354 316.3018 430.4922 c
f317.4248 434.4897 m
317.1201 434.2456 317.0693 433.7993 317.3135 433.4937 C
328.3135 419.7441 L
328.5596 419.4385 329.0049 419.3887 329.3096 419.6328 c
329.6162 419.8779 329.665 420.3232 329.4209 420.6289 C
318.4209 434.3794 L
318.1768 434.6846 317.7314 434.7344 317.4248 434.4897 c
f318.9697 439.5225 m
318.6455 439.3018 318.5615 438.8613 318.7822 438.5376 C
328.6572 424.0381 L
328.8779 423.7139 329.3174 423.6309 329.6416 423.8506 c
329.9658 424.0713 330.0479 424.5117 329.8291 424.835 C
319.9541 439.3354 L
319.7334 439.6587 319.292 439.7427 318.9697 439.5225 c
f320.9678 442.5215 m
320.6455 442.3008 320.5615 441.8599 320.7822 441.5366 C
329.4072 428.9121 L
329.6279 428.5889 330.0693 428.5059 330.3916 428.7266 c
330.7158 428.9473 330.7979 429.3877 330.5771 429.7109 C
321.9521 442.3364 L
321.7314 442.6592 321.292 442.7427 320.9678 442.5215 c
f323.3311 447.0137 m
323.0127 446.7866 322.9385 446.3438 323.165 446.0254 C
331.54 434.2754 L
331.7686 433.9565 332.21 433.8823 332.5283 434.1094 c
332.8486 434.3364 332.9229 434.7793 332.6943 435.0977 C
324.3193 446.8477 L
324.0928 447.1665 323.6494 447.2407 323.3311 447.0137 c
f325.5615 449.9995 m
325.251 449.7622 325.1924 449.3174 325.4287 449.0063 C
333.9287 437.8813 L
334.167 437.5703 334.6123 437.5107 334.9229 437.7485 c
335.2334 437.9858 335.2939 438.4307 335.0557 438.7417 C
326.5557 449.8667 L
326.3174 450.1777 325.874 450.2373 325.5615 449.9995 c
f327.3057 453.1196 m
326.9971 452.8779 326.9443 452.4326 327.1846 452.1245 C
335.3096 441.7495 L
335.5518 441.4414 335.9971 441.3872 336.3037 441.6284 c
336.6123 441.8701 336.667 442.3154 336.4248 442.6235 C
328.2998 452.9985 L
328.0596 453.3066 327.6143 453.3608 327.3057 453.1196 c
f329.9443 455.7554 m
329.6299 455.522 329.5654 455.0781 329.7998 454.7637 C
336.6748 445.5137 L
336.9072 445.1997 337.3506 445.1343 337.665 445.3677 c
337.9795 445.6011 338.0439 446.0449 337.8115 446.3594 C
330.9365 455.6094 L
330.7021 455.9233 330.2588 455.9888 329.9443 455.7554 c
f331.8643 459.0356 m
331.5342 458.8267 331.4346 458.3892 331.6436 458.0581 C
337.6436 448.5581 L
337.8525 448.2271 338.29 448.1284 338.6221 448.3374 c
338.9521 448.5464 339.0518 448.9839 338.8428 449.3149 C
332.8428 458.8149 L
332.6338 459.146 332.1943 459.2446 331.8643 459.0356 c
f335.001 462.2158 m
334.6416 462.0825 334.4502 461.7002 334.5713 461.3374 c
334.7002 460.9507 337.9658 454.6675 339.3643 451.9839 c
339.5459 451.6367 339.9736 451.502 340.3193 451.6831 c
340.667 451.8638 340.8018 452.292 340.6221 452.6392 c
338.8193 456.0952 336.0771 461.3896 335.9072 461.8091 c
335.7627 462.1626 335.3584 462.3486 335.001 462.2158 c
f348.5342 462.3115 m
348.5342 458.0615 L
348.5342 457.6699 348.8506 457.353 349.2432 457.353 c
349.6338 457.353 349.9521 457.6699 349.9521 458.0615 C
349.9521 462.3115 L
349.9521 462.7031 349.6338 463.02 349.2432 463.02 c
348.8506 463.02 348.5342 462.7031 348.5342 462.3115 C
f351.8389 461.584 m
349.3389 455.584 L
349.1885 455.2227 349.3584 454.8081 349.7197 454.6572 c
350.0811 454.5068 350.4971 454.6777 350.6475 455.0391 C
353.1475 461.0391 L
353.2979 461.4004 353.126 461.8149 352.7646 461.9658 c
352.4033 462.1162 351.9893 461.9453 351.8389 461.584 C
f354.6064 459.873 m
351.6064 453.748 L
351.4346 453.3965 351.5791 452.9727 351.9307 452.8003 c
352.2822 452.6279 352.7061 452.7734 352.8799 453.125 C
355.8799 459.25 L
356.0518 459.6016 355.9053 460.0254 355.5537 460.1978 c
355.2021 460.3701 354.7783 460.2246 354.6064 459.873 C
f356.9717 455.416 m
352.7217 450.791 L
352.4561 450.5029 352.4756 450.0547 352.7627 449.7896 c
353.0518 449.5249 353.499 449.5439 353.7646 449.832 C
358.0146 454.457 L
358.2783 454.7451 358.2607 455.1934 357.9717 455.4585 c
357.6846 455.7231 357.2354 455.7041 356.9717 455.416 C
fULB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
